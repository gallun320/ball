11.10 13:05:23 TIMER: Starting timer...
11.10 13:05:23 TIMER: Timer running...
11.10 13:05:23 DB: SELECT * FROM GameVars
11.10 13:05:23 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
11.10 13:05:23 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
11.10 13:05:23 DB: SELECT * FROM Shops WHERE ID = 1
11.10 13:05:23 TEMP: load ./tmp/quest_daily_ids
11.10 13:05:23 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
11.10 13:05:23 TEMP: save ./tmp/quest_daily_ids
11.10 13:05:23 NET: ??? request core/server.login { host => 127.0.0.1, name => ball.0, port => 2010, type => game, _type => core/server.login, externalHost => 127.0.0.1, externalPort => 2010 }
11.10 13:05:23 QUEUE: ball.0 (thread) response server.login
11.10 13:05:23 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
11.10 13:05:23 DB: SELECT * FROM LocalizationStrings
11.10 13:05:23 QUEUE: ball.0 (thread) response core/server.query
11.10 13:05:23 TIME: core/server.query : 8.3 ms
11.10 13:05:23 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
11.10 13:05:23 DB: SELECT * FROM GameVars
11.10 13:05:23 QUEUE: ball.0 (thread) response core/server.query
11.10 13:05:23 TIME: core/server.query : 0.74 ms
11.10 13:05:23 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
11.10 13:05:23 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
11.10 13:05:23 QUEUE: ball.0 (thread) response core/server.query
11.10 13:05:23 TIME: core/server.query : 0.69 ms
11.10 13:05:23 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
11.10 13:05:23 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
11.10 13:05:23 QUEUE: ball.0 (thread) response core/server.query
11.10 13:05:23 TIME: core/server.query : 0.48 ms
11.10 13:05:23 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
11.10 13:05:23 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
11.10 13:05:23 QUEUE: ball.0 (thread) response core/server.query
11.10 13:05:23 TIME: core/server.query : 0.59 ms
11.10 13:05:23 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
11.10 13:05:23 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
11.10 13:05:23 QUEUE: ball.0 (thread) response core/server.query
11.10 13:05:23 TIME: core/server.query : 0.88 ms
11.10 13:05:23 NET: ball.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
11.10 13:05:23 QUEUE: ball.0 (thread) response core/quest.getDaily
11.10 13:05:23 TIME: core/quest.getDaily : 0.03 ms
11.10 13:05:23 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
11.10 13:05:23 DB: SELECT * FROM UserAttributeTypes
11.10 13:05:23 QUEUE: ball.0 (thread) response core/server.query
11.10 13:05:23 TIME: core/server.query : 0.44 ms
11.10 13:05:23 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
11.10 13:05:23 DB: SELECT * FROM UserVariableTypes
11.10 13:05:23 QUEUE: ball.0 (thread) response core/server.query
11.10 13:05:23 TIME: core/server.query : 0.42 ms
11.10 13:05:23 NET: ball.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
11.10 13:05:23 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Not11.10 13:06:22 TIMER: Starting timer...
11.10 13:06:22 TIMER: Timer running...
11.10 13:06:22 DB: SELECT * FROM GameVars
11.10 13:06:22 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
11.10 13:06:22 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
11.10 13:06:22 DB: SELECT * FROM Shops WHERE ID = 1
11.10 13:06:22 TEMP: load ./tmp/quest_daily_ids
11.10 13:06:22 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
11.10 13:06:22 TEMP: save ./tmp/quest_daily_ids
11.10 13:06:22 NET: ??? request core/server.login { host => 172.16.35.23, name => ball.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
11.10 13:06:22 QUEUE: ball.0 (thread) response server.login
11.10 13:06:22 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
11.10 13:06:22 DB: SELECT * FROM LocalizationStrings
11.10 13:06:22 QUEUE: ball.0 (thread) response core/server.query
11.10 13:06:22 TIME: core/server.query : 8.98 ms
11.10 13:06:22 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
11.10 13:06:22 DB: SELECT * FROM GameVars
11.10 13:06:22 QUEUE: ball.0 (thread) response core/server.query
11.10 13:06:22 TIME: core/server.query : 0.69 ms
11.10 13:06:22 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
11.10 13:06:22 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
11.10 13:06:22 QUEUE: ball.0 (thread) response core/server.query
11.10 13:06:22 TIME: core/server.query : 1.21 ms
11.10 13:06:22 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
11.10 13:06:22 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
11.10 13:06:22 QUEUE: ball.0 (thread) response core/server.query
11.10 13:06:22 TIME: core/server.query : 1.01 ms
11.10 13:06:22 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
11.10 13:06:22 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
11.10 13:06:22 QUEUE: ball.0 (thread) response core/server.query
11.10 13:06:22 TIME: core/server.query : 1.39 ms
11.10 13:06:22 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
11.10 13:06:22 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
11.10 13:06:22 QUEUE: ball.0 (thread) response core/server.query
11.10 13:06:22 TIME: core/server.query : 1.83 ms
11.10 13:06:22 NET: ball.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
11.10 13:06:22 QUEUE: ball.0 (thread) response core/quest.getDaily
11.10 13:06:22 TIME: core/quest.getDaily : 0.04 ms
11.10 13:06:22 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
11.10 13:06:22 DB: SELECT * FROM UserAttributeTypes
11.10 13:06:22 QUEUE: ball.0 (thread) response core/server.query
11.10 13:06:22 TIME: core/server.query : 0.71 ms
11.10 13:06:22 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
11.10 13:06:22 DB: SELECT * FROM UserVariableTypes
11.10 13:06:22 QUEUE: ball.0 (thread) response core/server.query
11.10 13:06:22 TIME: core/server.query : 0.47 ms
11.10 13:06:22 NET: ball.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
11.10 13:06:22 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name11.10 13:07:31 TIMER: Starting timer...
11.10 13:07:31 TIMER: Timer running...
11.10 13:07:31 DB: SELECT * FROM GameVars
11.10 13:07:31 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
11.10 13:07:31 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
11.10 13:07:31 DB: SELECT * FROM Shops WHERE ID = 1
11.10 13:07:31 TEMP: load ./tmp/quest_daily_ids
11.10 13:07:31 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
11.10 13:07:31 TEMP: save ./tmp/quest_daily_ids
11.10 13:07:31 NET: ??? request core/server.login { host => 172.16.35.23, name => ball.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
11.10 13:07:31 QUEUE: ball.0 (thread) response server.login
11.10 13:07:31 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
11.10 13:07:31 DB: SELECT * FROM LocalizationStrings
11.10 13:07:31 QUEUE: ball.0 (thread) response core/server.query
11.10 13:07:31 TIME: core/server.query : 6.07 ms
11.10 13:07:31 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
11.10 13:07:31 DB: SELECT * FROM GameVars
11.10 13:07:31 QUEUE: ball.0 (thread) response core/server.query
11.10 13:07:31 TIME: core/server.query : 0.51 ms
11.10 13:07:31 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
11.10 13:07:31 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
11.10 13:07:31 QUEUE: ball.0 (thread) response core/server.query
11.10 13:07:31 TIME: core/server.query : 0.6 ms
11.10 13:07:31 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
11.10 13:07:31 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
11.10 13:07:31 QUEUE: ball.0 (thread) response core/server.query
11.10 13:07:31 TIME: core/server.query : 0.47 ms
11.10 13:07:31 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
11.10 13:07:31 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
11.10 13:07:31 QUEUE: ball.0 (thread) response core/server.query
11.10 13:07:31 TIME: core/server.query : 0.53 ms
11.10 13:07:31 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
11.10 13:07:31 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
11.10 13:07:31 QUEUE: ball.0 (thread) response core/server.query
11.10 13:07:31 TIME: core/server.query : 0.88 ms
11.10 13:07:31 NET: ball.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
11.10 13:07:31 QUEUE: ball.0 (thread) response core/quest.getDaily
11.10 13:07:31 TIME: core/quest.getDaily : 0.02 ms
11.10 13:07:31 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
11.10 13:07:31 DB: SELECT * FROM UserAttributeTypes
11.10 13:07:31 QUEUE: ball.0 (thread) response core/server.query
11.10 13:07:31 TIME: core/server.query : 0.52 ms
11.10 13:07:31 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
11.10 13:07:31 DB: SELECT * FROM UserVariableTypes
11.10 13:07:31 QUEUE: ball.0 (thread) response core/server.query
11.10 13:07:31 TIME: core/server.query : 0.59 ms
11.10 13:07:31 NET: ball.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
11.10 13:07:31 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
11.10 13:07:31 QUEUE: ball.0 (thread) response core/server.query
11.10 13:07:31 TIME: core/server.query : 1.22 ms
11.10 13:07:31 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
11.10 13:07:31 DB: SELECT * FROM ItemGroups
11.10 13:07:31 QUEUE: ball.0 (thread) response core/server.query
11.10 13:07:31 TIME: core/server.query : 0.32 ms
11.10 13:07:31 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
11.10 13:07:31 DB: SELECT * FROM Bundles ORDER BY ID
11.10 13:07:31 QUEUE: ball.0 (thread) response core/server.query
11.10 13:07:31 TIME: core/server.query : 0.65 ms
11.10 13:07:31 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
11.10 13:07:31 DB: SELECT * FROM BundleItems ORDER BY ID
11.10 13:07:31 QUEUE: ball.0 (thread) response core/server.query
11.10 13:07:31 TIME: core/server.query : 0.6 ms
11.10 13:07:31 NET: ball.0 (thread) request core/shop.getList { _type => core/shop.getList }
11.10 13:07:31 QUEUE: ball.0 (thread) response core/shop.getList
11.10 13:07:31 TIME: core/shop.getList : 0.04 ms
11.10 13:07:31 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
11.10 13:07:31 DB: SELECT * FROM EffectAttributeTypes
11.10 13:07:31 QUEUE: ball.0 (thread) response core/server.query
11.10 13:07:31 TIME: core/server.query : 0.5 ms
11.10 13:07:31 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
11.10 13:07:31 DB: SELECT * FROM Effects
11.10 13:07:31 QUEUE: ball.0 (thread) response core/server.query
11.10 13:07:31 TIME: core/server.query : 0.34 ms
11.10 13:07:31 NET: ball.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
11.10 13:07:31 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
11.10 13:07:31 QUEUE: ball.0 (thread) response core/server.query
11.10 13:07:31 TIME: core/server.query : 0.91 ms
11.10 13:07:31 NET: ball.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
11.10 13:07:31 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
11.10 13:07:31 QUEUE: ball.0 (thread) response core/server.query
11.10 13:07:31 TIME: core/server.query : 0.6 ms
11.10 13:07:31 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
11.10 13:07:31 DB: SELECT * FROM Badges
11.10 13:07:31 QUEUE: ball.0 (thread) response core/server.query
11.10 13:07:31 TIME: core/server.query : 0.48 ms
11.10 13:07:31 TIMER: Clans cache...
11.10 13:07:31 TIMER: Clans cache: 0ms
11.10 13:07:31 TIMER: Clans cache...
11.10 13:07:31 TIMER: Clans cache: 0ms
11.10 13:07:31 TIMER: Clans cache...
11.10 13:07:31 TIMER: Clans cache: 0ms
11.10 13:07:31 TIMER: Clans cache...
11.10 13:07:31 TIMER: Clans cache: 0ms
11.10 13:07:31 TIMER: Clans cache...
11.10 13:07:31 TIMER: Clans cache: 0ms
11.10 13:07:31 TIMER: Clans cache...
11.10 13:07:31 TIMER: Clans cache: 0ms
11.10 13:07:31 TIMER: Clans cache...
11.10 13:07:31 TIMER: Clans cache: 0ms
11.10 13:07:31 TIMER: Clans cache...
11.10 13:07:31 TIMER: Clans cache: 0ms
11.10 13:07:31 TIMER: Clans cache...
11.10 13:07:31 TIMER: Clans cache: 0ms
11.10 13:07:31 TIMER: Clans cache...
11.10 13:07:31 TIMER: Clans cache: 0ms
11.10 13:07:31 TIMER: Clans cache...
11.10 13:07:31 TIMER: Clans cache: 0ms
11.10 13:07:31 TIMER: Clans cache...
11.10 13:07:31 TIMER: Clans cache: 0ms
11.10 13:07:31 TIMER: Clans cache...
11.10 13:07:31 TIMER: Clans cache: 0ms
11.10 13:07:31 TIMER: Clans cache...
11.10 13:07:31 TIMER: Clans cache: 0ms
11.10 13:21:50 NET: ball.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'testname' AND Password = E'', _type => core/server.query }
11.10 13:21:50 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'testname' AND Password = E''
11.10 13:21:50 QUEUE: ball.0 (thread) response core/server.query
11.10 13:21:50 TIME: core/server.query : 1.45 ms
11.10 13:22:31 TIMER: Clans cache...
11.10 13:22:31 TIMER: Clans cache: 0ms
11.10 13:22:31 TIMER: Clans cache...
11.10 13:22:31 TIMER: Clans cache: 0ms
11.10 13:23:56 NET: ball.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'testname' AND Password = E'', _type => core/server.query }
11.10 13:23:56 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'testname' AND Password = E''
11.10 13:23:56 QUEUE: ball.0 (thread) response core/server.query
11.10 13:23:56 TIME: core/server.query : 1.2 ms
11.10 13:24:31 TIMER: Clans cache...
11.10 13:24:31 TIMER: Clans cache: 0ms
11.10 13:24:31 TIMER: Clans cache...
11.10 13:24:31 TIMER: Clans cache: 0ms
11.10 13:24:31 TIMER: Clans cache...
11.10 13:24:31 TIMER: Clans cache: 0ms
11.10 13:24:31 TIMER: Clans cache...
11.10 13:24:31 TIMER: Clans cache: 0ms
11.10 13:24:31 TIMER: Clans cache...
11.10 13:24:31 TIMER: Clans cache: 0ms
11.10 13:24:31 TIMER: Clans cache...
11.10 13:24:31 TIMER: Clans cache: 0ms
11.10 13:24:31 TIMER: Clans cache...
11.10 13:24:31 TIMER: Clans cache: 0ms
11.10 13:24:31 TIMER: Clans cache...
11.10 13:24:31 TIMER: Clans cache: 0ms
11.10 13:32:32 TIMER: Clans cache...
11.10 13:32:32 TIMER: Clans cache: 0ms
11.10 13:33:20 NET: ball.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'testname' AND Password = E'', _type => core/server.query }
11.10 13:33:20 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'testname' AND Password = E''
11.10 13:33:20 QUEUE: ball.0 (thread) response core/server.query
11.10 13:33:20 TIME: core/server.query : 1.41 ms
11.10 13:33:32 TIMER: Clans cache...
11.10 13:33:32 TIMER: Clans cache: 0ms
11.10 13:33:32 TIMER: Clans cache...
11.10 13:33:32 TIMER: Clans cache: 0ms
11.10 13:33:32 TIMER: Clans cache...
11.10 13:33:32 TIMER: Clans cache: 0ms
11.10 13:33:32 TIMER: Clans cache...
11.10 13:33:32 TIMER: Clans cache: 0ms
11.10 13:36:57 NET: ball.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Jsd' AND Password = E'', _type => core/server.query }
11.10 13:36:57 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Jsd' AND Password = E''
11.10 13:36:57 QUEUE: ball.0 (thread) response core/server.query
11.10 13:36:57 TIME: core/server.query : 1.47 ms
11.10 13:37:32 TIMER: Clans cache...
11.10 13:37:32 TIMER: Clans cache: 0ms
11.10 13:37:32 TIMER: Clans cache...
11.10 13:37:32 TIMER: Clans cache: 0ms
11.10 13:38:54 NET: ball.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Jsd' AND Password = E'', _type => core/server.query }
11.10 13:38:54 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Jsd' AND Password = E''
11.10 13:38:54 QUEUE: ball.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
11.10 13:38:54 TIME: core/server.query : 0.6 ms
11.10 13:39:32 TIMER: Clans cache...
11.10 13:39:32 TIMER: Clans cache: 0ms
11.10 13:39:32 TIMER: Clans cache...
11.10 13:39:32 TIMER: Clans cache: 0ms
11.10 13:41:25 NET: ball.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Jsd' AND Password = E'', _type => core/server.query }
11.10 13:41:25 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Jsd' AND Password = E''
11.10 13:41:25 QUEUE: ball.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
11.10 13:41:25 TIME: core/server.query : 0.79 ms
11.10 13:41:32 TIMER: Clans cache...
11.10 13:41:32 TIMER: Clans cache: 0ms
11.10 13:41:32 TIMER: Clans cache...
11.10 13:41:32 TIMER: Clans cache: 0ms
11.10 13:41:32 TIMER: Clans cache...
11.10 13:41:32 TIMER: Clans cache: 0ms
11.10 13:41:32 TIMER: Clans cache...
11.10 13:41:32 TIMER: Clans cache: 0ms
11.10 13:41:32 TIMER: Clans cache...
11.10 13:41:32 TIMER: Clans cache: 0ms
11.10 13:41:32 TIMER: Clans cache...
11.10 13:41:32 TIMER: Clans cache: 0ms
11.10 13:41:32 TIMER: Clans cache...
11.10 13:41:32 TIMER: Clans cache: 0ms
11.10 13:41:32 TIMER: Clans cache...
11.10 13:41:32 TIMER: Clans cache: 0ms
11.10 13:41:32 TIMER: Clans cache...
11.10 13:41:32 TIMER: Clans cache: 0ms
11.10 13:41:32 TIMER: Clans cache...
11.10 13:41:32 TIMER: Clans cache: 0ms
11.10 13:41:32 TIMER: Clans cache...
11.10 13:41:32 TIMER: Clans cache: 0ms
11.10 13:41:32 TIMER: Clans cache...
11.10 13:41:32 TIMER: Clans cache: 0ms
11.10 13:41:32 TIMER: Clans cache...
11.10 13:41:32 TIMER: Clans cache: 0ms
11.10 13:41:32 TIMER: Clans cache...
11.10 13:41:32 TIMER: Clans cache: 0ms
11.10 13:41:32 TIMER: Clans cache...
11.10 13:41:32 TIMER: Clans cache: 0ms
11.10 13:41:32 TIMER: Clans cache...
11.10 13:41:32 TIMER: Clans cache: 0ms
11.10 13:41:32 TIMER: Clans cache...
11.10 13:41:32 TIMER: Clans cache: 0ms
11.10 13:57:51 NET: ball.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'И' AND Password = E'blooperson', _type => core/server.query }
11.10 13:57:51 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'И' AND Password = E'blooperson'
11.10 13:57:51 QUEUE: ball.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
11.10 13:57:51 TIME: core/server.query : 0.49 ms
11.10 13:57:55 NET: ball.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'И' AND Password = E'blooperson', _type => core/server.query }
11.10 13:57:55 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'И' AND Password = E'blooperson'
11.10 13:57:55 QUEUE: ball.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
11.10 13:57:55 TIME: core/server.query : 0.64 ms
11.10 13:58:32 TIMER: Clans cache...
11.10 13:58:32 TIMER: Clans cache: 0ms
11.10 13:58:32 TIMER: Clans cache...
11.10 13:58:32 TIMER: Clans cache: 0ms
11.10 13:58:32 PENDING: INSERT INTO LogUserOnlineCount (Date, Min, Max, Avg) VALUES (now(), 0, 0, 0)
11.10 13:58:32 TIMER: Clans cache...
11.10 13:58:32 TIMER: Clans cache: 0ms
