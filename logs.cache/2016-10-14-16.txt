14.10 16:23:38 TIMER: Starting timer...
14.10 16:23:38 TIMER: Timer running...
14.10 16:23:38 DB: SELECT * FROM GameVars
14.10 16:23:38 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 16:23:39 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 16:23:39 DB: SELECT * FROM Shops WHERE ID = 1
14.10 16:23:39 TEMP: load ./tmp/quest_daily_ids
14.10 16:23:39 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
14.10 16:23:39 TEMP: save ./tmp/quest_daily_ids
14.10 16:23:39 NET: ??? request core/server.login { host => 172.16.35.23, name => ball.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 16:23:39 QUEUE: ball.0 (thread) response server.login
14.10 16:23:39 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 16:23:39 DB: SELECT * FROM LocalizationStrings
14.10 16:23:39 QUEUE: ball.0 (thread) response core/server.query
14.10 16:23:39 TIME: core/server.query : 101.94 ms
14.10 16:23:39 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 16:23:39 DB: SELECT * FROM GameVars
14.10 16:23:39 QUEUE: ball.0 (thread) response core/server.query
14.10 16:23:39 TIME: core/server.query : 1.25 ms
14.10 16:23:39 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 16:23:39 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 16:23:39 QUEUE: ball.0 (thread) response core/server.query
14.10 16:23:39 TIME: core/server.query : 2.34 ms
14.10 16:23:39 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 16:23:39 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 16:23:39 QUEUE: ball.0 (thread) response core/server.query
14.10 16:23:39 TIME: core/server.query : 1.44 ms
14.10 16:23:39 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 16:23:39 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 16:23:39 QUEUE: ball.0 (thread) response core/server.query
14.10 16:23:39 TIME: core/server.query : 1.75 ms
14.10 16:23:39 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 16:23:39 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 16:23:39 QUEUE: ball.0 (thread) response core/server.query
14.10 16:23:39 TIME: core/server.query : 27.61 ms
14.10 16:23:39 NET: ball.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
14.10 16:23:39 QUEUE: ball.0 (thread) response core/quest.getDaily
14.10 16:23:39 TIME: core/quest.getDaily : 0.04 ms
14.10 16:23:39 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 16:23:39 DB: SELECT * FROM UserAttributeTypes
14.10 16:23:39 QUEUE: ball.0 (thread) response core/server.query
14.10 16:23:39 TIME: core/server.query : 27.89 ms
14.10 16:23:39 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 16:23:39 DB: SELECT * FROM UserVariableTypes
14.10 16:23:39 QUEUE: ball.0 (thread) response core/server.query
14.10 16:23:39 TIME: core/server.query : 29.98 ms
14.10 16:23:39 NET: ball.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 16:23:39 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 16:23:39 QUEUE: ball.0 (thread) response core/server.query
14.10 16:23:39 TIME: core/server.query : 23.83 ms
14.10 16:23:39 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
14.10 16:23:39 DB: SELECT * FROM ItemGroups
14.10 16:23:39 QUEUE: ball.0 (thread) response core/server.query
14.10 16:23:39 TIME: core/server.query : 0.98 ms
14.10 16:23:39 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
14.10 16:23:39 DB: SELECT * FROM Bundles ORDER BY ID
14.10 16:23:39 QUEUE: ball.0 (thread) response core/server.query
14.10 16:23:39 TIME: core/server.query : 1.93 ms
14.10 16:23:39 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
14.10 16:23:39 DB: SELECT * FROM BundleItems ORDER BY ID
14.10 16:23:39 QUEUE: ball.0 (thread) response core/server.query
14.10 16:23:39 TIME: core/server.query : 23.11 ms
14.10 16:23:39 NET: ball.0 (thread) request core/shop.getList { _type => core/shop.getList }
14.10 16:23:39 QUEUE: ball.0 (thread) response core/shop.getList
14.10 16:23:39 TIME: core/shop.getList : 0.03 ms
14.10 16:23:39 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
14.10 16:23:39 DB: SELECT * FROM EffectAttributeTypes
14.10 16:23:39 QUEUE: ball.0 (thread) response core/server.query
14.10 16:23:39 TIME: core/server.query : 1.14 ms
14.10 16:23:39 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
14.10 16:23:39 DB: SELECT * FROM Effects
14.10 16:23:39 QUEUE: ball.0 (thread) response core/server.query
14.10 16:23:39 TIME: core/server.query : 0.83 ms
14.10 16:23:39 NET: ball.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
14.10 16:23:39 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 16:23:39 QUEUE: ball.0 (thread) response core/server.query
14.10 16:23:39 TIME: core/server.query : 0.94 ms
14.10 16:23:39 NET: ball.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
14.10 16:23:39 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 16:23:39 QUEUE: ball.0 (thread) response core/server.query
14.10 16:23:39 TIME: core/server.query : 0.69 ms
14.10 16:23:39 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
14.10 16:23:39 DB: SELECT * FROM Badges
14.10 16:23:39 QUEUE: ball.0 (thread) response core/server.query
14.10 16:23:39 TIME: core/server.query : 27.92 ms
14.10 16:23:44 TIMER: Top Users...
14.10 16:23:44 TIMER: Top Users: 0ms
14.10 16:23:49 TIMER: Top Users...
14.10 16:23:49 TIMER: Top Users: 0ms
14.10 16:23:54 TIMER: Top Users...
14.10 16:23:54 TIMER: Top Users: 0ms
14.10 16:23:59 TIMER: Top Users...
14.10 16:23:59 TIMER: Top Users: 0ms
14.10 16:24:04 TIMER: Top Users...
14.10 16:24:04 TIMER: Top Users: 0ms
14.10 16:24:09 TIMER: Top Users...
14.10 16:24:09 TIMER: Top Users: 0ms
14.10 16:24:14 TIMER: Top Users...
14.10 16:24:14 TIMER: Top Users: 0ms
14.10 16:24:19 TIMER: Top Users...
14.10 16:24:19 TIMER: Top Users: 0ms
14.10 16:24:24 TIMER: Top Users...
14.10 16:24:24 TIMER: Top Users: 0ms
14.10 16:24:29 TIMER: Top Users...
14.10 16:24:29 TIMER: Top Users: 0ms
14.10 16:24:34 TIMER: Top Users...
14.10 16:24:34 TIMER: Top Users: 0ms
14.10 16:24:39 TIMER: Clans cache...
14.10 16:24:39 TIMER: Clans cache: 0ms
14.10 16:24:39 TIMER: Top Users...
14.10 16:24:39 TIMER: Top Users: 0ms
14.10 16:24:44 TIMER: Top Users...
14.10 16:24:44 TIMER: Top Users: 0ms
14.10 16:24:49 TIMER: Top Users...
14.10 16:24:49 TIMER: Top Users: 0ms
14.10 16:24:54 TIMER: Top Users...
14.10 16:24:54 TIMER: Top Users: 0ms
14.10 16:24:59 TIMER: Top Users...
14.10 16:24:59 TIMER: Top Users: 0ms
14.10 16:25:04 TIMER: Top Users...
14.10 16:25:04 TIMER: Top Users: 0ms
14.10 16:25:09 TIMER: Top Users...
14.10 16:25:09 TIMER: Top Users: 0ms
14.10 16:25:14 TIMER: Top Users...
14.10 16:25:14 TIMER: Top Users: 0ms
14.10 16:25:19 TIMER: Top Users...
14.10 16:25:19 TIMER: Top Users: 0ms
14.10 16:25:24 TIMER: Top Users...
14.10 16:25:24 TIMER: Top Users: 0ms
14.10 16:25:29 TIMER: Top Users...
14.10 16:25:29 TIMER: Top Users: 0ms
14.10 16:25:34 TIMER: Top Users...
14.10 16:25:34 TIMER: Top Users: 0ms
14.10 16:25:39 TIMER: Clans cache...
14.10 16:25:39 TIMER: Clans cache: 0ms
14.10 16:25:39 TIMER: Top Users...
14.10 16:25:39 TIMER: Top Users: 0ms
14.10 16:25:44 TIMER: Top Users...
14.10 16:25:44 TIMER: Top Users: 0ms
14.10 16:25:49 TIMER: Top Users...
14.10 16:25:49 TIMER: Top Users: 0ms
14.10 16:25:54 TIMER: Top Users...
14.10 16:25:54 TIMER: Top Users: 0ms
14.10 16:25:59 TIMER: Top Users...
14.10 16:25:59 TIMER: Top Users: 0ms
14.10 16:26:04 TIMER: Top Users...
14.10 16:26:04 TIMER: Top Users: 0ms
14.10 16:26:09 TIMER: Top Users...
14.10 16:26:09 TIMER: Top Users: 0ms
14.10 16:26:14 TIMER: Top Users...
14.10 16:26:14 TIMER: Top Users: 0ms
14.10 16:26:19 TIMER: Top Users...
14.10 16:26:19 TIMER: Top Users: 0ms
14.10 16:26:24 TIMER: Top Users...
14.10 16:26:24 TIMER: Top Users: 0ms
14.10 16:26:29 TIMER: Top Users...
14.10 16:26:29 TIMER: Top Users: 0ms
14.10 16:26:34 TIMER: Top Users...
14.10 16:26:34 TIMER: Top Users: 0ms
14.10 16:26:39 TIMER: Clans cache...
14.10 16:26:39 TIMER: Clans cache: 0ms
14.10 16:26:39 TIMER: Top Users...
14.10 16:26:39 TIMER: Top Users: 0ms
14.10 16:26:44 TIMER: Top Users...
14.10 16:26:44 TIMER: Top Users: 0ms
14.10 16:26:49 TIMER: Top Users...
14.10 16:26:49 TIMER: Top Users: 0ms
14.10 16:26:54 TIMER: Top Users...
14.10 16:26:54 TIMER: Top Users: 0ms
14.10 16:26:59 TIMER: Top Users...
14.10 16:26:59 TIMER: Top Users: 0ms
14.10 16:27:04 TIMER: Top Users...
14.10 16:27:04 TIMER: Top Users: 0ms
14.10 16:27:09 TIMER: Top Users...
14.10 16:27:09 TIMER: Top Users: 0ms
14.10 16:27:14 TIMER: Top Users...
14.10 16:27:14 TIMER: Top Users: 0ms
14.10 16:27:19 TIMER: Top Users...
14.10 16:27:19 TIMER: Top Users: 0ms
14.10 16:27:24 TIMER: Top Users...
14.10 16:27:24 TIMER: Top Users: 0ms
14.10 16:27:29 TIMER: Top Users...
14.10 16:27:29 TIMER: Top Users: 0ms
14.10 16:27:34 TIMER: Top Users...
14.10 16:27:34 TIMER: Top Users: 0ms
14.10 16:27:39 TIMER: Clans cache...
14.10 16:27:39 TIMER: Clans cache: 0ms
14.10 16:27:39 TIMER: Top Users...
14.10 16:27:39 TIMER: Top Users: 0ms
14.10 16:27:44 TIMER: Top Users...
14.10 16:27:44 TIMER: Top Users: 0ms
14.10 16:27:49 TIMER: Top Users...
14.10 16:27:49 TIMER: Top Users: 0ms
14.10 16:27:54 TIMER: Top Users...
14.10 16:27:54 TIMER: Top Users: 0ms
14.10 16:27:59 TIMER: Top Users...
14.10 16:27:59 TIMER: Top Users: 0ms
14.10 16:28:04 TIMER: Top Users...
14.10 16:28:04 TIMER: Top Users: 0ms
14.10 16:28:09 TIMER: Top Users...
14.10 16:28:09 TIMER: Top Users: 0ms
14.10 16:28:14 TIMER: Top Users...
14.10 16:28:14 TIMER: Top Users: 0ms
14.10 16:28:19 TIMER: Top Users...
14.10 16:28:19 TIMER: Top Users: 0ms
14.10 16:28:24 TIMER: Top Users...
14.10 16:28:24 TIMER: Top Users: 0ms
14.10 16:28:29 TIMER: Top Users...
14.10 16:28:29 TIMER: Top Users: 0ms
14.10 16:28:34 TIMER: Top Users...
14.10 16:28:34 TIMER: Top Users: 0ms
14.10 16:28:39 TIMER: Clans cache...
14.10 16:28:39 TIMER: Clans cache: 0ms
14.10 16:28:39 TIMER: Top Users...
14.10 16:28:39 TIMER: Top Users: 0ms
14.10 16:28:44 TIMER: Top Users...
14.10 16:28:44 TIMER: Top Users: 0ms
14.10 16:28:49 TIMER: Top Users...
14.10 16:28:49 TIMER: Top Users: 0ms
14.10 16:28:54 TIMER: Top Users...
14.10 16:28:54 TIMER: Top Users: 0ms
14.10 16:28:59 TIMER: Top Users...
14.10 16:28:59 TIMER: Top Users: 0ms
14.10 16:29:04 TIMER: Top Users...
14.10 16:29:04 TIMER: Top Users: 0ms
14.10 16:29:09 TIMER: Top Users...
14.10 16:29:09 TIMER: Top Users: 0ms
14.10 16:29:12 NET: ball.0 (thread) request core/server.query { q => SELECT ID FROM Users WHERE Name = E'test1', _type => core/server.query }
14.10 16:29:12 DB: SELECT ID FROM Users WHERE Name = E'test1'
14.10 16:29:12 QUEUE: ball.0 (thread) response core/server.query
14.10 16:29:12 TIME: core/server.query : 117.73 ms
14.10 16:29:12 NET: ball.0 (thread) request core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
14.10 16:29:12 DB: SELECT nextval('Users_id_seq') AS id
14.10 16:29:12 QUEUE: ball.0 (thread) response core/server.query
14.10 16:29:12 TIME: core/server.query : 225.51 ms
14.10 16:29:12 NET: ball.0 (thread) request core/user.register { password => test, name => test1, fullParams => { password => test, name => test1, networkid => , networktype => , messageType => user.register, id => 2 }, networkid => , connectionID => 3235154, networktype => , email => , id => 2, _type => core/user.register }
14.10 16:29:12 QUEUE: ball.0 (thread) response core/user.register
14.10 16:29:12 TIME: core/user.register : 0.09 ms
14.10 16:29:12 ASYNCDB: INSERT INTO Users (ID, Name, NetworkID, NetworkType, Password, Email, RegDate) VALUES (2,E'test1',E'',E'',E'test',E'', now())
14.10 16:29:12 ASYNCDB: INSERT INTO UserRatings (UserID, Points) VALUES (2, 0)
14.10 16:29:12 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
14.10 16:29:12 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
14.10 16:29:12 STATS: cache [user], database [334 calls, 0 reads, 0 writes]
14.10 16:29:12 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
14.10 16:29:12 READDB: SELECT * FROM Users WHERE ID = 2
14.10 16:29:12 STATS: cache manager [1], get [1 calls, total 0.07 sec spent, avg 67.35 ms]
14.10 16:29:12 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
14.10 16:29:12 READDB: SELECT * FROM Users WHERE ID = 1
14.10 16:29:12 READDB: SELECT ID FROM UserQuests WHERE ID = 2
14.10 16:29:12 READDB: INSERT INTO UserQuests (ID) VALUES (2)
14.10 16:29:12 QUEUE: ball.0 (thread) response core/user.registerResponse
14.10 16:29:14 TIMER: Top Users...
14.10 16:29:14 TIMER: Top Users: 0ms
14.10 16:29:18 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-10-14 16:29:12.59098+03', language = E'  ', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}' WHERE ID = 2
14.10 16:29:19 TIMER: Top Users...
14.10 16:29:19 TIMER: Top Users: 0ms
14.10 16:29:23 BLOCKREMOVE: user 1 removed
14.10 16:29:24 TIMER: Top Users...
14.10 16:29:24 TIMER: Top Users: 0ms
14.10 16:29:28 BLOCKREMOVE: user 2 removed
14.10 16:29:29 TIMER: Top Users...
14.10 16:29:29 TIMER: Top Users: 0ms
14.10 16:29:34 TIMER: Top Users...
14.10 16:29:34 TIMER: Top Users: 0ms
14.10 16:29:39 TIMER: Clans cache...
14.10 16:29:39 TIMER: Clans cache: 0ms
14.10 16:29:39 TIMER: Top Users...
14.10 16:29:39 TIMER: Top Users: 0ms
14.10 16:29:44 TIMER: Top Users...
14.10 16:29:44 TIMER: Top Users: 0ms
14.10 16:29:49 TIMER: Top Users...
14.10 16:29:49 TIMER: Top Users: 0ms
14.10 16:29:54 TIMER: Top Users...
14.10 16:29:54 TIMER: Top Users: 0ms
14.10 16:30:16 TIMER: Starting timer...
14.10 16:30:16 DB: SELECT * FROM GameVars
14.10 16:30:16 TIMER: Timer running...
14.10 16:30:16 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 16:30:16 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 16:30:16 DB: SELECT * FROM Shops WHERE ID = 1
14.10 16:30:16 TEMP: load ./tmp/quest_daily_ids
14.10 16:30:16 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
14.10 16:30:16 TEMP: save ./tmp/quest_daily_ids
14.10 16:30:16 NET: ??? request core/server.login { host => 172.16.35.23, name => ball.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 16:30:16 QUEUE: ball.0 (thread) response server.login
14.10 16:30:16 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 16:30:16 DB: SELECT * FROM LocalizationStrings
14.10 16:30:16 QUEUE: ball.0 (thread) response core/server.query
14.10 16:30:16 TIME: core/server.query : 24.99 ms
14.10 16:30:16 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 16:30:16 DB: SELECT * FROM GameVars
14.10 16:30:16 QUEUE: ball.0 (thread) response core/server.query
14.10 16:30:16 TIME: core/server.query : 0.9 ms
14.10 16:30:16 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 16:30:16 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 16:30:16 QUEUE: ball.0 (thread) response core/server.query
14.10 16:30:16 TIME: core/server.query : 1.41 ms
14.10 16:30:16 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 16:30:16 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 16:30:16 QUEUE: ball.0 (thread) response core/server.query
14.10 16:30:16 TIME: core/server.query : 0.84 ms
14.10 16:30:16 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 16:30:16 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 16:30:16 QUEUE: ball.0 (thread) response core/server.query
14.10 16:30:16 TIME: core/server.query : 1.1 ms
14.10 16:30:16 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 16:30:16 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 16:30:16 QUEUE: ball.0 (thread) response core/server.query
14.10 16:30:16 TIME: core/server.query : 1.59 ms
14.10 16:30:16 NET: ball.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
14.10 16:30:16 QUEUE: ball.0 (thread) response core/quest.getDaily
14.10 16:30:16 TIME: core/quest.getDaily : 0.1 ms
14.10 16:30:16 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 16:30:16 DB: SELECT * FROM UserAttributeTypes
14.10 16:30:16 QUEUE: ball.0 (thread) response core/server.query
14.10 16:30:16 TIME: core/server.query : 1.77 ms
14.10 16:30:16 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 16:30:16 DB: SELECT * FROM UserVariableTypes
14.10 16:30:16 QUEUE: ball.0 (thread) response core/server.query
14.10 16:30:16 TIME: core/server.query : 1.17 ms
14.10 16:30:16 NET: ball.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 16:30:16 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 16:30:16 QUEUE: ball.0 (thread) response core/server.query
14.10 16:30:16 TIME: core/server.query : 2.7 ms
14.10 16:30:16 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
14.10 16:30:16 DB: SELECT * FROM ItemGroups
14.10 16:30:16 QUEUE: ball.0 (thread) response core/server.query
14.10 16:30:16 TIME: core/server.query : 1.54 ms
14.10 16:30:16 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
14.10 16:30:16 DB: SELECT * FROM Bundles ORDER BY ID
14.10 16:30:16 QUEUE: ball.0 (thread) response core/server.query
14.10 16:30:16 TIME: core/server.query : 1.55 ms
14.10 16:30:16 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
14.10 16:30:16 DB: SELECT * FROM BundleItems ORDER BY ID
14.10 16:30:16 QUEUE: ball.0 (thread) response core/server.query
14.10 16:30:16 TIME: core/server.query : 1.08 ms
14.10 16:30:16 NET: ball.0 (thread) request core/shop.getList { _type => core/shop.getList }
14.10 16:30:16 QUEUE: ball.0 (thread) response core/shop.getList
14.10 16:30:16 TIME: core/shop.getList : 0.04 ms
14.10 16:30:16 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
14.10 16:30:16 DB: SELECT * FROM EffectAttributeTypes
14.10 16:30:16 QUEUE: ball.0 (thread) response core/server.query
14.10 16:30:16 TIME: core/server.query : 0.97 ms
14.10 16:30:16 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
14.10 16:30:16 DB: SELECT * FROM Effects
14.10 16:30:16 QUEUE: ball.0 (thread) response core/server.query
14.10 16:30:16 TIME: core/server.query : 1.38 ms
14.10 16:30:16 NET: ball.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
14.10 16:30:16 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 16:30:16 QUEUE: ball.0 (thread) response core/server.query
14.10 16:30:16 TIME: core/server.query : 1.64 ms
14.10 16:30:16 NET: ball.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
14.10 16:30:16 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 16:30:16 QUEUE: ball.0 (thread) response core/server.query
14.10 16:30:16 TIME: core/server.query : 1.25 ms
14.10 16:30:16 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
14.10 16:30:16 DB: SELECT * FROM Badges
14.10 16:30:16 QUEUE: ball.0 (thread) response core/server.query
14.10 16:30:16 TIME: core/server.query : 1.22 ms
14.10 16:30:21 TIMER: Top Users...
14.10 16:30:21 QUEUE: ball.0 (thread) response battle.testEvent
14.10 16:30:21 TIMER: Top Users: 0ms
14.10 16:30:26 TIMER: Top Users...
14.10 16:30:26 QUEUE: ball.0 (thread) response battle.testEvent
14.10 16:30:26 TIMER: Top Users: 0ms
14.10 16:30:31 TIMER: Top Users...
14.10 16:30:31 QUEUE: ball.0 (thread) response battle.testEvent
14.10 16:30:31 TIMER: Top Users: 0ms
14.10 16:30:36 TIMER: Top Users...
14.10 16:30:36 QUEUE: ball.0 (thread) response battle.testEvent
14.10 16:30:36 TIMER: Top Users: 0ms
14.10 16:30:41 TIMER: Top Users...
14.10 16:30:41 QUEUE: ball.0 (thread) response battle.testEvent { _isNotify => true, amount => 10, _type => battle.testEvent }
14.10 16:30:41 TIMER: Top Users: 0ms
14.10 16:30:46 TIMER: Top Users...
14.10 16:30:46 QUEUE: ball.0 (thread) response battle.testEvent { _isNotify => true, amount => 10, _type => battle.testEvent }
14.10 16:30:46 TIMER: Top Users: 0ms
14.10 16:30:51 TIMER: Top Users...
14.10 16:30:51 QUEUE: ball.0 (thread) response battle.testEvent { _isNotify => true, amount => 10, _type => battle.testEvent }
14.10 16:30:51 TIMER: Top Users: 0ms
14.10 16:30:56 TIMER: Top Users...
14.10 16:30:56 QUEUE: ball.0 (thread) response battle.testEvent { _isNotify => true, amount => 10, _type => battle.testEvent }
14.10 16:30:56 TIMER: Top Users: 0ms
14.10 16:31:01 TIMER: Top Users...
14.10 16:31:01 QUEUE: ball.0 (thread) response battle.testEvent { _isNotify => true, amount => 10, _type => battle.testEvent }
14.10 16:31:01 TIMER: Top Users: 0ms
14.10 16:31:06 TIMER: Top Users...
14.10 16:31:06 QUEUE: ball.0 (thread) response battle.testEvent { _isNotify => true, amount => 10, _type => battle.testEvent }
14.10 16:31:06 TIMER: Top Users: 0ms
14.10 16:31:11 TIMER: Top Users...
14.10 16:31:11 QUEUE: ball.0 (thread) response battle.testEvent { _isNotify => true, amount => 10, _type => battle.testEvent }
14.10 16:31:11 TIMER: Top Users: 0ms
14.10 16:31:27 TIMER: Starting timer...
14.10 16:31:27 TIMER: Timer running...
14.10 16:31:27 DB: SELECT * FROM GameVars
14.10 16:31:27 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 16:31:27 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 16:31:27 DB: SELECT * FROM Shops WHERE ID = 1
14.10 16:31:27 TEMP: load ./tmp/quest_daily_ids
14.10 16:31:27 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
14.10 16:31:27 TEMP: save ./tmp/quest_daily_ids
14.10 16:31:27 NET: ??? request core/server.login { host => 172.16.35.23, name => ball.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 16:31:27 QUEUE: ball.0 (thread) response server.login
14.10 16:31:27 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 16:31:27 DB: SELECT * FROM LocalizationStrings
14.10 16:31:27 QUEUE: ball.0 (thread) response core/server.query
14.10 16:31:27 TIME: core/server.query : 19.08 ms
14.10 16:31:27 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 16:31:27 DB: SELECT * FROM GameVars
14.10 16:31:27 QUEUE: ball.0 (thread) response core/server.query
14.10 16:31:27 TIME: core/server.query : 1.78 ms
14.10 16:31:27 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 16:31:27 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 16:31:27 QUEUE: ball.0 (thread) response core/server.query
14.10 16:31:27 TIME: core/server.query : 2.43 ms
14.10 16:31:27 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 16:31:27 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 16:31:27 QUEUE: ball.0 (thread) response core/server.query
14.10 16:31:27 TIME: core/server.query : 1.17 ms
14.10 16:31:27 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 16:31:27 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 16:31:27 QUEUE: ball.0 (thread) response core/server.query
14.10 16:31:27 TIME: core/server.query : 2.21 ms
14.10 16:31:27 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 16:31:27 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 16:31:27 QUEUE: ball.0 (thread) response core/server.query
14.10 16:31:27 TIME: core/server.query : 2.67 ms
14.10 16:31:27 NET: ball.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
14.10 16:31:27 QUEUE: ball.0 (thread) response core/quest.getDaily
14.10 16:31:27 TIME: core/quest.getDaily : 0.06 ms
14.10 16:31:27 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 16:31:27 DB: SELECT * FROM UserAttributeTypes
14.10 16:31:27 QUEUE: ball.0 (thread) response core/server.query
14.10 16:31:27 TIME: core/server.query : 1.51 ms
14.10 16:31:27 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 16:31:27 DB: SELECT * FROM UserVariableTypes
14.10 16:31:27 QUEUE: ball.0 (thread) response core/server.query
14.10 16:31:27 TIME: core/server.query : 1.1 ms
14.10 16:31:27 NET: ball.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 16:31:27 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 16:31:27 QUEUE: ball.0 (thread) response core/server.query
14.10 16:31:27 TIME: core/server.query : 3.32 ms
14.10 16:31:27 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
14.10 16:31:27 DB: SELECT * FROM ItemGroups
14.10 16:31:27 QUEUE: ball.0 (thread) response core/server.query
14.10 16:31:27 TIME: core/server.query : 1.31 ms
14.10 16:31:27 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
14.10 16:31:27 DB: SELECT * FROM Bundles ORDER BY ID
14.10 16:31:27 QUEUE: ball.0 (thread) response core/server.query
14.10 16:31:27 TIME: core/server.query : 1.83 ms
14.10 16:31:27 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
14.10 16:31:27 DB: SELECT * FROM BundleItems ORDER BY ID
14.10 16:31:27 QUEUE: ball.0 (thread) response core/server.query
14.10 16:31:27 TIME: core/server.query : 1.7 ms
14.10 16:31:27 NET: ball.0 (thread) request core/shop.getList { _type => core/shop.getList }
14.10 16:31:27 QUEUE: ball.0 (thread) response core/shop.getList
14.10 16:31:27 TIME: core/shop.getList : 0.07 ms
14.10 16:31:27 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
14.10 16:31:27 DB: SELECT * FROM EffectAttributeTypes
14.10 16:31:27 QUEUE: ball.0 (thread) response core/server.query
14.10 16:31:27 TIME: core/server.query : 1.19 ms
14.10 16:31:27 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
14.10 16:31:27 DB: SELECT * FROM Effects
14.10 16:31:27 QUEUE: ball.0 (thread) response core/server.query
14.10 16:31:27 TIME: core/server.query : 0.96 ms
14.10 16:31:27 NET: ball.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
14.10 16:31:27 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 16:31:27 QUEUE: ball.0 (thread) response core/server.query
14.10 16:31:27 TIME: core/server.query : 2.45 ms
14.10 16:31:27 NET: ball.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
14.10 16:31:27 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 16:31:27 QUEUE: ball.0 (thread) response core/server.query
14.10 16:31:27 TIME: core/server.query : 1.91 ms
14.10 16:31:27 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
14.10 16:31:27 DB: SELECT * FROM Badges
14.10 16:31:27 QUEUE: ball.0 (thread) response core/server.query
14.10 16:31:27 TIME: core/server.query : 1.34 ms
14.10 16:31:32 TIMER: Top Users...
14.10 16:31:32 QUEUE: ball.0 (thread) response battle.testEvent
14.10 16:31:32 TIMER: Top Users: 0ms
14.10 16:31:37 TIMER: Top Users...
14.10 16:31:37 QUEUE: ball.0 (thread) response battle.testEvent
14.10 16:31:37 TIMER: Top Users: 0ms
14.10 16:31:42 TIMER: Top Users...
14.10 16:31:42 QUEUE: ball.0 (thread) response battle.testEvent
14.10 16:31:42 TIMER: Top Users: 0ms
14.10 16:31:58 TIMER: Starting timer...
14.10 16:31:58 TIMER: Timer running...
14.10 16:31:58 DB: SELECT * FROM GameVars
14.10 16:31:58 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 16:31:58 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 16:31:58 DB: SELECT * FROM Shops WHERE ID = 1
14.10 16:31:58 TEMP: load ./tmp/quest_daily_ids
14.10 16:31:58 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
14.10 16:31:58 TEMP: save ./tmp/quest_daily_ids
14.10 16:31:58 NET: ??? request core/server.login { host => 172.16.35.23, name => ball.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 16:31:58 QUEUE: ball.0 (thread) response server.login
14.10 16:31:58 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 16:31:58 DB: SELECT * FROM LocalizationStrings
14.10 16:31:58 QUEUE: ball.0 (thread) response core/server.query
14.10 16:31:58 TIME: core/server.query : 21.97 ms
14.10 16:31:58 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 16:31:58 DB: SELECT * FROM GameVars
14.10 16:31:58 QUEUE: ball.0 (thread) response core/server.query
14.10 16:31:58 TIME: core/server.query : 1.44 ms
14.10 16:31:58 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 16:31:58 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 16:31:58 QUEUE: ball.0 (thread) response core/server.query
14.10 16:31:58 TIME: core/server.query : 1.72 ms
14.10 16:31:58 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 16:31:58 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 16:31:58 QUEUE: ball.0 (thread) response core/server.query
14.10 16:31:58 TIME: core/server.query : 1.19 ms
14.10 16:31:58 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 16:31:58 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 16:31:58 QUEUE: ball.0 (thread) response core/server.query
14.10 16:31:58 TIME: core/server.query : 1.93 ms
14.10 16:31:58 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 16:31:58 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 16:31:58 QUEUE: ball.0 (thread) response core/server.query
14.10 16:31:58 TIME: core/server.query : 2.25 ms
14.10 16:31:58 NET: ball.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
14.10 16:31:58 QUEUE: ball.0 (thread) response core/quest.getDaily
14.10 16:31:58 TIME: core/quest.getDaily : 0.4 ms
14.10 16:31:58 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 16:31:58 DB: SELECT * FROM UserAttributeTypes
14.10 16:31:58 QUEUE: ball.0 (thread) response core/server.query
14.10 16:31:58 TIME: core/server.query : 1.07 ms
14.10 16:31:58 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 16:31:58 DB: SELECT * FROM UserVariableTypes
14.10 16:31:58 QUEUE: ball.0 (thread) response core/server.query
14.10 16:31:58 TIME: core/server.query : 1.3 ms
14.10 16:31:58 NET: ball.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 16:31:58 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 16:31:58 QUEUE: ball.0 (thread) response core/server.query
14.10 16:31:58 TIME: core/server.query : 2.43 ms
14.10 16:31:58 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
14.10 16:31:58 DB: SELECT * FROM ItemGroups
14.10 16:31:58 QUEUE: ball.0 (thread) response core/server.query
14.10 16:31:58 TIME: core/server.query : 2.91 ms
14.10 16:31:58 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
14.10 16:31:58 DB: SELECT * FROM Bundles ORDER BY ID
14.10 16:31:58 QUEUE: ball.0 (thread) response core/server.query
14.10 16:31:58 TIME: core/server.query : 1.44 ms
14.10 16:31:58 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
14.10 16:31:58 DB: SELECT * FROM BundleItems ORDER BY ID
14.10 16:31:58 QUEUE: ball.0 (thread) response core/server.query
14.10 16:31:58 TIME: core/server.query : 2.03 ms
14.10 16:31:58 NET: ball.0 (thread) request core/shop.getList { _type => core/shop.getList }
14.10 16:31:58 QUEUE: ball.0 (thread) response core/shop.getList
14.10 16:31:58 TIME: core/shop.getList : 0.06 ms
14.10 16:31:58 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
14.10 16:31:58 DB: SELECT * FROM EffectAttributeTypes
14.10 16:31:58 QUEUE: ball.0 (thread) response core/server.query
14.10 16:31:58 TIME: core/server.query : 1.76 ms
14.10 16:31:58 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
14.10 16:31:58 DB: SELECT * FROM Effects
14.10 16:31:58 QUEUE: ball.0 (thread) response core/server.query
14.10 16:31:58 TIME: core/server.query : 1.52 ms
14.10 16:31:58 NET: ball.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
14.10 16:31:58 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 16:31:58 QUEUE: ball.0 (thread) response core/server.query
14.10 16:31:58 TIME: core/server.query : 2.04 ms
14.10 16:31:58 NET: ball.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
14.10 16:31:58 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 16:31:58 QUEUE: ball.0 (thread) response core/server.query
14.10 16:31:58 TIME: core/server.query : 1.66 ms
14.10 16:31:58 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
14.10 16:31:58 DB: SELECT * FROM Badges
14.10 16:31:58 QUEUE: ball.0 (thread) response core/server.query
14.10 16:31:58 TIME: core/server.query : 0.94 ms
14.10 16:32:03 TIMER: Top Users...
14.10 16:32:03 QUEUE: ball.0 (thread) response battle.testEvent
14.10 16:32:03 TIMER: Top Users: 0ms
14.10 16:32:08 TIMER: Top Users...
14.10 16:32:08 QUEUE: ball.0 (thread) response battle.testEvent
14.10 16:32:08 TIMER: Top Users: 0ms
14.10 16:32:13 TIMER: Top Users...
14.10 16:32:13 QUEUE: ball.0 (thread) response battle.testEvent
14.10 16:32:13 TIMER: Top Users: 0ms
14.10 16:32:18 TIMER: Top Users...
14.10 16:32:18 QUEUE: ball.0 (thread) response battle.testEvent
14.10 16:32:18 TIMER: Top Users: 0ms
14.10 16:32:23 TIMER: Top Users...
14.10 16:32:23 QUEUE: ball.0 (thread) response battle.testEvent { _isNotify => true, amount => 10, _type => battle.testEvent }
14.10 16:32:23 TIMER: Top Users: 0ms
14.10 16:32:28 TIMER: Top Users...
14.10 16:32:28 QUEUE: ball.0 (thread) response battle.testEvent { _isNotify => true, amount => 10, _type => battle.testEvent }
14.10 16:32:28 TIMER: Top Users: 0ms
14.10 16:32:33 TIMER: Top Users...
14.10 16:32:33 QUEUE: ball.0 (thread) response battle.testEvent { _isNotify => true, amount => 10, _type => battle.testEvent }
14.10 16:32:33 TIMER: Top Users: 0ms
14.10 16:32:56 TIMER: Starting timer...
14.10 16:32:56 TIMER: Timer running...
14.10 16:32:56 DB: SELECT * FROM GameVars
14.10 16:32:56 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 16:32:56 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 16:32:56 DB: SELECT * FROM Shops WHERE ID = 1
14.10 16:32:56 TEMP: load ./tmp/quest_daily_ids
14.10 16:32:56 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
14.10 16:32:56 TEMP: save ./tmp/quest_daily_ids
14.10 16:32:56 NET: ??? request core/server.login { host => 172.16.35.23, name => ball.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 16:32:56 QUEUE: ball.0 (thread) response server.login
14.10 16:32:56 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 16:32:56 DB: SELECT * FROM LocalizationStrings
14.10 16:32:56 QUEUE: ball.0 (thread) response core/server.query
14.10 16:32:56 TIME: core/server.query : 35.8 ms
14.10 16:32:56 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 16:32:56 DB: SELECT * FROM GameVars
14.10 16:32:56 QUEUE: ball.0 (thread) response core/server.query
14.10 16:32:56 TIME: core/server.query : 1.31 ms
14.10 16:32:56 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 16:32:56 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 16:32:56 QUEUE: ball.0 (thread) response core/server.query
14.10 16:32:56 TIME: core/server.query : 2.13 ms
14.10 16:32:56 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 16:32:56 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 16:32:56 QUEUE: ball.0 (thread) response core/server.query
14.10 16:32:56 TIME: core/server.query : 1.33 ms
14.10 16:32:56 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 16:32:56 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 16:32:56 QUEUE: ball.0 (thread) response core/server.query
14.10 16:32:56 TIME: core/server.query : 3.72 ms
14.10 16:32:56 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 16:32:56 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 16:32:56 QUEUE: ball.0 (thread) response core/server.query
14.10 16:32:56 TIME: core/server.query : 2.27 ms
14.10 16:32:56 NET: ball.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
14.10 16:32:56 QUEUE: ball.0 (thread) response core/quest.getDaily
14.10 16:32:56 TIME: core/quest.getDaily : 0.08 ms
14.10 16:32:56 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 16:32:56 DB: SELECT * FROM UserAttributeTypes
14.10 16:32:56 QUEUE: ball.0 (thread) response core/server.query
14.10 16:32:56 TIME: core/server.query : 1.02 ms
14.10 16:32:56 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 16:32:56 DB: SELECT * FROM UserVariableTypes
14.10 16:32:56 QUEUE: ball.0 (thread) response core/server.query
14.10 16:32:56 TIME: core/server.query : 0.83 ms
14.10 16:32:56 NET: ball.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 16:32:56 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 16:32:56 QUEUE: ball.0 (thread) response core/server.query
14.10 16:32:56 TIME: core/server.query : 3.68 ms
14.10 16:32:56 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
14.10 16:32:56 DB: SELECT * FROM ItemGroups
14.10 16:32:56 QUEUE: ball.0 (thread) response core/server.query
14.10 16:32:56 TIME: core/server.query : 1.9 ms
14.10 16:32:56 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
14.10 16:32:56 DB: SELECT * FROM Bundles ORDER BY ID
14.10 16:32:56 QUEUE: ball.0 (thread) response core/server.query
14.10 16:32:56 TIME: core/server.query : 1.77 ms
14.10 16:32:56 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
14.10 16:32:56 DB: SELECT * FROM BundleItems ORDER BY ID
14.10 16:32:56 QUEUE: ball.0 (thread) response core/server.query
14.10 16:32:56 TIME: core/server.query : 1.49 ms
14.10 16:32:56 NET: ball.0 (thread) request core/shop.getList { _type => core/shop.getList }
14.10 16:32:56 QUEUE: ball.0 (thread) response core/shop.getList
14.10 16:32:56 TIME: core/shop.getList : 0.13 ms
14.10 16:32:56 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
14.10 16:32:56 DB: SELECT * FROM EffectAttributeTypes
14.10 16:32:56 QUEUE: ball.0 (thread) response core/server.query
14.10 16:32:56 TIME: core/server.query : 1.26 ms
14.10 16:32:56 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
14.10 16:32:56 DB: SELECT * FROM Effects
14.10 16:32:56 QUEUE: ball.0 (thread) response core/server.query
14.10 16:32:56 TIME: core/server.query : 1.42 ms
14.10 16:32:56 NET: ball.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
14.10 16:32:56 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 16:32:56 QUEUE: ball.0 (thread) response core/server.query
14.10 16:32:56 TIME: core/server.query : 2.22 ms
14.10 16:32:56 NET: ball.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
14.10 16:32:56 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 16:32:56 QUEUE: ball.0 (thread) response core/server.query
14.10 16:32:56 TIME: core/server.query : 6.01 ms
14.10 16:32:56 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
14.10 16:32:56 DB: SELECT * FROM Badges
14.10 16:32:56 QUEUE: ball.0 (thread) response core/server.query
14.10 16:32:56 TIME: core/server.query : 1.52 ms
14.10 16:33:01 TIMER: Top Users...
14.10 16:33:01 QUEUE: ball.0 (thread) response battle.testEvent
14.10 16:33:01 TIMER: Top Users: 0ms
14.10 16:33:06 TIMER: Top Users...
14.10 16:33:06 QUEUE: ball.0 (thread) response battle.testEvent
14.10 16:33:06 TIMER: Top Users: 0ms
14.10 16:33:11 TIMER: Top Users...
14.10 16:33:11 QUEUE: ball.0 (thread) response battle.testEvent
14.10 16:33:11 TIMER: Top Users: 0ms
14.10 16:33:16 TIMER: Top Users...
14.10 16:33:16 QUEUE: ball.0 (thread) response battle.testEvent
14.10 16:33:16 TIMER: Top Users: 0ms
14.10 16:33:21 TIMER: Top Users...
14.10 16:33:21 QUEUE: ball.0 (thread) response battle.testEvent { _isNotify => true, amount => 10, _type => battle.testEvent }
14.10 16:33:21 TIMER: Top Users: 0ms
14.10 16:33:26 TIMER: Top Users...
14.10 16:33:26 QUEUE: ball.0 (thread) response battle.testEvent { _isNotify => true, amount => 10, _type => battle.testEvent }
14.10 16:33:26 TIMER: Top Users: 0ms
14.10 16:33:31 TIMER: Top Users...
14.10 16:33:31 QUEUE: ball.0 (thread) response battle.testEvent { _isNotify => true, amount => 10, _type => battle.testEvent }
14.10 16:33:31 TIMER: Top Users: 0ms
14.10 16:33:36 TIMER: Top Users...
14.10 16:33:36 QUEUE: ball.0 (thread) response battle.testEvent { _isNotify => true, amount => 10, _type => battle.testEvent }
14.10 16:33:36 TIMER: Top Users: 0ms
14.10 16:33:41 TIMER: Top Users...
14.10 16:33:41 QUEUE: ball.0 (thread) response battle.testEvent { _isNotify => true, amount => 10, _type => battle.testEvent }
14.10 16:33:41 TIMER: Top Users: 0ms
14.10 16:33:46 TIMER: Top Users...
14.10 16:33:46 QUEUE: ball.0 (thread) response battle.testEvent { _isNotify => true, amount => 10, _type => battle.testEvent }
14.10 16:33:46 TIMER: Top Users: 0ms
14.10 16:33:51 TIMER: Top Users...
14.10 16:33:51 QUEUE: ball.0 (thread) response battle.testEvent { _isNotify => true, amount => 10, _type => battle.testEvent }
14.10 16:33:51 TIMER: Top Users: 0ms
14.10 16:33:56 TIMER: Clans cache...
14.10 16:33:56 TIMER: Clans cache: 0ms
14.10 16:33:56 TIMER: Top Users...
14.10 16:33:56 QUEUE: ball.0 (thread) response battle.testEvent { _isNotify => true, amount => 10, _type => battle.testEvent }
14.10 16:33:56 TIMER: Top Users: 0ms
14.10 16:34:01 TIMER: Top Users...
14.10 16:34:01 QUEUE: ball.0 (thread) response battle.testEvent { _isNotify => true, amount => 10, _type => battle.testEvent }
14.10 16:34:01 TIMER: Top Users: 0ms
14.10 16:34:20 TIMER: Starting timer...
14.10 16:34:20 DB: SELECT * FROM GameVars
14.10 16:34:20 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 16:34:20 TIMER: Timer running...
14.10 16:34:20 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 16:34:20 DB: SELECT * FROM Shops WHERE ID = 1
14.10 16:34:20 TEMP: load ./tmp/quest_daily_ids
14.10 16:34:20 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
14.10 16:34:20 TEMP: save ./tmp/quest_daily_ids
14.10 16:34:20 NET: ??? request core/server.login { host => 172.16.35.23, name => ball.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 16:34:20 QUEUE: ball.0 (thread) response server.login
14.10 16:34:20 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 16:34:20 DB: SELECT * FROM LocalizationStrings
14.10 16:34:20 QUEUE: ball.0 (thread) response core/server.query
14.10 16:34:20 TIME: core/server.query : 46.01 ms
14.10 16:34:20 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 16:34:20 DB: SELECT * FROM GameVars
14.10 16:34:20 QUEUE: ball.0 (thread) response core/server.query
14.10 16:34:20 TIME: core/server.query : 1.08 ms
14.10 16:34:20 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 16:34:20 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 16:34:20 QUEUE: ball.0 (thread) response core/server.query
14.10 16:34:20 TIME: core/server.query : 1.81 ms
14.10 16:34:20 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 16:34:20 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 16:34:20 QUEUE: ball.0 (thread) response core/server.query
14.10 16:34:20 TIME: core/server.query : 1.66 ms
14.10 16:34:20 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 16:34:20 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 16:34:20 QUEUE: ball.0 (thread) response core/server.query
14.10 16:34:20 TIME: core/server.query : 1.71 ms
14.10 16:34:20 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 16:34:20 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 16:34:20 QUEUE: ball.0 (thread) response core/server.query
14.10 16:34:20 TIME: core/server.query : 3.44 ms
14.10 16:34:20 NET: ball.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
14.10 16:34:20 QUEUE: ball.0 (thread) response core/quest.getDaily
14.10 16:34:20 TIME: core/quest.getDaily : 0.06 ms
14.10 16:34:20 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 16:34:20 DB: SELECT * FROM UserAttributeTypes
14.10 16:34:20 QUEUE: ball.0 (thread) response core/server.query
14.10 16:34:20 TIME: core/server.query : 1.19 ms
14.10 16:34:20 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 16:34:20 DB: SELECT * FROM UserVariableTypes
14.10 16:34:20 QUEUE: ball.0 (thread) response core/server.query
14.10 16:34:20 TIME: core/server.query : 1.06 ms
14.10 16:34:20 NET: ball.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 16:34:20 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 16:34:20 QUEUE: ball.0 (thread) response core/server.query
14.10 16:34:20 TIME: core/server.query : 3.23 ms
14.10 16:34:20 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
14.10 16:34:20 DB: SELECT * FROM ItemGroups
14.10 16:34:20 QUEUE: ball.0 (thread) response core/server.query
14.10 16:34:20 TIME: core/server.query : 1.41 ms
14.10 16:34:20 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
14.10 16:34:20 DB: SELECT * FROM Bundles ORDER BY ID
14.10 16:34:20 QUEUE: ball.0 (thread) response core/server.query
14.10 16:34:20 TIME: core/server.query : 1.44 ms
14.10 16:34:20 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
14.10 16:34:20 DB: SELECT * FROM BundleItems ORDER BY ID
14.10 16:34:20 QUEUE: ball.0 (thread) response core/server.query
14.10 16:34:20 TIME: core/server.query : 1.7 ms
14.10 16:34:20 NET: ball.0 (thread) request core/shop.getList { _type => core/shop.getList }
14.10 16:34:20 QUEUE: ball.0 (thread) response core/shop.getList
14.10 16:34:20 TIME: core/shop.getList : 0.06 ms
14.10 16:34:20 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
14.10 16:34:20 DB: SELECT * FROM EffectAttributeTypes
14.10 16:34:20 QUEUE: ball.0 (thread) response core/server.query
14.10 16:34:20 TIME: core/server.query : 1.12 ms
14.10 16:34:20 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
14.10 16:34:20 DB: SELECT * FROM Effects
14.10 16:34:20 QUEUE: ball.0 (thread) response core/server.query
14.10 16:34:20 TIME: core/server.query : 2.15 ms
14.10 16:34:20 NET: ball.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
14.10 16:34:20 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 16:34:20 QUEUE: ball.0 (thread) response core/server.query
14.10 16:34:20 TIME: core/server.query : 2.16 ms
14.10 16:34:20 NET: ball.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
14.10 16:34:20 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 16:34:20 QUEUE: ball.0 (thread) response core/server.query
14.10 16:34:20 TIME: core/server.query : 1.87 ms
14.10 16:34:20 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
14.10 16:34:20 DB: SELECT * FROM Badges
14.10 16:34:20 QUEUE: ball.0 (thread) response core/server.query
14.10 16:34:20 TIME: core/server.query : 1.1 ms
14.10 16:34:25 TIMER: Top Users...
14.10 16:34:25 QUEUE: ball.0 (thread) response battle.testEvent
14.10 16:34:25 TIMER: Top Users: 0ms
14.10 16:34:30 TIMER: Top Users...
14.10 16:34:30 QUEUE: ball.0 (thread) response battle.testEvent
14.10 16:34:30 TIMER: Top Users: 0ms
14.10 16:34:35 TIMER: Top Users...
14.10 16:34:35 QUEUE: ball.0 (thread) response battle.testEvent
14.10 16:34:35 TIMER: Top Users: 0ms
