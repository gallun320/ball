02.11 13:02:38 NET: ball.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Bob' AND Password = E'123', _type => core/server.query }
02.11 13:02:38 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Bob' AND Password = E'123'
02.11 13:02:38 QUEUE: ball.0 (thread) response core/server.query
02.11 13:02:38 TIME: core/server.query : 1.98 ms
02.11 13:03:26 TIMER: Clans cache...
02.11 13:03:26 TIMER: Clans cache: 0ms
02.11 13:03:26 TIMER: Clans cache...
02.11 13:03:26 TIMER: Clans cache: 0ms
02.11 13:03:26 TIMER: Clans cache...
02.11 13:03:26 TIMER: Clans cache: 0ms
02.11 13:03:26 TIMER: Clans cache...
02.11 13:03:26 TIMER: Clans cache: 0ms
02.11 13:03:26 TIMER: Clans cache...
02.11 13:03:26 TIMER: Clans cache: 0ms
02.11 13:03:26 TIMER: Clans cache...
02.11 13:03:26 TIMER: Clans cache: 0ms
02.11 13:03:26 TIMER: Clans cache...
02.11 13:03:26 TIMER: Clans cache: 0ms
02.11 13:03:26 TIMER: Clans cache...
02.11 13:03:26 TIMER: Clans cache: 0ms
02.11 13:03:26 TIMER: Clans cache...
02.11 13:03:26 TIMER: Clans cache: 0ms
02.11 13:03:26 TIMER: Clans cache...
02.11 13:03:26 TIMER: Clans cache: 0ms
02.11 13:03:26 TIMER: Clans cache...
02.11 13:03:26 TIMER: Clans cache: 0ms
02.11 13:03:26 TIMER: Clans cache...
02.11 13:03:26 TIMER: Clans cache: 0ms
02.11 13:03:26 TIMER: Clans cache...
02.11 13:03:26 TIMER: Clans cache: 0ms
02.11 13:03:26 TIMER: Clans cache...
02.11 13:03:26 TIMER: Clans cache: 0ms
02.11 13:03:26 TIMER: Clans cache...
02.11 13:03:26 TIMER: Clans cache: 0ms
02.11 13:03:26 TIMER: Clans cache...
02.11 13:03:26 TIMER: Clans cache: 0ms
02.11 13:03:26 TIMER: Clans cache...
02.11 13:03:26 TIMER: Clans cache: 0ms
02.11 13:03:26 TIMER: Clans cache...
02.11 13:03:26 TIMER: Clans cache: 0ms
02.11 13:03:26 TIMER: Clans cache...
02.11 13:03:26 TIMER: Clans cache: 0ms
02.11 13:03:26 TIMER: Clans cache...
02.11 13:03:26 TIMER: Clans cache: 0ms
02.11 13:03:26 TIMER: Clans cache...
02.11 13:03:26 TIMER: Clans cache: 0ms
02.11 13:03:26 TIMER: Clans cache...
02.11 13:03:26 TIMER: Clans cache: 0ms
02.11 13:03:26 TIMER: Clans cache...
02.11 13:03:26 TIMER: Clans cache: 0ms
02.11 13:03:26 TIMER: Clans cache...
02.11 13:03:26 TIMER: Clans cache: 0ms
02.11 13:03:26 TIMER: Clans cache...
02.11 13:03:26 TIMER: Clans cache: 0ms
02.11 13:03:26 TIMER: Clans cache...
02.11 13:03:26 TIMER: Clans cache: 0ms
02.11 13:03:26 TIMER: Clans cache...
02.11 13:03:26 TIMER: Clans cache: 0ms
02.11 13:03:26 TIMER: Clans cache...
02.11 13:03:26 TIMER: Clans cache: 0ms
02.11 13:03:26 TIMER: Clans cache...
02.11 13:03:26 TIMER: Clans cache: 0ms
02.11 13:03:26 TIMER: Clans cache...
02.11 13:03:26 TIMER: Clans cache: 0ms
02.11 13:03:26 TIMER: Clans cache...
02.11 13:03:26 TIMER: Clans cache: 0ms
02.11 13:03:26 TIMER: Clans cache...
02.11 13:03:26 TIMER: Clans cache: 0ms
02.11 13:03:26 TIMER: Clans cache...
02.11 13:03:26 TIMER: Clans cache: 0ms
02.11 13:03:26 TIMER: Clans cache...
02.11 13:03:26 TIMER: Clans cache: 0ms
02.11 13:03:26 NET: ball.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'bob' AND Password = E'123', _type => core/server.query }
02.11 13:03:26 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'bob' AND Password = E'123'
02.11 13:03:26 QUEUE: ball.0 (thread) response core/server.query
02.11 13:03:26 TIME: core/server.query : 2.41 ms
02.11 13:03:26 TIMER: Clans cache...
02.11 13:03:26 TIMER: Clans cache: 0ms
02.11 13:37:38 NET: ball.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'bob' AND Password = E'bob', _type => core/server.query }
02.11 13:37:38 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'bob' AND Password = E'bob'
02.11 13:37:38 QUEUE: ball.0 (thread) response core/server.query
02.11 13:37:38 TIME: core/server.query : 2.69 ms
02.11 13:37:54 NET: ball.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'bob' AND Password = E'bob', _type => core/server.query }
02.11 13:37:54 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'bob' AND Password = E'bob'
02.11 13:37:54 QUEUE: ball.0 (thread) response core/server.query
02.11 13:37:54 TIME: core/server.query : 2.77 ms
02.11 13:37:54 NET: ball.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'bob' AND Password = E'bob', _type => core/server.query }
02.11 13:37:54 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'bob' AND Password = E'bob'
02.11 13:37:54 QUEUE: ball.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
02.11 13:37:54 TIME: core/server.query : 1.05 ms
02.11 13:37:54 NET: ball.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'bob' AND Password = E'bob', _type => core/server.query }
02.11 13:37:54 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'bob' AND Password = E'bob'
02.11 13:37:54 QUEUE: ball.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
02.11 13:37:54 TIME: core/server.query : 1.1 ms
02.11 13:37:55 NET: ball.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'bob' AND Password = E'bob', _type => core/server.query }
02.11 13:37:55 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'bob' AND Password = E'bob'
02.11 13:37:55 QUEUE: ball.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
02.11 13:37:55 TIME: core/server.query : 1.05 ms
02.11 13:38:26 TIMER: Clans cache...
02.11 13:38:26 TIMER: Clans cache: 0ms
02.11 13:38:26 TIMER: Clans cache...
02.11 13:38:26 TIMER: Clans cache: 0ms
02.11 13:38:26 TIMER: Clans cache...
02.11 13:38:26 TIMER: Clans cache: 0ms
02.11 13:38:26 TIMER: Clans cache...
02.11 13:38:26 TIMER: Clans cache: 0ms
02.11 13:38:26 TIMER: Clans cache...
02.11 13:38:26 TIMER: Clans cache: 0ms
02.11 13:38:26 TIMER: Clans cache...
02.11 13:38:26 TIMER: Clans cache: 0ms
02.11 13:43:48 NET: ball.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'bob' AND Password = E'bob', _type => core/server.query }
02.11 13:43:48 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'bob' AND Password = E'bob'
02.11 13:43:48 QUEUE: ball.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
02.11 13:43:48 TIME: core/server.query : 1.03 ms
02.11 13:44:26 TIMER: Clans cache...
02.11 13:44:26 TIMER: Clans cache: 0ms
02.11 13:44:26 TIMER: Clans cache...
02.11 13:44:26 TIMER: Clans cache: 0ms
02.11 13:44:26 TIMER: Clans cache...
02.11 13:44:26 TIMER: Clans cache: 0ms
02.11 13:44:26 TIMER: Clans cache...
02.11 13:44:26 TIMER: Clans cache: 0ms
02.11 13:44:26 TIMER: Clans cache...
02.11 13:44:26 TIMER: Clans cache: 0ms
02.11 13:44:26 TIMER: Clans cache...
02.11 13:44:26 TIMER: Clans cache: 0ms
02.11 13:49:48 NET: ball.0 (thread) request core/server.query { q => SELECT ID FROM Users WHERE Name = E'dood', _type => core/server.query }
02.11 13:49:48 DB: SELECT ID FROM Users WHERE Name = E'dood'
02.11 13:49:48 QUEUE: ball.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
02.11 13:49:48 TIME: core/server.query : 11.67 ms
02.11 13:49:48 NET: ball.0 (thread) request core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
02.11 13:49:48 DB: SELECT nextval('Users_id_seq') AS id
02.11 13:49:48 QUEUE: ball.0 (thread) response core/server.query { list => {{ id => 3 }}, errorCode => ok, _type => core/server.query }
02.11 13:49:48 TIME: core/server.query : 76.03 ms
02.11 13:49:48 NET: ball.0 (thread) request core/user.register { password => 1, name => dood, fullParams => { password => 1, name => dood, networkid => , networktype => , messageType => user.register, id => 3 }, networkid => , connectionID => 51193439, networktype => , email => , id => 3, _type => core/user.register }
02.11 13:49:48 QUEUE: ball.0 (thread) response core/user.register { errorCode => ok, _type => core/user.register }
02.11 13:49:48 TIME: core/user.register : 0.08 ms
02.11 13:49:48 ASYNCDB: INSERT INTO Users (ID, Name, NetworkID, NetworkType, Password, Email, RegDate) VALUES (3,E'dood',E'',E'',E'1',E'', now())
02.11 13:49:48 ASYNCDB: INSERT INTO UserRatings (UserID, Points) VALUES (3, 0)
02.11 13:49:48 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
02.11 13:49:48 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
02.11 13:49:48 STATS: cache [user], database [3863 calls, 0 reads, 0 writes]
02.11 13:49:48 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
02.11 13:49:48 READDB: SELECT * FROM Users WHERE ID = 3
02.11 13:49:48 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 1.68 ms]
02.11 13:49:48 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
02.11 13:49:48 READDB: SELECT * FROM Users WHERE ID = 1
02.11 13:49:48 READDB: SELECT ID FROM UserQuests WHERE ID = 3
02.11 13:49:48 READDB: INSERT INTO UserQuests (ID) VALUES (3)
02.11 13:49:48 QUEUE: ball.0 (thread) response core/user.registerResponse { password => 1, name => dood, _isNotify => true, fullParams => { password => 1, name => dood, networkid => , networktype => , messageType => user.register, id => 3 }, networkid => , connectionID => 51193439, networktype => , email => , id => 3, _type => core/user.registerResponse }
02.11 13:49:54 WRITEDB: UPDATE Users SET name = E'dood', deleted = E'false', email = E'', networktype = E'  ', password = E'1', isbanned = E'false', regdate = E'2016-11-02 13:49:48.726683+03', language = E'  ', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}' WHERE ID = 3
02.11 13:49:56 NET: ball.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'dood' AND Password = E'1', _type => core/server.query }
02.11 13:49:56 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'dood' AND Password = E'1'
02.11 13:49:56 QUEUE: ball.0 (thread) response core/server.query { list => {{ name => dood, networkid => , isbanned => false, id => 3 }}, errorCode => ok, _type => core/server.query }
02.11 13:49:56 TIME: core/server.query : 0.56 ms
02.11 13:49:56 NET: ball.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
02.11 13:49:56 QUEUE: ball.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
02.11 13:49:56 TIME: core/user.isOnlineID : 0.06 ms
02.11 13:49:56 NET: ball.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
02.11 13:49:56 QUEUE: ball.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => dood, deleted => false, email => , networktype =>   , password => 1, isbanned => false, regdate => 2016-11-02 13:49:48.726683+03, language =>   , networkid => , params => { inventory => { list => [] }, vars => {}, attrs => {}, effects => { list => [] } }}, version => 1, id => 3 } }
02.11 13:49:56 TIME: core/cache.get : 0.41 ms
02.11 13:49:56 NET: ball.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
02.11 13:49:56 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
02.11 13:49:56 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
02.11 13:49:56 STATS: cache [questdata], database [3870 calls, 0 reads, 0 writes]
02.11 13:49:56 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
02.11 13:49:56 READDB: SELECT * FROM UserQuests WHERE ID = 3
02.11 13:49:56 QUEUE: ball.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => {}}, version => 0, id => 3 } }
02.11 13:49:56 TIME: core/cache.get : 0.59 ms
02.11 13:49:56 NET: ball.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.20.227 }
02.11 13:49:56 QUEUE: ball.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
02.11 13:49:56 TIME: core/user.loginPost : 0.04 ms
02.11 13:49:56 NET: ball.0 (thread) request core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 3 AND Date = 'today'::timestamp, _type => core/server.query }
02.11 13:49:56 DB: SELECT ID FROM TempUserLogins WHERE UserID = 3 AND Date = 'today'::timestamp
02.11 13:49:56 QUEUE: ball.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
02.11 13:49:56 TIME: core/server.query : 141.76 ms
02.11 13:49:56 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (3, 'today'::timestamp)
02.11 13:49:59 BLOCKREMOVE: user 1 removed
02.11 13:50:01 NET: ball.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1478083796, lastLoginDate => 307, lastLoadDate => 1103 } }}, type => user, unlock => false, id => 3, _type => core/cache.update }
02.11 13:50:01 QUEUE: ball.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
02.11 13:50:01 TIME: core/cache.update : 0.09 ms
02.11 13:50:02 WRITEDB: UPDATE Users SET name = E'dood', deleted = E'false', email = E'', networktype = E'  ', password = E'1', isbanned = E'false', regdate = E'2016-11-02 13:49:48.726683+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478083796,"lastLoginDate":307,"lastLoadDate":1103},"effects":{"list":[]}}' WHERE ID = 3
02.11 13:50:26 TIMER: Clans cache...
02.11 13:50:26 TIMER: Clans cache: 0ms
02.11 13:50:56 NET: ball.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=3 OR secondid=3 AND finished <> true, _type => core/server.query }
02.11 13:50:56 DB: SELECT id FROM battle WHERE firstid=3 OR secondid=3 AND finished <> true
02.11 13:50:56 QUEUE: ball.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
02.11 13:50:56 TIME: core/server.query : 48.55 ms
02.11 13:50:56 NET: ball.0 (thread) request ball/cache.battle.infoRoom { roomId => 0, _type => ball/cache.battle.infoRoom }
02.11 13:50:56 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
02.11 13:50:56 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
02.11 13:50:56 STATS: cache [battle], database [3930 calls, 0 reads, 0 writes]
02.11 13:50:56 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
02.11 13:50:56 READDB: SELECT * FROM Battle WHERE ID = 0
02.11 13:50:56 TRACE: ball/cache.battle.infoRoom : Invalid field access : get
02.11 13:50:56 TRACE: ball/cache.battle.infoRoom : 
Called from modules/BallCache.hx line 70
Called from modules/BallCache.hx line 63
Called from modules/BallCache.hx line 47
Called from snipe/cache/CacheServer.hx line 487
02.11 13:50:56 QUEUE: ball.0 (thread) response ball/cache.battle.infoRoom { errorCode => _requestException, _type => ball/cache.battle.infoRoom }
02.11 13:50:56 NET: ball.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 3, _type => core/cache.update }
02.11 13:50:56 STATS: cache [user], get [3 calls, 1 cache hits, 2 cache misses, 0 same version, 0 not found]
02.11 13:50:56 STATS: cache [user], segments [9 calls, 5 hits, 3 misses]
02.11 13:50:56 STATS: cache [user], database [3930 calls, 2 reads, 2 writes]
02.11 13:50:56 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
02.11 13:50:56 STATS: cache manager [1], get [3 calls, total 0 sec spent, avg 0.74 ms]
02.11 13:50:56 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.15 ms]
02.11 13:50:56 QUEUE: ball.0 (thread) response core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
02.11 13:50:56 TIME: core/cache.update : 0.53 ms
02.11 13:50:56 NET: ball.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 3, _type => core/cache.update }
02.11 13:50:56 QUEUE: ball.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.11 13:50:56 TIME: core/cache.update : 0.12 ms
02.11 13:50:56 NET: ball.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 3, _type => core/user.logoutPost }
02.11 13:50:56 QUEUE: ball.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
02.11 13:50:56 TIME: core/user.logoutPost : 0.09 ms
02.11 13:50:56 WRITEDB: UPDATE Users SET name = E'dood', deleted = E'false', email = E'', networktype = E'  ', password = E'1', isbanned = E'false', regdate = E'2016-11-02 13:49:48.726683+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478083796,"lastLoginDate":307,"lastLoadDate":1103},"effects":{"list":[]}}' WHERE ID = 3
02.11 13:50:56 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 3
02.11 13:51:06 BLOCKREMOVE: user 3 removed
02.11 13:51:06 BLOCKREMOVE: questdata 3 removed
02.11 13:51:23 NET: ball.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'dood' AND Password = E'1', _type => core/server.query }
02.11 13:51:23 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'dood' AND Password = E'1'
02.11 13:51:23 QUEUE: ball.0 (thread) response core/server.query { list => {{ name => dood, networkid => , isbanned => false, id => 3 }}, errorCode => ok, _type => core/server.query }
02.11 13:51:23 TIME: core/server.query : 1.13 ms
02.11 13:51:23 NET: ball.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
02.11 13:51:23 QUEUE: ball.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
02.11 13:51:23 TIME: core/user.isOnlineID : 0.15 ms
02.11 13:51:23 NET: ball.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
02.11 13:51:23 READDB: SELECT * FROM Users WHERE ID = 3
02.11 13:51:23 QUEUE: ball.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => dood, deleted => false, email => , networktype =>   , password => 1, isbanned => false, regdate => 2016-11-02 13:49:48.726683+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478083796, lastLoginDate => 307, lastLoadDate => 1103 }, effects => { list => [] } }}, version => 0, id => 3 } }
02.11 13:51:23 TIME: core/cache.get : 1.58 ms
02.11 13:51:23 NET: ball.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
02.11 13:51:23 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
02.11 13:51:23 STATS: cache [questdata], segments [5 calls, 2 hits, 2 misses]
02.11 13:51:23 STATS: cache [questdata], database [3958 calls, 1 reads, 1 writes]
02.11 13:51:23 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
02.11 13:51:23 READDB: SELECT * FROM UserQuests WHERE ID = 3
02.11 13:51:23 QUEUE: ball.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 3 } }
02.11 13:51:23 TIME: core/cache.get : 1.3 ms
02.11 13:51:23 NET: ball.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.20.227 }
02.11 13:51:23 QUEUE: ball.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
02.11 13:51:23 TIME: core/user.loginPost : 0.11 ms
02.11 13:51:26 TIMER: Clans cache...
02.11 13:51:26 TIMER: Clans cache: 0ms
02.11 13:51:31 NET: ball.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=3 OR secondid=3 AND finished <> true, _type => core/server.query }
02.11 13:51:31 DB: SELECT id FROM battle WHERE firstid=3 OR secondid=3 AND finished <> true
02.11 13:51:31 QUEUE: ball.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
02.11 13:51:31 TIME: core/server.query : 1.43 ms
02.11 13:51:31 NET: ball.0 (thread) request ball/cache.battle.infoRoom { roomId => 0, _type => ball/cache.battle.infoRoom }
02.11 13:51:31 READDB: SELECT * FROM Battle WHERE ID = 0
02.11 13:51:31 TRACE: ball/cache.battle.infoRoom : Invalid field access : get
02.11 13:51:31 TRACE: ball/cache.battle.infoRoom : 
Called from modules/BallCache.hx line 70
Called from modules/BallCache.hx line 63
Called from modules/BallCache.hx line 47
Called from snipe/cache/CacheServer.hx line 487
02.11 13:51:31 QUEUE: ball.0 (thread) response ball/cache.battle.infoRoom { errorCode => _requestException, _type => ball/cache.battle.infoRoom }
02.11 13:51:31 NET: ball.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 3, _type => core/cache.update }
02.11 13:51:31 QUEUE: ball.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.11 13:51:31 TIME: core/cache.update : 0.09 ms
02.11 13:51:31 NET: ball.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 3, _type => core/cache.update }
02.11 13:51:31 QUEUE: ball.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.11 13:51:31 TIME: core/cache.update : 0.1 ms
02.11 13:51:31 NET: ball.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 3, _type => core/user.logoutPost }
02.11 13:51:31 QUEUE: ball.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
02.11 13:51:31 TIME: core/user.logoutPost : 0.08 ms
02.11 13:51:31 WRITEDB: UPDATE Users SET name = E'dood', deleted = E'false', email = E'', networktype = E'  ', password = E'1', isbanned = E'false', regdate = E'2016-11-02 13:49:48.726683+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478083796,"lastLoginDate":307,"lastLoadDate":1103},"effects":{"list":[]}}' WHERE ID = 3
02.11 13:51:31 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 3
02.11 13:51:41 BLOCKREMOVE: user 3 removed
02.11 13:51:41 BLOCKREMOVE: questdata 3 removed
02.11 13:52:26 TIMER: Clans cache...
02.11 13:52:26 TIMER: Clans cache: 0ms
02.11 13:52:26 TIMER: Clans cache...
02.11 13:52:26 TIMER: Clans cache: 0ms
02.11 13:52:26 TIMER: Clans cache...
02.11 13:52:26 TIMER: Clans cache: 0ms
02.11 13:52:26 TIMER: Clans cache...
02.11 13:52:26 TIMER: Clans cache: 0ms
02.11 13:52:26 TIMER: Clans cache...
02.11 13:52:26 TIMER: Clans cache: 0ms
02.11 13:52:26 TIMER: Clans cache...
02.11 13:52:26 TIMER: Clans cache: 0ms
02.11 13:52:26 TIMER: Clans cache...
02.11 13:52:26 TIMER: Clans cache: 0ms
02.11 13:52:26 TIMER: Clans cache...
02.11 13:52:26 TIMER: Clans cache: 0ms
02.11 13:52:26 PENDING: INSERT INTO LogUserOnlineCount (Date, Min, Max, Avg) VALUES (now(), 0, 1, 0)
02.11 13:52:26 TIMER: Clans cache...
02.11 13:52:26 TIMER: Clans cache: 0ms
02.11 13:52:26 TIMER: Clans cache...
02.11 13:52:26 TIMER: Clans cache: 0ms
02.11 13:52:26 TIMER: Clans cache...
02.11 13:52:26 TIMER: Clans cache: 0ms
02.11 13:52:26 TIMER: Clans cache...
02.11 13:52:26 TIMER: Clans cache: 0ms
02.11 13:52:26 TIMER: Clans cache...
02.11 13:52:26 TIMER: Clans cache: 0ms
02.11 13:52:26 TIMER: Clans cache...
02.11 13:52:26 TIMER: Clans cache: 0ms
02.11 13:52:26 TIMER: Clans cache...
02.11 13:52:26 TIMER: Clans cache: 0ms
02.11 13:52:26 TIMER: Clans cache...
02.11 13:52:26 TIMER: Clans cache: 0ms
02.11 13:52:26 TIMER: Clans cache...
02.11 13:52:26 TIMER: Clans cache: 0ms
02.11 13:52:26 TIMER: Clans cache...
02.11 13:52:26 TIMER: Clans cache: 0ms
02.11 13:52:26 TIMER: Clans cache...
02.11 13:52:26 TIMER: Clans cache: 0ms
02.11 13:52:26 TIMER: Clans cache...
02.11 13:52:26 TIMER: Clans cache: 0ms
02.11 13:52:26 TIMER: Clans cache...
02.11 13:52:26 TIMER: Clans cache: 0ms
02.11 13:52:26 TIMER: Clans cache...
02.11 13:52:26 TIMER: Clans cache: 0ms
02.11 13:52:26 TIMER: Clans cache...
02.11 13:52:26 TIMER: Clans cache: 0ms
02.11 13:52:26 TIMER: Clans cache...
02.11 13:52:26 TIMER: Clans cache: 0ms
02.11 13:52:26 TIMER: Clans cache...
02.11 13:52:26 TIMER: Clans cache: 0ms
02.11 13:52:26 TIMER: Clans cache...
02.11 13:52:26 TIMER: Clans cache: 0ms
02.11 13:52:26 TIMER: Clans cache...
02.11 13:52:26 TIMER: Clans cache: 0ms
02.11 13:52:26 TIMER: Clans cache...
02.11 13:52:26 TIMER: Clans cache: 0ms
02.11 13:52:26 TIMER: Clans cache...
02.11 13:52:26 TIMER: Clans cache: 0ms
02.11 13:52:26 TIMER: Clans cache...
02.11 13:52:26 TIMER: Clans cache: 0ms
