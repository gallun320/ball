11.10 11:01:20 TIMER: Starting timer...
11.10 11:01:20 TIMER: Timer running...
11.10 11:01:20 DB: SELECT * FROM GameVars
11.10 11:01:20 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
11.10 11:01:21 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
11.10 11:01:21 DB: SELECT * FROM Shops WHERE ID = 1
11.10 11:01:21 TEMP: load ./tmp/quest_daily_ids
11.10 11:01:21 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
11.10 11:01:21 TEMP: save ./tmp/quest_daily_ids
11.10 11:01:21 NET: ??? request core/server.login { host => 172.16.35.21, name => mine.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
11.10 11:01:21 QUEUE: mine.0 (thread) response server.login
11.10 11:01:21 NET: mine.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
11.10 11:01:21 DB: SELECT * FROM LocalizationStrings
11.10 11:01:21 QUEUE: mine.0 (thread) response core/server.query
11.10 11:01:21 TIME: core/server.query : 119.12 ms
11.10 11:01:21 NET: mine.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
11.10 11:01:21 DB: SELECT * FROM GameVars
11.10 11:01:21 QUEUE: mine.0 (thread) response core/server.query
11.10 11:01:21 TIME: core/server.query : 1.09 ms
11.10 11:01:21 NET: mine.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
11.10 11:01:21 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
11.10 11:01:21 QUEUE: mine.0 (thread) response core/server.query
11.10 11:01:21 TIME: core/server.query : 2 ms
11.10 11:01:21 NET: mine.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
11.10 11:01:21 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
11.10 11:01:21 QUEUE: mine.0 (thread) response core/server.query
11.10 11:01:21 TIME: core/server.query : 1.44 ms
11.10 11:01:21 NET: mine.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
11.10 11:01:21 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
11.10 11:01:21 QUEUE: mine.0 (thread) response core/server.query
11.10 11:01:21 TIME: core/server.query : 0.82 ms
11.10 11:01:21 NET: mine.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
11.10 11:01:21 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
11.10 11:01:21 QUEUE: mine.0 (thread) response core/server.query
11.10 11:01:21 TIME: core/server.query : 4.18 ms
11.10 11:01:21 NET: mine.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
11.10 11:01:21 QUEUE: mine.0 (thread) response core/quest.getDaily
11.10 11:01:21 TIME: core/quest.getDaily : 0.04 ms
11.10 11:01:21 NET: mine.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
11.10 11:01:21 DB: SELECT * FROM UserAttributeTypes
11.10 11:01:21 QUEUE: mine.0 (thread) response core/server.query
11.10 11:01:21 TIME: core/server.query : 1.08 ms
11.10 11:01:21 NET: mine.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
11.10 11:01:21 DB: SELECT * FROM UserVariableTypes
11.10 11:01:21 QUEUE: mine.0 (thread) response core/server.query
11.10 11:01:21 TIME: core/server.query : 6.66 ms
11.10 11:01:21 NET: mine.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
11.10 11:01:21 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
11.10 11:01:21 QUEUE: mine.0 (thread) response core/server.query
11.10 11:01:21 TIME: core/serve11.10 11:02:18 TIMER: Starting timer...
11.10 11:02:18 TIMER: Timer running...
11.10 11:02:18 DB: SELECT * FROM GameVars
11.10 11:02:18 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
11.10 11:02:18 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
11.10 11:02:18 DB: SELECT * FROM Shops WHERE ID = 1
11.10 11:02:18 TEMP: load ./tmp/quest_daily_ids
11.10 11:02:18 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
11.10 11:02:18 TEMP: save ./tmp/quest_daily_ids
11.10 11:02:18 NET: ??? request core/server.login { host => 127.0.0.1, name => ball.0, port => 2010, type => game, _type => core/server.login, externalHost => 127.0.0.1, externalPort => 2010 }
11.10 11:02:18 QUEUE: ball.0 (thread) response server.login
11.10 11:02:18 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
11.10 11:02:18 DB: SELECT * FROM LocalizationStrings
11.10 11:02:18 QUEUE: ball.0 (thread) response core/server.query
11.10 11:02:18 TIME: core/server.query : 8.39 ms
11.10 11:02:18 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
11.10 11:02:18 DB: SELECT * FROM GameVars
11.10 11:02:18 QUEUE: ball.0 (thread) response core/server.query
11.10 11:02:18 TIME: core/server.query : 0.63 ms
11.10 11:02:18 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
11.10 11:02:18 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
11.10 11:02:18 QUEUE: ball.0 (thread) response core/server.query
11.10 11:02:18 TIME: core/server.query : 0.65 ms
11.10 11:02:18 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
11.10 11:02:18 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
11.10 11:02:18 QUEUE: ball.0 (thread) response core/server.query
11.10 11:02:18 TIME: core/server.query : 0.66 ms
11.10 11:02:18 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
11.10 11:02:18 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
11.10 11:02:18 QUEUE: ball.0 (thread) response core/server.query
11.10 11:02:18 TIME: core/server.query : 0.51 ms
11.10 11:02:18 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
11.10 11:02:18 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
11.10 11:02:18 QUEUE: ball.0 (thread) response core/server.query
11.10 11:02:18 TIME: core/server.query : 1.02 ms
11.10 11:02:18 NET: ball.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
11.10 11:02:18 QUEUE: ball.0 (thread) response core/quest.getDaily
11.10 11:02:18 TIME: core/quest.getDaily : 0.02 ms
11.10 11:02:18 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
11.10 11:02:18 DB: SELECT * FROM UserAttributeTypes
11.10 11:02:18 QUEUE: ball.0 (thread) response core/server.query
11.10 11:02:18 TIME: core/server.query : 0.32 ms
11.10 11:02:18 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
11.10 11:02:18 DB: SELECT * FROM UserVariableTypes
11.10 11:02:18 QUEUE: ball.0 (thread) response core/server.query
11.10 11:02:18 TIME: core/server.query : 0.56 ms
11.10 11:02:18 NET: ball.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
11.10 11:02:18 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.No11.10 11:04:52 TIMER: Starting timer...
11.10 11:04:52 TIMER: Timer running...
11.10 11:04:52 DB: SELECT * FROM GameVars
11.10 11:04:52 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
11.10 11:04:52 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
11.10 11:04:52 DB: SELECT * FROM Shops WHERE ID = 1
11.10 11:04:52 TEMP: load ./tmp/quest_daily_ids
11.10 11:04:52 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
11.10 11:04:52 TEMP: save ./tmp/quest_daily_ids
11.10 11:04:52 NET: ??? request core/server.login { host => 127.0.0.1, name => ball.0, port => 2010, type => game, _type => core/server.login, externalHost => 127.0.0.1, externalPort => 2010 }
11.10 11:04:52 QUEUE: ball.0 (thread) response server.login
11.10 11:04:52 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
11.10 11:04:52 DB: SELECT * FROM LocalizationStrings
11.10 11:04:52 QUEUE: ball.0 (thread) response core/server.query
11.10 11:04:52 TIME: core/server.query : 10.96 ms
11.10 11:04:52 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
11.10 11:04:52 DB: SELECT * FROM GameVars
11.10 11:04:52 QUEUE: ball.0 (thread) response core/server.query
11.10 11:04:52 TIME: core/server.query : 0.72 ms
11.10 11:04:52 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
11.10 11:04:52 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
11.10 11:04:52 QUEUE: ball.0 (thread) response core/server.query
11.10 11:04:52 TIME: core/server.query : 0.77 ms
11.10 11:04:52 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
11.10 11:04:52 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
11.10 11:04:52 QUEUE: ball.0 (thread) response core/server.query
11.10 11:04:52 TIME: core/server.query : 0.61 ms
11.10 11:04:52 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
11.10 11:04:52 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
11.10 11:04:52 QUEUE: ball.0 (thread) response core/server.query
11.10 11:04:52 TIME: core/server.query : 0.64 ms
11.10 11:04:52 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
11.10 11:04:52 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
11.10 11:04:52 QUEUE: ball.0 (thread) response core/server.query
11.10 11:04:52 TIME: core/server.query : 1.17 ms
11.10 11:04:52 NET: ball.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
11.10 11:04:52 QUEUE: ball.0 (thread) response core/quest.getDaily
11.10 11:04:52 TIME: core/quest.getDaily : 0.03 ms
11.10 11:04:52 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
11.10 11:04:52 DB: SELECT * FROM UserAttributeTypes
11.10 11:04:52 QUEUE: ball.0 (thread) response core/server.query
11.10 11:04:52 TIME: core/server.query : 0.56 ms
11.10 11:04:52 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
11.10 11:04:52 DB: SELECT * FROM UserVariableTypes
11.10 11:04:52 QUEUE: ball.0 (thread) response core/server.query
11.10 11:04:52 TIME: core/server.query : 0.58 ms
11.10 11:04:52 NET: ball.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
11.10 11:04:52 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.N11.10 11:12:30 TIMER: Starting timer...
11.10 11:12:30 TIMER: Timer running...
11.10 11:12:30 DB: SELECT * FROM GameVars
11.10 11:12:30 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
11.10 11:12:30 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
11.10 11:12:30 DB: SELECT * FROM Shops WHERE ID = 1
11.10 11:12:30 TEMP: load ./tmp/quest_daily_ids
11.10 11:12:30 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
11.10 11:12:30 TEMP: save ./tmp/quest_daily_ids
11.10 11:12:30 NET: ??? request core/server.login { host => 127.0.0.1, name => ball.0, port => 2010, type => game, _type => core/server.login, externalHost => 127.0.0.1, externalPort => 2010 }
11.10 11:12:30 QUEUE: ball.0 (thread) response server.login
11.10 11:12:30 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
11.10 11:12:30 DB: SELECT * FROM LocalizationStrings
11.10 11:12:30 QUEUE: ball.0 (thread) response core/server.query
11.10 11:12:30 TIME: core/server.query : 6.54 ms
11.10 11:12:30 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
11.10 11:12:30 DB: SELECT * FROM GameVars
11.10 11:12:30 QUEUE: ball.0 (thread) response core/server.query
11.10 11:12:30 TIME: core/server.query : 0.53 ms
11.10 11:12:30 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
11.10 11:12:30 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
11.10 11:12:30 QUEUE: ball.0 (thread) response core/server.query
11.10 11:12:30 TIME: core/server.query : 0.64 ms
11.10 11:12:30 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
11.10 11:12:30 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
11.10 11:12:30 QUEUE: ball.0 (thread) response core/server.query
11.10 11:12:30 TIME: core/server.query : 0.43 ms
11.10 11:12:30 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
11.10 11:12:30 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
11.10 11:12:30 QUEUE: ball.0 (thread) response core/server.query
11.10 11:12:30 TIME: core/server.query : 0.53 ms
11.10 11:12:30 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
11.10 11:12:30 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
11.10 11:12:30 QUEUE: ball.0 (thread) response core/server.query
11.10 11:12:30 TIME: core/server.query : 0.82 ms
11.10 11:12:30 NET: ball.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
11.10 11:12:30 QUEUE: ball.0 (thread) response core/quest.getDaily
11.10 11:12:30 TIME: core/quest.getDaily : 0.02 ms
11.10 11:12:30 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
11.10 11:12:30 DB: SELECT * FROM UserAttributeTypes
11.10 11:12:30 QUEUE: ball.0 (thread) response core/server.query
11.10 11:12:30 TIME: core/server.query : 0.45 ms
11.10 11:12:30 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
11.10 11:12:30 DB: SELECT * FROM UserVariableTypes
11.10 11:12:30 QUEUE: ball.0 (thread) response core/server.query
11.10 11:12:30 TIME: core/server.query : 0.54 ms
11.10 11:12:30 NET: ball.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
11.10 11:12:30 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.No11.10 11:13:26 TIMER: Starting timer...
11.10 11:13:26 TIMER: Timer running...
11.10 11:13:26 DB: SELECT * FROM GameVars
11.10 11:13:26 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
11.10 11:13:26 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
11.10 11:13:26 DB: SELECT * FROM Shops WHERE ID = 1
11.10 11:13:26 TEMP: load ./tmp/quest_daily_ids
11.10 11:13:26 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
11.10 11:13:26 TEMP: save ./tmp/quest_daily_ids
11.10 11:13:26 NET: ??? request core/server.login { host => 127.0.0.1, name => ball.0, port => 2010, type => game, _type => core/server.login, externalHost => 127.0.0.1, externalPort => 2010 }
11.10 11:13:26 QUEUE: ball.0 (thread) response server.login
11.10 11:13:26 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
11.10 11:13:26 DB: SELECT * FROM LocalizationStrings
11.10 11:13:26 QUEUE: ball.0 (thread) response core/server.query
11.10 11:13:26 TIME: core/server.query : 8.84 ms
11.10 11:13:26 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
11.10 11:13:26 DB: SELECT * FROM GameVars
11.10 11:13:26 QUEUE: ball.0 (thread) response core/server.query
11.10 11:13:26 TIME: core/server.query : 0.69 ms
11.10 11:13:26 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
11.10 11:13:26 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
11.10 11:13:26 QUEUE: ball.0 (thread) response core/server.query
11.10 11:13:26 TIME: core/server.query : 1.9 ms
11.10 11:13:26 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
11.10 11:13:26 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
11.10 11:13:26 QUEUE: ball.0 (thread) response core/server.query
11.10 11:13:26 TIME: core/server.query : 0.63 ms
11.10 11:13:26 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
11.10 11:13:26 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
11.10 11:13:26 QUEUE: ball.0 (thread) response core/server.query
11.10 11:13:26 TIME: core/server.query : 0.86 ms
11.10 11:13:26 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
11.10 11:13:26 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
11.10 11:13:26 QUEUE: ball.0 (thread) response core/server.query
11.10 11:13:26 TIME: core/server.query : 1.59 ms
11.10 11:13:26 NET: ball.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
11.10 11:13:26 QUEUE: ball.0 (thread) response core/quest.getDaily
11.10 11:13:26 TIME: core/quest.getDaily : 0.04 ms
11.10 11:13:26 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
11.10 11:13:26 DB: SELECT * FROM UserAttributeTypes
11.10 11:13:26 QUEUE: ball.0 (thread) response core/server.query
11.10 11:13:26 TIME: core/server.query : 0.59 ms
11.10 11:13:26 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
11.10 11:13:26 DB: SELECT * FROM UserVariableTypes
11.10 11:13:26 QUEUE: ball.0 (thread) response core/server.query
11.10 11:13:26 TIME: core/server.query : 0.53 ms
11.10 11:13:26 NET: ball.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
11.10 11:13:26 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Not11.10 11:16:52 TIMER: Starting timer...
11.10 11:16:52 DB: SELECT * FROM GameVars
11.10 11:16:52 TIMER: Timer running...
11.10 11:16:52 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
11.10 11:16:52 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
11.10 11:16:52 DB: SELECT * FROM Shops WHERE ID = 1
11.10 11:16:52 TEMP: load ./tmp/quest_daily_ids
11.10 11:16:52 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
11.10 11:16:52 TEMP: save ./tmp/quest_daily_ids
11.10 11:16:53 NET: ??? request core/server.login { host => 127.0.0.1, name => ball.0, port => 2010, type => game, _type => core/server.login, externalHost => 127.0.0.1, externalPort => 2010 }
11.10 11:16:53 QUEUE: ball.0 (thread) response server.login
11.10 11:16:53 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
11.10 11:16:53 DB: SELECT * FROM LocalizationStrings
11.10 11:16:53 QUEUE: ball.0 (thread) response core/server.query
11.10 11:16:53 TIME: core/server.query : 10.76 ms
11.10 11:16:53 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
11.10 11:16:53 DB: SELECT * FROM GameVars
11.10 11:16:53 QUEUE: ball.0 (thread) response core/server.query
11.10 11:16:53 TIME: core/server.query : 0.77 ms
11.10 11:16:53 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
11.10 11:16:53 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
11.10 11:16:53 QUEUE: ball.0 (thread) response core/server.query
11.10 11:16:53 TIME: core/server.query : 2.23 ms
11.10 11:16:53 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
11.10 11:16:53 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
11.10 11:16:53 QUEUE: ball.0 (thread) response core/server.query
11.10 11:16:53 TIME: core/server.query : 0.94 ms
11.10 11:16:53 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
11.10 11:16:53 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
11.10 11:16:53 QUEUE: ball.0 (thread) response core/server.query
11.10 11:16:53 TIME: core/server.query : 1.24 ms
11.10 11:16:53 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
11.10 11:16:53 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
11.10 11:16:53 QUEUE: ball.0 (thread) response core/server.query
11.10 11:16:53 TIME: core/server.query : 1.69 ms
11.10 11:16:53 NET: ball.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
11.10 11:16:53 QUEUE: ball.0 (thread) response core/quest.getDaily
11.10 11:16:53 TIME: core/quest.getDaily : 0.03 ms
11.10 11:16:53 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
11.10 11:16:53 DB: SELECT * FROM UserAttributeTypes
11.10 11:16:53 QUEUE: ball.0 (thread) response core/server.query
11.10 11:16:53 TIME: core/server.query : 0.47 ms
11.10 11:16:53 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
11.10 11:16:53 DB: SELECT * FROM UserVariableTypes
11.10 11:16:53 QUEUE: ball.0 (thread) response core/server.query
11.10 11:16:53 TIME: core/server.query : 0.6 ms
11.10 11:16:53 NET: ball.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
11.10 11:16:53 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
11.10 11:16:53 QUEUE: ball.0 (thread) response core/server.query
11.10 11:16:53 TIME: core/server.query : 2.3 ms
11.10 11:16:53 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
11.10 11:16:53 DB: SELECT * FROM ItemGroups
11.10 11:16:53 QUEUE: ball.0 (thread) response core/server.query
11.10 11:16:53 TIME: core/server.query : 1.08 ms
11.10 11:16:53 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
11.10 11:16:53 DB: SELECT * FROM Bundles ORDER BY ID
11.10 11:16:53 QUEUE: ball.0 (thread) response core/server.query
11.10 11:16:53 TIME: core/server.query : 0.9 ms
11.10 11:16:53 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
11.10 11:16:53 DB: SELECT * FROM BundleItems ORDER BY ID
11.10 11:16:53 QUEUE: ball.0 (thread) response core/server.query
11.10 11:16:53 TIME: core/server.query : 0.84 ms
11.10 11:16:53 NET: ball.0 (thread) request core/shop.getList { _type => core/shop.getList }
11.10 11:16:53 QUEUE: ball.0 (thread) response core/shop.getList
11.10 11:16:53 TIME: core/shop.getList : 0.03 ms
11.10 11:16:53 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
11.10 11:16:53 DB: SELECT * FROM EffectAttributeTypes
11.10 11:16:53 QUEUE: ball.0 (thread) response core/server.query
11.10 11:16:53 TIME: core/server.query : 0.61 ms
11.10 11:16:53 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
11.10 11:16:53 DB: SELECT * FROM Effects
11.10 11:16:53 QUEUE: ball.0 (thread) response core/server.query
11.10 11:16:53 TIME: core/server.query : 0.77 ms
11.10 11:16:53 NET: ball.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
11.10 11:16:53 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
11.10 11:16:53 QUEUE: ball.0 (thread) response core/server.query
11.10 11:16:53 TIME: core/server.query : 1.2 ms
11.10 11:16:53 NET: ball.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
11.10 11:16:53 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
11.10 11:16:53 QUEUE: ball.0 (thread) response core/server.query
11.10 11:16:53 TIME: core/server.query : 1.09 ms
11.10 11:16:53 NET: ball.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
11.10 11:16:53 DB: SELECT * FROM Badges
11.10 11:16:53 QUEUE: ball.0 (thread) response core/server.query
11.10 11:16:53 TIME: core/server.query : 0.53 ms
11.10 11:17:01 NET: ball.0 (thread) request core/server.query { q => SELECT ID FROM Users WHERE Name = E'test1', _type => core/server.query }
11.10 11:17:01 DB: SELECT ID FROM Users WHERE Name = E'test1'
11.10 11:17:01 QUEUE: ball.0 (thread) response core/server.query
11.10 11:17:01 TIME: core/server.query : 1.46 ms
11.10 11:17:01 NET: ball.0 (thread) request core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
11.10 11:17:01 DB: SELECT nextval('Users_id_seq') AS id
11.10 11:17:01 QUEUE: ball.0 (thread) response core/server.query
11.10 11:17:01 TIME: core/server.query : 39.55 ms
11.10 11:17:01 NET: ball.0 (thread) request core/user.register { password => test, name => test1, fullParams => { password => test, name => test1, networkid => , params => {obj: 1}, networktype => , messageType => user.register, id => 2 }, networkid => , connectionID => 19005461, networktype => , email => , id => 2, _type => core/user.register }
11.10 11:17:01 QUEUE: ball.0 (thread) response core/user.register
11.10 11:17:01 TIME: core/user.register : 0.05 ms
11.10 11:17:01 ASYNCDB: INSERT INTO Users (ID, Name, NetworkID, NetworkType, Password, Email, RegDate) VALUES (2,E'test1',E'',E'',E'test',E'', now())
11.10 11:17:01 ASYNCDB: INSERT INTO UserRatings (UserID, Points) VALUES (2, 0)
11.10 11:17:01 READDB: SELECT * FROM Users WHERE ID = 2
11.10 11:17:01 READDB: SELECT * FROM Users WHERE ID = 1
11.10 11:17:01 READDB: SELECT ID FROM UserQuests WHERE ID = 2
11.10 11:17:01 READDB: INSERT INTO UserQuests (ID) VALUES (2)
11.10 11:17:01 QUEUE: ball.0 (thread) response core/user.registerResponse
11.10 11:17:07 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-10-11 11:17:01.240219+03', language = E'  ', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}' WHERE ID = 2
11.10 11:17:12 BLOCKREMOVE: user 1 removed
11.10 11:17:17 BLOCKREMOVE: user 2 removed
