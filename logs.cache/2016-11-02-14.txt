02.11 14:21:31 NET: ball.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'dood' AND Password = E'1', _type => core/server.query }
02.11 14:21:31 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'dood' AND Password = E'1'
02.11 14:21:31 QUEUE: ball.0 (thread) response core/server.query { list => {{ name => dood, networkid => , isbanned => false, id => 3 }}, errorCode => ok, _type => core/server.query }
02.11 14:21:31 TIME: core/server.query : 1.22 ms
02.11 14:21:31 NET: ball.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
02.11 14:21:31 QUEUE: ball.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
02.11 14:21:31 TIME: core/user.isOnlineID : 0.1 ms
02.11 14:21:31 NET: ball.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
02.11 14:21:31 STATS: cache [user], get [4 calls, 1 cache hits, 3 cache misses, 0 same version, 0 not found]
02.11 14:21:31 STATS: cache [user], segments [15 calls, 9 hits, 5 misses]
02.11 14:21:31 STATS: cache [user], database [5765 calls, 3 reads, 4 writes]
02.11 14:21:31 STATS: cache [user], lock [4 calls, 4 attempts, 0 failures]
02.11 14:21:31 READDB: SELECT * FROM Users WHERE ID = 3
02.11 14:21:31 STATS: cache manager [1], get [6 calls, total 0.01 sec spent, avg 0.98 ms]
02.11 14:21:31 STATS: cache manager [1], update [6 calls, total 0 sec spent, avg 0.09 ms]
02.11 14:21:31 QUEUE: ball.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => dood, deleted => false, email => , networktype =>   , password => 1, isbanned => false, regdate => 2016-11-02 13:49:48.726683+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478083796, lastLoginDate => 307, lastLoadDate => 1103 }, effects => { list => [] } }}, version => 0, id => 3 } }
02.11 14:21:31 TIME: core/cache.get : 1.57 ms
02.11 14:21:31 NET: ball.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
02.11 14:21:31 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
02.11 14:21:31 STATS: cache [questdata], segments [9 calls, 4 hits, 4 misses]
02.11 14:21:31 STATS: cache [questdata], database [5765 calls, 2 reads, 2 writes]
02.11 14:21:31 STATS: cache [questdata], lock [3 calls, 3 attempts, 0 failures]
02.11 14:21:31 READDB: SELECT * FROM UserQuests WHERE ID = 3
02.11 14:21:31 QUEUE: ball.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 3 } }
02.11 14:21:31 TIME: core/cache.get : 0.89 ms
02.11 14:21:31 NET: ball.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.20.227 }
02.11 14:21:31 QUEUE: ball.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
02.11 14:21:31 TIME: core/user.loginPost : 0.1 ms
02.11 14:21:36 NET: ball.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
02.11 14:21:36 QUEUE: ball.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.11 14:21:36 TIME: core/cache.update : 0.09 ms
02.11 14:21:37 WRITEDB: UPDATE Users SET name = E'dood', deleted = E'false', email = E'', networktype = E'  ', password = E'1', isbanned = E'false', regdate = E'2016-11-02 13:49:48.726683+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478083796,"lastLoginDate":307,"lastLoadDate":1103},"effects":{"list":[]}}' WHERE ID = 3
02.11 14:21:52 NET: ball.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=3 OR secondid=3 AND finished <> true, _type => core/server.query }
02.11 14:21:52 DB: SELECT id FROM battle WHERE firstid=3 OR secondid=3 AND finished <> true
02.11 14:21:52 QUEUE: ball.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
02.11 14:21:52 TIME: core/server.query : 0.72 ms
02.11 14:21:52 NET: ball.0 (thread) request ball/cache.battle.infoRoom { roomId => 0, _type => ball/cache.battle.infoRoom }
02.11 14:21:52 STATS: cache [battle], get [3 calls, 0 cache hits, 2 cache misses, 0 same version, 2 not found]
02.11 14:21:52 STATS: cache [battle], segments [3 calls, 0 hits, 2 misses]
02.11 14:21:52 STATS: cache [battle], database [5786 calls, 2 reads, 0 writes]
02.11 14:21:52 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
02.11 14:21:52 READDB: SELECT * FROM Battle WHERE ID = 0
02.11 14:21:52 TRACE: ball/cache.battle.infoRoom : Invalid field access : get
02.11 14:21:52 TRACE: ball/cache.battle.infoRoom : 
Called from modules/BallCache.hx line 70
Called from modules/BallCache.hx line 63
Called from modules/BallCache.hx line 47
Called from snipe/cache/CacheServer.hx line 487
02.11 14:21:52 QUEUE: ball.0 (thread) response ball/cache.battle.infoRoom { errorCode => _requestException, _type => ball/cache.battle.infoRoom }
02.11 14:21:52 NET: ball.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 3, _type => core/cache.update }
02.11 14:21:52 QUEUE: ball.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
02.11 14:21:52 TIME: core/cache.update : 0.14 ms
02.11 14:21:52 NET: ball.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 3, _type => core/cache.update }
02.11 14:21:52 QUEUE: ball.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.11 14:21:52 TIME: core/cache.update : 0.12 ms
02.11 14:21:52 NET: ball.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 3, _type => core/user.logoutPost }
02.11 14:21:52 QUEUE: ball.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
02.11 14:21:52 TIME: core/user.logoutPost : 0.1 ms
02.11 14:21:53 WRITEDB: UPDATE Users SET name = E'dood', deleted = E'false', email = E'', networktype = E'  ', password = E'1', isbanned = E'false', regdate = E'2016-11-02 13:49:48.726683+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478083796,"lastLoginDate":307,"lastLoadDate":1103},"effects":{"list":[]}}' WHERE ID = 3
02.11 14:21:53 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 3
02.11 14:22:03 BLOCKREMOVE: user 3 removed
02.11 14:22:03 BLOCKREMOVE: questdata 3 removed
02.11 14:22:27 TIMER: Clans cache...
02.11 14:22:27 TIMER: Clans cache: 0ms
02.11 14:22:27 TIMER: Clans cache...
02.11 14:22:27 TIMER: Clans cache: 0ms
02.11 14:22:27 TIMER: Clans cache...
02.11 14:22:27 TIMER: Clans cache: 0ms
02.11 14:22:27 TIMER: Clans cache...
02.11 14:22:27 TIMER: Clans cache: 0ms
02.11 14:22:27 TIMER: Clans cache...
02.11 14:22:27 TIMER: Clans cache: 0ms
02.11 14:22:27 TIMER: Clans cache...
02.11 14:22:27 TIMER: Clans cache: 0ms
02.11 14:22:27 TIMER: Clans cache...
02.11 14:22:27 TIMER: Clans cache: 0ms
02.11 14:22:27 TIMER: Clans cache...
02.11 14:22:27 TIMER: Clans cache: 0ms
02.11 14:29:36 NET: ball.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'dood' AND Password = E'1', _type => core/server.query }
02.11 14:29:36 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'dood' AND Password = E'1'
02.11 14:29:36 QUEUE: ball.0 (thread) response core/server.query { list => {{ name => dood, networkid => , isbanned => false, id => 3 }}, errorCode => ok, _type => core/server.query }
02.11 14:29:36 TIME: core/server.query : 0.89 ms
02.11 14:29:36 NET: ball.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
02.11 14:29:36 QUEUE: ball.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
02.11 14:29:36 TIME: core/user.isOnlineID : 0.06 ms
02.11 14:29:36 NET: ball.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
02.11 14:29:36 STATS: cache [user], get [5 calls, 1 cache hits, 4 cache misses, 0 same version, 0 not found]
02.11 14:29:36 STATS: cache [user], segments [20 calls, 12 hits, 7 misses]
02.11 14:29:36 STATS: cache [user], database [6250 calls, 4 reads, 6 writes]
02.11 14:29:36 STATS: cache [user], lock [5 calls, 5 attempts, 0 failures]
02.11 14:29:36 READDB: SELECT * FROM Users WHERE ID = 3
02.11 14:29:36 STATS: cache manager [1], get [8 calls, total 0.01 sec spent, avg 0.93 ms]
02.11 14:29:36 STATS: cache manager [1], update [9 calls, total 0 sec spent, avg 0.07 ms]
02.11 14:29:36 QUEUE: ball.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => dood, deleted => false, email => , networktype =>   , password => 1, isbanned => false, regdate => 2016-11-02 13:49:48.726683+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478083796, lastLoginDate => 307, lastLoadDate => 1103 }, effects => { list => [] } }}, version => 0, id => 3 } }
02.11 14:29:36 TIME: core/cache.get : 1.02 ms
02.11 14:29:36 NET: ball.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
02.11 14:29:36 STATS: cache [questdata], get [3 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
02.11 14:29:36 STATS: cache [questdata], segments [13 calls, 6 hits, 6 misses]
02.11 14:29:36 STATS: cache [questdata], database [6250 calls, 3 reads, 3 writes]
02.11 14:29:36 STATS: cache [questdata], lock [4 calls, 4 attempts, 0 failures]
02.11 14:29:36 READDB: SELECT * FROM UserQuests WHERE ID = 3
02.11 14:29:36 QUEUE: ball.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 3 } }
02.11 14:29:36 TIME: core/cache.get : 0.63 ms
02.11 14:29:36 NET: ball.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.20.227 }
02.11 14:29:36 QUEUE: ball.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
02.11 14:29:36 TIME: core/user.loginPost : 0.07 ms
02.11 14:29:42 NET: ball.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
02.11 14:29:42 QUEUE: ball.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.11 14:29:42 TIME: core/cache.update : 0.09 ms
02.11 14:29:42 NET: ball.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=3 OR secondid=3 AND finished <> true, _type => core/server.query }
02.11 14:29:42 DB: SELECT id FROM battle WHERE firstid=3 OR secondid=3 AND finished <> true
02.11 14:29:42 QUEUE: ball.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
02.11 14:29:42 TIME: core/server.query : 0.52 ms
02.11 14:29:42 NET: ball.0 (thread) request ball/cache.battle.infoRoom { roomId => 0, _type => ball/cache.battle.infoRoom }
02.11 14:29:42 STATS: cache [battle], get [4 calls, 0 cache hits, 3 cache misses, 0 same version, 3 not found]
02.11 14:29:42 STATS: cache [battle], segments [4 calls, 0 hits, 3 misses]
02.11 14:29:42 STATS: cache [battle], database [6255 calls, 3 reads, 0 writes]
02.11 14:29:42 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
02.11 14:29:42 READDB: SELECT * FROM Battle WHERE ID = 0
02.11 14:29:42 TRACE: ball/cache.battle.infoRoom : Invalid field access : get
02.11 14:29:42 TRACE: ball/cache.battle.infoRoom : 
Called from modules/BallCache.hx line 70
Called from modules/BallCache.hx line 63
Called from modules/BallCache.hx line 47
Called from snipe/cache/CacheServer.hx line 487
02.11 14:29:42 QUEUE: ball.0 (thread) response ball/cache.battle.infoRoom { errorCode => _requestException, _type => ball/cache.battle.infoRoom }
02.11 14:29:42 NET: ball.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 3, _type => core/cache.update }
02.11 14:29:42 QUEUE: ball.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
02.11 14:29:42 TIME: core/cache.update : 0.08 ms
02.11 14:29:42 NET: ball.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 3, _type => core/cache.update }
02.11 14:29:42 QUEUE: ball.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.11 14:29:42 TIME: core/cache.update : 0.08 ms
02.11 14:29:42 NET: ball.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 3, _type => core/user.logoutPost }
02.11 14:29:42 QUEUE: ball.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
02.11 14:29:42 TIME: core/user.logoutPost : 0.06 ms
02.11 14:29:42 WRITEDB: UPDATE Users SET name = E'dood', deleted = E'false', email = E'', networktype = E'  ', password = E'1', isbanned = E'false', regdate = E'2016-11-02 13:49:48.726683+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478083796,"lastLoginDate":307,"lastLoadDate":1103},"effects":{"list":[]}}' WHERE ID = 3
02.11 14:29:42 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 3
02.11 14:29:52 BLOCKREMOVE: user 3 removed
02.11 14:29:52 BLOCKREMOVE: questdata 3 removed
02.11 14:30:27 TIMER: Clans cache...
02.11 14:30:27 TIMER: Clans cache: 0ms
02.11 14:30:59 NET: ball.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'dood' AND Password = E'1', _type => core/server.query }
02.11 14:30:59 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'dood' AND Password = E'1'
02.11 14:30:59 QUEUE: ball.0 (thread) response core/server.query { list => {{ name => dood, networkid => , isbanned => false, id => 3 }}, errorCode => ok, _type => core/server.query }
02.11 14:30:59 TIME: core/server.query : 1.03 ms
02.11 14:30:59 NET: ball.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
02.11 14:30:59 QUEUE: ball.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
02.11 14:30:59 TIME: core/user.isOnlineID : 0.09 ms
02.11 14:30:59 NET: ball.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
02.11 14:30:59 STATS: cache [user], get [6 calls, 1 cache hits, 5 cache misses, 0 same version, 0 not found]
02.11 14:30:59 STATS: cache [user], segments [25 calls, 15 hits, 9 misses]
02.11 14:30:59 STATS: cache [user], database [6333 calls, 5 reads, 7 writes]
02.11 14:30:59 STATS: cache [user], lock [6 calls, 6 attempts, 0 failures]
02.11 14:30:59 READDB: SELECT * FROM Users WHERE ID = 3
02.11 14:30:59 STATS: cache manager [1], get [10 calls, total 0.01 sec spent, avg 0.94 ms]
02.11 14:30:59 STATS: cache manager [1], update [12 calls, total 0 sec spent, avg 0.06 ms]
02.11 14:30:59 QUEUE: ball.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => dood, deleted => false, email => , networktype =>   , password => 1, isbanned => false, regdate => 2016-11-02 13:49:48.726683+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478083796, lastLoginDate => 307, lastLoadDate => 1103 }, effects => { list => [] } }}, version => 0, id => 3 } }
02.11 14:30:59 TIME: core/cache.get : 1.91 ms
02.11 14:30:59 NET: ball.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
02.11 14:30:59 STATS: cache [questdata], get [4 calls, 0 cache hits, 4 cache misses, 0 same version, 0 not found]
02.11 14:30:59 STATS: cache [questdata], segments [17 calls, 8 hits, 8 misses]
02.11 14:30:59 STATS: cache [questdata], database [6333 calls, 4 reads, 4 writes]
02.11 14:30:59 STATS: cache [questdata], lock [5 calls, 5 attempts, 0 failures]
02.11 14:30:59 READDB: SELECT * FROM UserQuests WHERE ID = 3
02.11 14:30:59 QUEUE: ball.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 3 } }
02.11 14:30:59 TIME: core/cache.get : 1.35 ms
02.11 14:30:59 NET: ball.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.20.227 }
02.11 14:30:59 QUEUE: ball.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
02.11 14:30:59 TIME: core/user.loginPost : 0.11 ms
02.11 14:31:05 NET: ball.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=3 OR secondid=3 AND finished <> true, _type => core/server.query }
02.11 14:31:05 DB: SELECT id FROM battle WHERE firstid=3 OR secondid=3 AND finished <> true
02.11 14:31:05 QUEUE: ball.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
02.11 14:31:05 TIME: core/server.query : 0.74 ms
02.11 14:31:05 NET: ball.0 (thread) request ball/cache.battle.infoRoom { roomId => 0, _type => ball/cache.battle.infoRoom }
02.11 14:31:05 STATS: cache [battle], get [5 calls, 0 cache hits, 4 cache misses, 0 same version, 4 not found]
02.11 14:31:05 STATS: cache [battle], segments [5 calls, 0 hits, 4 misses]
02.11 14:31:05 STATS: cache [battle], database [6339 calls, 4 reads, 0 writes]
02.11 14:31:05 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
02.11 14:31:05 READDB: SELECT * FROM Battle WHERE ID = 0
02.11 14:31:05 TRACE: ball/cache.battle.infoRoom : Invalid field access : get
02.11 14:31:05 TRACE: ball/cache.battle.infoRoom : 
Called from modules/BallCache.hx line 70
Called from modules/BallCache.hx line 63
Called from modules/BallCache.hx line 47
Called from snipe/cache/CacheServer.hx line 487
02.11 14:31:05 QUEUE: ball.0 (thread) response ball/cache.battle.infoRoom { errorCode => _requestException, _type => ball/cache.battle.infoRoom }
02.11 14:31:05 NET: ball.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 3, _type => core/cache.update }
02.11 14:31:05 QUEUE: ball.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.11 14:31:05 TIME: core/cache.update : 0.21 ms
02.11 14:31:05 NET: ball.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 3, _type => core/cache.update }
02.11 14:31:05 QUEUE: ball.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.11 14:31:05 TIME: core/cache.update : 0.15 ms
02.11 14:31:05 NET: ball.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 3, _type => core/user.logoutPost }
02.11 14:31:05 QUEUE: ball.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
02.11 14:31:05 TIME: core/user.logoutPost : 0.11 ms
02.11 14:31:06 WRITEDB: UPDATE Users SET name = E'dood', deleted = E'false', email = E'', networktype = E'  ', password = E'1', isbanned = E'false', regdate = E'2016-11-02 13:49:48.726683+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478083796,"lastLoginDate":307,"lastLoadDate":1103},"effects":{"list":[]}}' WHERE ID = 3
02.11 14:31:06 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 3
02.11 14:31:16 BLOCKREMOVE: user 3 removed
02.11 14:31:16 BLOCKREMOVE: questdata 3 removed
02.11 14:31:27 TIMER: Clans cache...
02.11 14:31:27 TIMER: Clans cache: 0ms
02.11 14:31:27 TIMER: Clans cache...
02.11 14:31:27 TIMER: Clans cache: 0ms
02.11 14:31:27 TIMER: Clans cache...
02.11 14:31:27 TIMER: Clans cache: 0ms
02.11 14:31:27 TIMER: Clans cache...
02.11 14:31:27 TIMER: Clans cache: 0ms
02.11 14:31:27 TIMER: Clans cache...
02.11 14:31:27 TIMER: Clans cache: 0ms
02.11 14:31:27 TIMER: Clans cache...
02.11 14:31:27 TIMER: Clans cache: 0ms
02.11 14:37:19 NET: ball.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'dood' AND Password = E'1', _type => core/server.query }
02.11 14:37:19 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'dood' AND Password = E'1'
02.11 14:37:19 QUEUE: ball.0 (thread) response core/server.query { list => {{ name => dood, networkid => , isbanned => false, id => 3 }}, errorCode => ok, _type => core/server.query }
02.11 14:37:19 TIME: core/server.query : 0.9 ms
02.11 14:37:19 NET: ball.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
02.11 14:37:19 QUEUE: ball.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
02.11 14:37:19 TIME: core/user.isOnlineID : 0.06 ms
02.11 14:37:19 NET: ball.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
02.11 14:37:19 STATS: cache [user], get [7 calls, 1 cache hits, 6 cache misses, 0 same version, 0 not found]
02.11 14:37:19 STATS: cache [user], segments [29 calls, 17 hits, 11 misses]
02.11 14:37:19 STATS: cache [user], database [6713 calls, 6 reads, 8 writes]
02.11 14:37:19 STATS: cache [user], lock [7 calls, 7 attempts, 0 failures]
02.11 14:37:19 READDB: SELECT * FROM Users WHERE ID = 3
02.11 14:37:19 STATS: cache manager [1], get [12 calls, total 0.01 sec spent, avg 0.96 ms]
02.11 14:37:19 STATS: cache manager [1], update [14 calls, total 0 sec spent, avg 0.06 ms]
02.11 14:37:19 QUEUE: ball.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => dood, deleted => false, email => , networktype =>   , password => 1, isbanned => false, regdate => 2016-11-02 13:49:48.726683+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478083796, lastLoginDate => 307, lastLoadDate => 1103 }, effects => { list => [] } }}, version => 0, id => 3 } }
02.11 14:37:19 TIME: core/cache.get : 1.1 ms
02.11 14:37:19 NET: ball.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
02.11 14:37:19 STATS: cache [questdata], get [5 calls, 0 cache hits, 5 cache misses, 0 same version, 0 not found]
02.11 14:37:19 STATS: cache [questdata], segments [21 calls, 10 hits, 10 misses]
02.11 14:37:19 STATS: cache [questdata], database [6713 calls, 5 reads, 5 writes]
02.11 14:37:19 STATS: cache [questdata], lock [6 calls, 6 attempts, 0 failures]
02.11 14:37:19 READDB: SELECT * FROM UserQuests WHERE ID = 3
02.11 14:37:19 QUEUE: ball.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 3 } }
02.11 14:37:19 TIME: core/cache.get : 0.57 ms
02.11 14:37:19 NET: ball.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.20.227 }
02.11 14:37:19 QUEUE: ball.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
02.11 14:37:19 TIME: core/user.loginPost : 0.06 ms
02.11 14:37:27 NET: ball.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
02.11 14:37:27 QUEUE: ball.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.11 14:37:27 TIME: core/cache.update : 0.13 ms
02.11 14:37:27 TIMER: Clans cache...
02.11 14:37:27 TIMER: Clans cache: 0ms
02.11 14:37:27 WRITEDB: UPDATE Users SET name = E'dood', deleted = E'false', email = E'', networktype = E'  ', password = E'1', isbanned = E'false', regdate = E'2016-11-02 13:49:48.726683+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478083796,"lastLoginDate":307,"lastLoadDate":1103},"effects":{"list":[]}}' WHERE ID = 3
02.11 14:37:27 TIMER: Clans cache...
02.11 14:37:27 TIMER: Clans cache: 0ms
02.11 14:37:27 TIMER: Clans cache...
02.11 14:37:27 TIMER: Clans cache: 0ms
02.11 14:40:14 NET: ball.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=3 OR secondid=3 AND finished <> true, _type => core/server.query }
02.11 14:40:14 DB: SELECT id FROM battle WHERE firstid=3 OR secondid=3 AND finished <> true
02.11 14:40:14 QUEUE: ball.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
02.11 14:40:14 TIME: core/server.query : 1.26 ms
02.11 14:40:14 NET: ball.0 (thread) request ball/cache.battle.infoRoom { roomId => 0, _type => ball/cache.battle.infoRoom }
02.11 14:40:14 STATS: cache [battle], get [6 calls, 0 cache hits, 5 cache misses, 0 same version, 5 not found]
02.11 14:40:14 STATS: cache [battle], segments [6 calls, 0 hits, 5 misses]
02.11 14:40:14 STATS: cache [battle], database [6887 calls, 5 reads, 0 writes]
02.11 14:40:14 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
02.11 14:40:14 READDB: SELECT * FROM Battle WHERE ID = 0
02.11 14:40:14 TRACE: ball/cache.battle.infoRoom : Invalid field access : get
02.11 14:40:14 TRACE: ball/cache.battle.infoRoom : 
Called from modules/BallCache.hx line 70
Called from modules/BallCache.hx line 63
Called from modules/BallCache.hx line 47
Called from snipe/cache/CacheServer.hx line 487
02.11 14:40:14 QUEUE: ball.0 (thread) response ball/cache.battle.infoRoom { errorCode => _requestException, _type => ball/cache.battle.infoRoom }
02.11 14:40:14 NET: ball.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 3, _type => core/cache.update }
02.11 14:40:14 STATS: cache [user], get [8 calls, 1 cache hits, 7 cache misses, 0 same version, 0 not found]
02.11 14:40:14 STATS: cache [user], segments [32 calls, 18 hits, 13 misses]
02.11 14:40:14 STATS: cache [user], database [6887 calls, 7 reads, 9 writes]
02.11 14:40:14 STATS: cache [user], lock [7 calls, 7 attempts, 0 failures]
02.11 14:40:14 STATS: cache manager [1], get [13 calls, total 0.01 sec spent, avg 0.92 ms]
02.11 14:40:14 STATS: cache manager [1], update [16 calls, total 0 sec spent, avg 0.08 ms]
02.11 14:40:14 QUEUE: ball.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
02.11 14:40:14 TIME: core/cache.update : 0.79 ms
02.11 14:40:14 NET: ball.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 3, _type => core/cache.update }
02.11 14:40:14 STATS: cache [questdata], get [6 calls, 0 cache hits, 6 cache misses, 0 same version, 0 not found]
02.11 14:40:14 STATS: cache [questdata], segments [23 calls, 10 hits, 12 misses]
02.11 14:40:14 STATS: cache [questdata], database [6887 calls, 6 reads, 5 writes]
02.11 14:40:14 STATS: cache [questdata], lock [6 calls, 6 attempts, 0 failures]
02.11 14:40:14 QUEUE: ball.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.11 14:40:14 TIME: core/cache.update : 0.57 ms
02.11 14:40:14 NET: ball.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 3, _type => core/user.logoutPost }
02.11 14:40:14 QUEUE: ball.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
02.11 14:40:14 TIME: core/user.logoutPost : 0.29 ms
02.11 14:40:14 WRITEDB: UPDATE Users SET name = E'dood', deleted = E'false', email = E'', networktype = E'  ', password = E'1', isbanned = E'false', regdate = E'2016-11-02 13:49:48.726683+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478083796,"lastLoginDate":307,"lastLoadDate":1103},"effects":{"list":[]}}' WHERE ID = 3
02.11 14:40:14 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 3
02.11 14:40:23 NET: ball.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'dood' AND Password = E'1', _type => core/server.query }
02.11 14:40:23 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'dood' AND Password = E'1'
02.11 14:40:23 QUEUE: ball.0 (thread) response core/server.query { list => {{ name => dood, networkid => , isbanned => false, id => 3 }}, errorCode => ok, _type => core/server.query }
02.11 14:40:23 TIME: core/server.query : 1.46 ms
02.11 14:40:23 NET: ball.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
02.11 14:40:23 QUEUE: ball.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
02.11 14:40:23 TIME: core/user.isOnlineID : 0.26 ms
02.11 14:40:23 NET: ball.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
02.11 14:40:23 QUEUE: ball.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => dood, deleted => false, email => , networktype =>   , password => 1, isbanned => false, regdate => 2016-11-02 13:49:48.726683+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478083796, lastLoginDate => 307, lastLoadDate => 1103 }, effects => { list => [] } }}, version => 2, id => 3 } }
02.11 14:40:23 TIME: core/cache.get : 0.41 ms
02.11 14:40:23 NET: ball.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
02.11 14:40:23 QUEUE: ball.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 3 } }
02.11 14:40:23 TIME: core/cache.get : 0.2 ms
02.11 14:40:23 NET: ball.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.20.227 }
02.11 14:40:23 QUEUE: ball.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
02.11 14:40:23 TIME: core/user.loginPost : 0.1 ms
02.11 14:40:27 TIMER: Clans cache...
02.11 14:40:27 TIMER: Clans cache: 0ms
02.11 14:40:32 NET: ball.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
02.11 14:40:32 QUEUE: ball.0 (thread) response core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
02.11 14:40:32 TIME: core/cache.update : 2.26 ms
02.11 14:40:32 WRITEDB: UPDATE Users SET name = E'dood', deleted = E'false', email = E'', networktype = E'  ', password = E'1', isbanned = E'false', regdate = E'2016-11-02 13:49:48.726683+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478083796,"lastLoginDate":307,"lastLoadDate":1103},"effects":{"list":[]}}' WHERE ID = 3
02.11 14:41:27 TIMER: Clans cache...
02.11 14:41:27 TIMER: Clans cache: 0ms
02.11 14:41:27 TIMER: Clans cache...
02.11 14:41:27 TIMER: Clans cache: 0ms
02.11 14:43:26 NET: ball.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=3 OR secondid=3 AND finished <> true, _type => core/server.query }
02.11 14:43:26 DB: SELECT id FROM battle WHERE firstid=3 OR secondid=3 AND finished <> true
02.11 14:43:26 QUEUE: ball.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
02.11 14:43:26 TIME: core/server.query : 0.77 ms
02.11 14:43:26 NET: ball.0 (thread) request ball/cache.battle.infoRoom { roomId => 0, _type => ball/cache.battle.infoRoom }
02.11 14:43:26 STATS: cache [battle], get [7 calls, 0 cache hits, 6 cache misses, 0 same version, 6 not found]
02.11 14:43:26 STATS: cache [battle], segments [7 calls, 0 hits, 6 misses]
02.11 14:43:26 STATS: cache [battle], database [7079 calls, 6 reads, 0 writes]
02.11 14:43:26 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
02.11 14:43:26 READDB: SELECT * FROM Battle WHERE ID = 0
02.11 14:43:26 TRACE: ball/cache.battle.infoRoom : Invalid field access : get
02.11 14:43:26 TRACE: ball/cache.battle.infoRoom : 
Called from modules/BallCache.hx line 70
Called from modules/BallCache.hx line 63
Called from modules/BallCache.hx line 47
Called from snipe/cache/CacheServer.hx line 487
02.11 14:43:26 QUEUE: ball.0 (thread) response ball/cache.battle.infoRoom { errorCode => _requestException, _type => ball/cache.battle.infoRoom }
02.11 14:43:26 NET: ball.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 3, _type => core/cache.update }
02.11 14:43:26 STATS: cache [user], get [9 calls, 2 cache hits, 7 cache misses, 0 same version, 0 not found]
02.11 14:43:26 STATS: cache [user], segments [37 calls, 23 hits, 13 misses]
02.11 14:43:26 STATS: cache [user], database [7079 calls, 7 reads, 11 writes]
02.11 14:43:26 STATS: cache [user], lock [8 calls, 8 attempts, 0 failures]
02.11 14:43:26 STATS: cache manager [1], get [15 calls, total 0.01 sec spent, avg 0.81 ms]
02.11 14:43:26 STATS: cache manager [1], update [19 calls, total 0 sec spent, avg 0.12 ms]
02.11 14:43:26 QUEUE: ball.0 (thread) response core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
02.11 14:43:26 TIME: core/cache.update : 0.91 ms
02.11 14:43:26 NET: ball.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 3, _type => core/cache.update }
02.11 14:43:26 STATS: cache [questdata], get [7 calls, 1 cache hits, 6 cache misses, 0 same version, 0 not found]
02.11 14:43:26 STATS: cache [questdata], segments [27 calls, 14 hits, 12 misses]
02.11 14:43:26 STATS: cache [questdata], database [7079 calls, 6 reads, 6 writes]
02.11 14:43:26 STATS: cache [questdata], lock [7 calls, 7 attempts, 0 failures]
02.11 14:43:26 QUEUE: ball.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
02.11 14:43:26 TIME: core/cache.update : 0.38 ms
02.11 14:43:26 NET: ball.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 3, _type => core/user.logoutPost }
02.11 14:43:26 QUEUE: ball.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
02.11 14:43:26 TIME: core/user.logoutPost : 0.17 ms
02.11 14:43:26 WRITEDB: UPDATE Users SET name = E'dood', deleted = E'false', email = E'', networktype = E'  ', password = E'1', isbanned = E'false', regdate = E'2016-11-02 13:49:48.726683+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478083796,"lastLoginDate":307,"lastLoadDate":1103},"effects":{"list":[]}}' WHERE ID = 3
02.11 14:43:26 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 3
02.11 14:43:27 TIMER: Clans cache...
02.11 14:43:27 TIMER: Clans cache: 0ms
02.11 14:43:36 BLOCKREMOVE: user 3 removed
02.11 14:43:36 BLOCKREMOVE: questdata 3 removed
02.11 14:44:27 TIMER: Clans cache...
02.11 14:44:27 TIMER: Clans cache: 0ms
02.11 14:45:25 NET: ball.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'dood' AND Password = E'1', _type => core/server.query }
02.11 14:45:25 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'dood' AND Password = E'1'
02.11 14:45:25 QUEUE: ball.0 (thread) response core/server.query { list => {{ name => dood, networkid => , isbanned => false, id => 3 }}, errorCode => ok, _type => core/server.query }
02.11 14:45:25 TIME: core/server.query : 0.76 ms
02.11 14:45:25 NET: ball.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
02.11 14:45:25 QUEUE: ball.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
02.11 14:45:25 TIME: core/user.isOnlineID : 0.04 ms
02.11 14:45:25 NET: ball.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
02.11 14:45:25 STATS: cache [user], get [9 calls, 2 cache hits, 7 cache misses, 0 same version, 0 not found]
02.11 14:45:25 STATS: cache [user], segments [39 calls, 25 hits, 13 misses]
02.11 14:45:25 STATS: cache [user], database [7199 calls, 7 reads, 12 writes]
02.11 14:45:25 STATS: cache [user], lock [9 calls, 9 attempts, 0 failures]
02.11 14:45:25 READDB: SELECT * FROM Users WHERE ID = 3
02.11 14:45:25 STATS: cache manager [1], get [16 calls, total 0.01 sec spent, avg 0.81 ms]
02.11 14:45:25 STATS: cache manager [1], update [20 calls, total 0 sec spent, avg 0.13 ms]
02.11 14:45:25 QUEUE: ball.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => dood, deleted => false, email => , networktype =>   , password => 1, isbanned => false, regdate => 2016-11-02 13:49:48.726683+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478083796, lastLoginDate => 307, lastLoadDate => 1103 }, effects => { list => [] } }}, version => 0, id => 3 } }
02.11 14:45:25 TIME: core/cache.get : 1.05 ms
02.11 14:45:25 NET: ball.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
02.11 14:45:25 STATS: cache [questdata], get [7 calls, 1 cache hits, 6 cache misses, 0 same version, 0 not found]
02.11 14:45:25 STATS: cache [questdata], segments [29 calls, 16 hits, 12 misses]
02.11 14:45:25 STATS: cache [questdata], database [7199 calls, 6 reads, 7 writes]
02.11 14:45:25 STATS: cache [questdata], lock [8 calls, 8 attempts, 0 failures]
02.11 14:45:25 READDB: SELECT * FROM UserQuests WHERE ID = 3
02.11 14:45:25 QUEUE: ball.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 3 } }
02.11 14:45:25 TIME: core/cache.get : 0.67 ms
02.11 14:45:25 NET: ball.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.20.227 }
02.11 14:45:25 QUEUE: ball.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
02.11 14:45:25 TIME: core/user.loginPost : 0.06 ms
02.11 14:45:27 TIMER: Clans cache...
02.11 14:45:27 TIMER: Clans cache: 0ms
02.11 14:45:32 NET: ball.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
02.11 14:45:32 QUEUE: ball.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.11 14:45:32 TIME: core/cache.update : 0.18 ms
02.11 14:45:32 WRITEDB: UPDATE Users SET name = E'dood', deleted = E'false', email = E'', networktype = E'  ', password = E'1', isbanned = E'false', regdate = E'2016-11-02 13:49:48.726683+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478083796,"lastLoginDate":307,"lastLoadDate":1103},"effects":{"list":[]}}' WHERE ID = 3
02.11 14:46:27 TIMER: Clans cache...
02.11 14:46:27 TIMER: Clans cache: 0ms
02.11 14:46:53 NET: ball.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=3 OR secondid=3 AND finished <> true, _type => core/server.query }
02.11 14:46:53 DB: SELECT id FROM battle WHERE firstid=3 OR secondid=3 AND finished <> true
02.11 14:46:53 QUEUE: ball.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
02.11 14:46:53 TIME: core/server.query : 0.53 ms
02.11 14:46:53 NET: ball.0 (thread) request ball/cache.battle.infoRoom { roomId => 0, _type => ball/cache.battle.infoRoom }
02.11 14:46:53 STATS: cache [battle], get [8 calls, 0 cache hits, 7 cache misses, 0 same version, 7 not found]
02.11 14:46:53 STATS: cache [battle], segments [8 calls, 0 hits, 7 misses]
02.11 14:46:53 STATS: cache [battle], database [7286 calls, 7 reads, 0 writes]
02.11 14:46:53 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
02.11 14:46:53 READDB: SELECT * FROM Battle WHERE ID = 0
02.11 14:46:53 TRACE: ball/cache.battle.infoRoom : Invalid field access : get
02.11 14:46:53 TRACE: ball/cache.battle.infoRoom : 
Called from modules/BallCache.hx line 70
Called from modules/BallCache.hx line 63
Called from modules/BallCache.hx line 47
Called from snipe/cache/CacheServer.hx line 487
02.11 14:46:53 QUEUE: ball.0 (thread) response ball/cache.battle.infoRoom { errorCode => _requestException, _type => ball/cache.battle.infoRoom }
02.11 14:46:53 NET: ball.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 3, _type => core/cache.update }
02.11 14:46:53 STATS: cache [user], get [10 calls, 2 cache hits, 8 cache misses, 0 same version, 0 not found]
02.11 14:46:53 STATS: cache [user], segments [42 calls, 26 hits, 15 misses]
02.11 14:46:53 STATS: cache [user], database [7286 calls, 8 reads, 13 writes]
02.11 14:46:53 STATS: cache [user], lock [9 calls, 9 attempts, 0 failures]
02.11 14:46:53 STATS: cache manager [1], get [17 calls, total 0.01 sec spent, avg 0.8 ms]
02.11 14:46:53 STATS: cache manager [1], update [22 calls, total 0 sec spent, avg 0.12 ms]
02.11 14:46:53 QUEUE: ball.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
02.11 14:46:53 TIME: core/cache.update : 0.2 ms
02.11 14:46:53 NET: ball.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 3, _type => core/cache.update }
02.11 14:46:53 STATS: cache [questdata], get [8 calls, 1 cache hits, 7 cache misses, 0 same version, 0 not found]
02.11 14:46:53 STATS: cache [questdata], segments [31 calls, 16 hits, 14 misses]
02.11 14:46:53 STATS: cache [questdata], database [7286 calls, 7 reads, 7 writes]
02.11 14:46:53 STATS: cache [questdata], lock [8 calls, 8 attempts, 0 failures]
02.11 14:46:53 QUEUE: ball.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.11 14:46:53 TIME: core/cache.update : 0.13 ms
02.11 14:46:53 NET: ball.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 3, _type => core/user.logoutPost }
02.11 14:46:53 QUEUE: ball.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
02.11 14:46:53 TIME: core/user.logoutPost : 0.04 ms
02.11 14:46:53 WRITEDB: UPDATE Users SET name = E'dood', deleted = E'false', email = E'', networktype = E'  ', password = E'1', isbanned = E'false', regdate = E'2016-11-02 13:49:48.726683+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478083796,"lastLoginDate":307,"lastLoadDate":1103},"effects":{"list":[]}}' WHERE ID = 3
02.11 14:46:53 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 3
02.11 14:47:03 BLOCKREMOVE: user 3 removed
02.11 14:47:03 BLOCKREMOVE: questdata 3 removed
02.11 14:47:07 NET: ball.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'dood' AND Password = E'1', _type => core/server.query }
02.11 14:47:07 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'dood' AND Password = E'1'
02.11 14:47:07 QUEUE: ball.0 (thread) response core/server.query { list => {{ name => dood, networkid => , isbanned => false, id => 3 }}, errorCode => ok, _type => core/server.query }
02.11 14:47:07 TIME: core/server.query : 1.47 ms
02.11 14:47:07 NET: ball.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
02.11 14:47:07 QUEUE: ball.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
02.11 14:47:07 TIME: core/user.isOnlineID : 0.13 ms
02.11 14:47:07 NET: ball.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
02.11 14:47:07 READDB: SELECT * FROM Users WHERE ID = 3
02.11 14:47:07 QUEUE: ball.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => dood, deleted => false, email => , networktype =>   , password => 1, isbanned => false, regdate => 2016-11-02 13:49:48.726683+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478083796, lastLoginDate => 307, lastLoadDate => 1103 }, effects => { list => [] } }}, version => 0, id => 3 } }
02.11 14:47:07 TIME: core/cache.get : 1.74 ms
02.11 14:47:07 NET: ball.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
02.11 14:47:07 READDB: SELECT * FROM UserQuests WHERE ID = 3
02.11 14:47:07 QUEUE: ball.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 3 } }
02.11 14:47:07 TIME: core/cache.get : 1.03 ms
02.11 14:47:07 NET: ball.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.20.227 }
02.11 14:47:07 QUEUE: ball.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
02.11 14:47:07 TIME: core/user.loginPost : 0.12 ms
02.11 14:47:17 NET: ball.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
02.11 14:47:17 QUEUE: ball.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.11 14:47:17 TIME: core/cache.update : 0.07 ms
02.11 14:47:17 WRITEDB: UPDATE Users SET name = E'dood', deleted = E'false', email = E'', networktype = E'  ', password = E'1', isbanned = E'false', regdate = E'2016-11-02 13:49:48.726683+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478083796,"lastLoginDate":307,"lastLoadDate":1103},"effects":{"list":[]}}' WHERE ID = 3
02.11 14:47:27 TIMER: Clans cache...
02.11 14:47:27 TIMER: Clans cache: 0ms
02.11 14:47:27 TIMER: Clans cache...
02.11 14:47:27 TIMER: Clans cache: 0ms
02.11 14:47:27 TIMER: Clans cache...
02.11 14:47:27 TIMER: Clans cache: 0ms
02.11 14:50:26 NET: ball.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=3 OR secondid=3 AND finished <> true, _type => core/server.query }
02.11 14:50:26 DB: SELECT id FROM battle WHERE firstid=3 OR secondid=3 AND finished <> true
02.11 14:50:26 QUEUE: ball.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
02.11 14:50:26 TIME: core/server.query : 1.08 ms
02.11 14:50:26 NET: ball.0 (thread) request ball/cache.battle.infoRoom { roomId => 0, _type => ball/cache.battle.infoRoom }
02.11 14:50:26 STATS: cache [battle], get [9 calls, 0 cache hits, 8 cache misses, 0 same version, 8 not found]
02.11 14:50:26 STATS: cache [battle], segments [9 calls, 0 hits, 8 misses]
02.11 14:50:26 STATS: cache [battle], database [7499 calls, 8 reads, 0 writes]
02.11 14:50:26 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
02.11 14:50:26 READDB: SELECT * FROM Battle WHERE ID = 0
02.11 14:50:26 TRACE: ball/cache.battle.infoRoom : Invalid field access : get
02.11 14:50:26 TRACE: ball/cache.battle.infoRoom : 
Called from modules/BallCache.hx line 70
Called from modules/BallCache.hx line 63
Called from modules/BallCache.hx line 47
Called from snipe/cache/CacheServer.hx line 487
02.11 14:50:26 QUEUE: ball.0 (thread) response ball/cache.battle.infoRoom { errorCode => _requestException, _type => ball/cache.battle.infoRoom }
02.11 14:50:26 NET: ball.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 3, _type => core/cache.update }
02.11 14:50:26 STATS: cache [user], get [11 calls, 2 cache hits, 9 cache misses, 0 same version, 0 not found]
02.11 14:50:26 STATS: cache [user], segments [47 calls, 29 hits, 17 misses]
02.11 14:50:26 STATS: cache [user], database [7499 calls, 9 reads, 15 writes]
02.11 14:50:26 STATS: cache [user], lock [10 calls, 10 attempts, 0 failures]
02.11 14:50:26 STATS: cache manager [1], get [19 calls, total 0.02 sec spent, avg 0.83 ms]
02.11 14:50:26 STATS: cache manager [1], update [25 calls, total 0 sec spent, avg 0.13 ms]
02.11 14:50:26 QUEUE: ball.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
02.11 14:50:26 TIME: core/cache.update : 0.65 ms
02.11 14:50:26 NET: ball.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 3, _type => core/cache.update }
02.11 14:50:26 STATS: cache [questdata], get [9 calls, 1 cache hits, 8 cache misses, 0 same version, 0 not found]
02.11 14:50:26 STATS: cache [questdata], segments [35 calls, 18 hits, 16 misses]
02.11 14:50:26 STATS: cache [questdata], database [7499 calls, 8 reads, 8 writes]
02.11 14:50:26 STATS: cache [questdata], lock [9 calls, 9 attempts, 0 failures]
02.11 14:50:26 QUEUE: ball.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.11 14:50:26 TIME: core/cache.update : 0.45 ms
02.11 14:50:26 NET: ball.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 3, _type => core/user.logoutPost }
02.11 14:50:26 QUEUE: ball.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
02.11 14:50:26 TIME: core/user.logoutPost : 0.15 ms
02.11 14:50:26 WRITEDB: UPDATE Users SET name = E'dood', deleted = E'false', email = E'', networktype = E'  ', password = E'1', isbanned = E'false', regdate = E'2016-11-02 13:49:48.726683+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478083796,"lastLoginDate":307,"lastLoadDate":1103},"effects":{"list":[]}}' WHERE ID = 3
02.11 14:50:26 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 3
02.11 14:50:27 TIMER: Clans cache...
02.11 14:50:27 TIMER: Clans cache: 0ms
02.11 14:50:36 BLOCKREMOVE: user 3 removed
02.11 14:50:36 BLOCKREMOVE: questdata 3 removed
02.11 14:51:10 NET: ball.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'dood' AND Password = E'1', _type => core/server.query }
02.11 14:51:10 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'dood' AND Password = E'1'
02.11 14:51:10 QUEUE: ball.0 (thread) response core/server.query { list => {{ name => dood, networkid => , isbanned => false, id => 3 }}, errorCode => ok, _type => core/server.query }
02.11 14:51:10 TIME: core/server.query : 0.6 ms
02.11 14:51:10 NET: ball.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
02.11 14:51:10 QUEUE: ball.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
02.11 14:51:10 TIME: core/user.isOnlineID : 0.04 ms
02.11 14:51:10 NET: ball.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
02.11 14:51:10 READDB: SELECT * FROM Users WHERE ID = 3
02.11 14:51:10 QUEUE: ball.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => dood, deleted => false, email => , networktype =>   , password => 1, isbanned => false, regdate => 2016-11-02 13:49:48.726683+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478083796, lastLoginDate => 307, lastLoadDate => 1103 }, effects => { list => [] } }}, version => 0, id => 3 } }
02.11 14:51:10 TIME: core/cache.get : 2.58 ms
02.11 14:51:10 NET: ball.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
02.11 14:51:10 READDB: SELECT * FROM UserQuests WHERE ID = 3
02.11 14:51:10 QUEUE: ball.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 3 } }
02.11 14:51:10 TIME: core/cache.get : 0.5 ms
02.11 14:51:10 NET: ball.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.20.227 }
02.11 14:51:10 QUEUE: ball.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
02.11 14:51:10 TIME: core/user.loginPost : 0.06 ms
02.11 14:51:17 NET: ball.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
02.11 14:51:17 QUEUE: ball.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.11 14:51:17 TIME: core/cache.update : 0.16 ms
02.11 14:51:17 WRITEDB: UPDATE Users SET name = E'dood', deleted = E'false', email = E'', networktype = E'  ', password = E'1', isbanned = E'false', regdate = E'2016-11-02 13:49:48.726683+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478083796,"lastLoginDate":307,"lastLoadDate":1103},"effects":{"list":[]}}' WHERE ID = 3
02.11 14:51:20 NET: ball.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=3 OR secondid=3 AND finished <> true, _type => core/server.query }
02.11 14:51:20 DB: SELECT id FROM battle WHERE firstid=3 OR secondid=3 AND finished <> true
02.11 14:51:20 QUEUE: ball.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
02.11 14:51:20 TIME: core/server.query : 0.63 ms
02.11 14:51:20 NET: ball.0 (thread) request ball/cache.battle.infoRoom { roomId => 0, _type => ball/cache.battle.infoRoom }
02.11 14:51:20 READDB: SELECT * FROM Battle WHERE ID = 0
02.11 14:51:20 TRACE: ball/cache.battle.infoRoom : Invalid field access : get
02.11 14:51:20 TRACE: ball/cache.battle.infoRoom : 
Called from modules/BallCache.hx line 70
Called from modules/BallCache.hx line 63
Called from modules/BallCache.hx line 47
Called from snipe/cache/CacheServer.hx line 487
02.11 14:51:20 QUEUE: ball.0 (thread) response ball/cache.battle.infoRoom { errorCode => _requestException, _type => ball/cache.battle.infoRoom }
02.11 14:51:20 NET: ball.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 3, _type => core/cache.update }
02.11 14:51:20 QUEUE: ball.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
02.11 14:51:20 TIME: core/cache.update : 0.13 ms
02.11 14:51:20 NET: ball.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 3, _type => core/cache.update }
02.11 14:51:20 QUEUE: ball.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.11 14:51:20 TIME: core/cache.update : 0.1 ms
02.11 14:51:20 NET: ball.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 3, _type => core/user.logoutPost }
02.11 14:51:20 QUEUE: ball.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
02.11 14:51:20 TIME: core/user.logoutPost : 0.05 ms
02.11 14:51:20 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 3
02.11 14:51:22 WRITEDB: UPDATE Users SET name = E'dood', deleted = E'false', email = E'', networktype = E'  ', password = E'1', isbanned = E'false', regdate = E'2016-11-02 13:49:48.726683+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478083796,"lastLoginDate":307,"lastLoadDate":1103},"effects":{"list":[]}}' WHERE ID = 3
02.11 14:51:27 TIMER: Clans cache...
02.11 14:51:27 TIMER: Clans cache: 0ms
02.11 14:51:30 BLOCKREMOVE: questdata 3 removed
02.11 14:51:32 BLOCKREMOVE: user 3 removed
02.11 14:51:33 NET: ball.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'dood' AND Password = E'1', _type => core/server.query }
02.11 14:51:33 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'dood' AND Password = E'1'
02.11 14:51:33 QUEUE: ball.0 (thread) response core/server.query { list => {{ name => dood, networkid => , isbanned => false, id => 3 }}, errorCode => ok, _type => core/server.query }
02.11 14:51:33 TIME: core/server.query : 1.64 ms
02.11 14:51:33 NET: ball.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
02.11 14:51:33 QUEUE: ball.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
02.11 14:51:33 TIME: core/user.isOnlineID : 0.11 ms
02.11 14:51:33 NET: ball.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
02.11 14:51:33 STATS: cache [user], get [12 calls, 2 cache hits, 10 cache misses, 0 same version, 0 not found]
02.11 14:51:33 STATS: cache [user], segments [54 calls, 34 hits, 19 misses]
02.11 14:51:33 STATS: cache [user], database [7566 calls, 10 reads, 18 writes]
02.11 14:51:33 STATS: cache [user], lock [12 calls, 12 attempts, 0 failures]
02.11 14:51:33 READDB: SELECT * FROM Users WHERE ID = 3
02.11 14:51:33 STATS: cache manager [1], get [22 calls, total 0.02 sec spent, avg 0.93 ms]
02.11 14:51:33 STATS: cache manager [1], update [29 calls, total 0 sec spent, avg 0.13 ms]
02.11 14:51:33 QUEUE: ball.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => dood, deleted => false, email => , networktype =>   , password => 1, isbanned => false, regdate => 2016-11-02 13:49:48.726683+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478083796, lastLoginDate => 307, lastLoadDate => 1103 }, effects => { list => [] } }}, version => 0, id => 3 } }
02.11 14:51:33 TIME: core/cache.get : 2.15 ms
02.11 14:51:33 NET: ball.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
02.11 14:51:33 STATS: cache [questdata], get [10 calls, 1 cache hits, 9 cache misses, 0 same version, 0 not found]
02.11 14:51:33 STATS: cache [questdata], segments [41 calls, 22 hits, 18 misses]
02.11 14:51:33 STATS: cache [questdata], database [7566 calls, 9 reads, 10 writes]
02.11 14:51:33 STATS: cache [questdata], lock [11 calls, 11 attempts, 0 failures]
02.11 14:51:33 READDB: SELECT * FROM UserQuests WHERE ID = 3
02.11 14:51:33 QUEUE: ball.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 3 } }
02.11 14:51:33 TIME: core/cache.get : 0.99 ms
02.11 14:51:33 NET: ball.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.20.227 }
02.11 14:51:33 QUEUE: ball.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
02.11 14:51:33 TIME: core/user.loginPost : 0.1 ms
02.11 14:51:42 NET: ball.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
02.11 14:51:42 QUEUE: ball.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.11 14:51:42 TIME: core/cache.update : 0.19 ms
02.11 14:51:42 WRITEDB: UPDATE Users SET name = E'dood', deleted = E'false', email = E'', networktype = E'  ', password = E'1', isbanned = E'false', regdate = E'2016-11-02 13:49:48.726683+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478083796,"lastLoginDate":307,"lastLoadDate":1103},"effects":{"list":[]}}' WHERE ID = 3
02.11 14:52:27 TIMER: Clans cache...
02.11 14:52:27 TIMER: Clans cache: 0ms
02.11 14:53:09 NET: ball.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=3 OR secondid=3 AND finished <> true, _type => core/server.query }
02.11 14:53:09 DB: SELECT id FROM battle WHERE firstid=3 OR secondid=3 AND finished <> true
02.11 14:53:09 QUEUE: ball.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
02.11 14:53:09 TIME: core/server.query : 0.92 ms
02.11 14:53:09 NET: ball.0 (thread) request ball/cache.battle.infoRoom { roomId => 0, _type => ball/cache.battle.infoRoom }
02.11 14:53:09 STATS: cache [battle], get [11 calls, 0 cache hits, 10 cache misses, 0 same version, 10 not found]
02.11 14:53:09 STATS: cache [battle], segments [11 calls, 0 hits, 10 misses]
02.11 14:53:09 STATS: cache [battle], database [7662 calls, 10 reads, 0 writes]
02.11 14:53:09 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
02.11 14:53:09 READDB: SELECT * FROM Battle WHERE ID = 0
02.11 14:53:09 TRACE: ball/cache.battle.infoRoom : Invalid field access : get
02.11 14:53:09 TRACE: ball/cache.battle.infoRoom : 
Called from modules/BallCache.hx line 70
Called from modules/BallCache.hx line 63
Called from modules/BallCache.hx line 47
Called from snipe/cache/CacheServer.hx line 487
02.11 14:53:09 QUEUE: ball.0 (thread) response ball/cache.battle.infoRoom { errorCode => _requestException, _type => ball/cache.battle.infoRoom }
02.11 14:53:09 NET: ball.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 3, _type => core/cache.update }
02.11 14:53:09 STATS: cache [user], get [13 calls, 2 cache hits, 11 cache misses, 0 same version, 0 not found]
02.11 14:53:09 STATS: cache [user], segments [57 calls, 35 hits, 21 misses]
02.11 14:53:09 STATS: cache [user], database [7662 calls, 11 reads, 19 writes]
02.11 14:53:09 STATS: cache [user], lock [12 calls, 12 attempts, 0 failures]
02.11 14:53:09 STATS: cache manager [1], get [23 calls, total 0.02 sec spent, avg 0.93 ms]
02.11 14:53:09 STATS: cache manager [1], update [31 calls, total 0 sec spent, avg 0.13 ms]
02.11 14:53:09 QUEUE: ball.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
02.11 14:53:09 TIME: core/cache.update : 0.71 ms
02.11 14:53:09 NET: ball.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 3, _type => core/cache.update }
02.11 14:53:09 STATS: cache [questdata], get [11 calls, 1 cache hits, 10 cache misses, 0 same version, 0 not found]
02.11 14:53:09 STATS: cache [questdata], segments [43 calls, 22 hits, 20 misses]
02.11 14:53:09 STATS: cache [questdata], database [7662 calls, 10 reads, 10 writes]
02.11 14:53:09 STATS: cache [questdata], lock [11 calls, 11 attempts, 0 failures]
02.11 14:53:09 QUEUE: ball.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.11 14:53:09 TIME: core/cache.update : 0.56 ms
02.11 14:53:09 NET: ball.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 3, _type => core/user.logoutPost }
02.11 14:53:09 QUEUE: ball.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
02.11 14:53:09 TIME: core/user.logoutPost : 0.15 ms
02.11 14:53:09 WRITEDB: UPDATE Users SET name = E'dood', deleted = E'false', email = E'', networktype = E'  ', password = E'1', isbanned = E'false', regdate = E'2016-11-02 13:49:48.726683+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478083796,"lastLoginDate":307,"lastLoadDate":1103},"effects":{"list":[]}}' WHERE ID = 3
02.11 14:53:09 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 3
02.11 14:53:19 BLOCKREMOVE: user 3 removed
02.11 14:53:19 BLOCKREMOVE: questdata 3 removed
02.11 14:53:27 TIMER: Clans cache...
02.11 14:53:27 TIMER: Clans cache: 0ms
02.11 14:53:27 TIMER: Clans cache...
02.11 14:53:27 TIMER: Clans cache: 0ms
02.11 14:53:27 TIMER: Clans cache...
02.11 14:53:27 TIMER: Clans cache: 0ms
02.11 14:53:27 TIMER: Clans cache...
02.11 14:53:27 TIMER: Clans cache: 0ms
02.11 14:53:27 TIMER: Clans cache...
02.11 14:53:27 TIMER: Clans cache: 0ms
02.11 14:53:27 TIMER: Clans cache...
02.11 14:53:27 TIMER: Clans cache: 0ms
02.11 14:53:27 TIMER: Clans cache...
02.11 14:53:27 TIMER: Clans cache: 0ms
02.11 14:53:27 PENDING: INSERT INTO LogUserOnlineCount (Date, Min, Max, Avg) VALUES (now(), 0, 1, 0)
02.11 14:53:27 TIMER: Clans cache...
02.11 14:53:27 TIMER: Clans cache: 0ms
02.11 14:53:27 TIMER: Clans cache...
02.11 14:53:27 TIMER: Clans cache: 0ms
02.11 14:53:27 TIMER: Clans cache...
02.11 14:53:27 TIMER: Clans cache: 0ms
02.11 14:53:27 TIMER: Clans cache...
02.11 14:53:27 TIMER: Clans cache: 0ms
02.11 14:53:27 TIMER: Clans cache...
02.11 14:53:27 TIMER: Clans cache: 0ms
02.11 14:53:27 TIMER: Clans cache...
02.11 14:53:27 TIMER: Clans cache: 0ms
02.11 14:53:27 TIMER: Clans cache...
02.11 14:53:27 TIMER: Clans cache: 0ms
02.11 14:53:27 TIMER: Clans cache...
02.11 14:53:27 TIMER: Clans cache: 0ms
02.11 14:53:27 TIMER: Clans cache...
02.11 14:53:27 TIMER: Clans cache: 0ms
02.11 14:53:27 TIMER: Clans cache...
02.11 14:53:27 TIMER: Clans cache: 0ms
