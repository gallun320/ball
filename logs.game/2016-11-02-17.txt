02.11 17:00:01 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:00:01 TRACE: User not logon yet.
02.11 17:00:08 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:00:08 TRACE: User not logon yet.
02.11 17:00:16 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:00:16 TRACE: User not logon yet.
02.11 17:00:24 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:00:24 TRACE: User not logon yet.
02.11 17:00:26 TIMER: Check auto-disconnect...
02.11 17:00:28 STATS: ball.0 cache, locks:0
02.11 17:00:31 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:00:31 TRACE: User not logon yet.
02.11 17:00:39 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:00:39 TRACE: User not logon yet.
02.11 17:00:47 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:00:47 TRACE: User not logon yet.
02.11 17:00:54 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:00:54 TRACE: User not logon yet.
02.11 17:01:02 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:01:02 TRACE: User not logon yet.
02.11 17:01:09 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:01:09 TRACE: User not logon yet.
02.11 17:01:17 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:01:17 TRACE: User not logon yet.
02.11 17:01:25 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:01:25 TRACE: User not logon yet.
02.11 17:01:26 TIMER: Check auto-disconnect...
02.11 17:01:28 STATS: ball.0 cache, locks:0
02.11 17:01:32 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:01:32 TRACE: User not logon yet.
02.11 17:01:40 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:01:40 TRACE: User not logon yet.
02.11 17:01:47 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:01:47 TRACE: User not logon yet.
02.11 17:01:55 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:01:55 TRACE: User not logon yet.
02.11 17:02:03 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:02:03 TRACE: User not logon yet.
02.11 17:02:10 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:02:10 TRACE: User not logon yet.
02.11 17:02:18 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:02:18 TRACE: User not logon yet.
02.11 17:02:26 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:02:26 TRACE: User not logon yet.
02.11 17:02:26 TIMER: Check auto-disconnect...
02.11 17:02:28 STATS: ball.0 cache, locks:0
02.11 17:02:33 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:02:33 TRACE: User not logon yet.
02.11 17:02:41 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:02:41 TRACE: User not logon yet.
02.11 17:02:48 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:02:48 TRACE: User not logon yet.
02.11 17:02:56 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:02:56 TRACE: User not logon yet.
02.11 17:03:04 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:03:04 TRACE: User not logon yet.
02.11 17:03:11 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:03:11 TRACE: User not logon yet.
02.11 17:03:19 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:03:19 TRACE: User not logon yet.
02.11 17:03:26 TIMER: Check auto-disconnect...
02.11 17:03:27 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:03:27 TRACE: User not logon yet.
02.11 17:03:28 STATS: ball.0 cache, locks:0
02.11 17:03:34 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:03:34 TRACE: User not logon yet.
02.11 17:03:42 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:03:42 TRACE: User not logon yet.
02.11 17:03:49 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:03:49 TRACE: User not logon yet.
02.11 17:03:57 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:03:57 TRACE: User not logon yet.
02.11 17:04:05 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:04:05 TRACE: User not logon yet.
02.11 17:04:12 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:04:12 TRACE: User not logon yet.
02.11 17:04:26 TIMER: Check auto-disconnect...
02.11 17:04:28 STATS: ball.0 cache, locks:0
02.11 17:05:26 TIMER: Check auto-disconnect...
02.11 17:05:28 STATS: ball.0 cache, locks:0
02.11 17:06:26 TIMER: Check auto-disconnect...
02.11 17:06:28 STATS: ball.0 cache, locks:0
02.11 17:06:52 NET: Client (conid:5966655) connected to ball.0 (clients:2)
02.11 17:06:52 ++ NET: null req: user.register { messageType => user.register }
02.11 17:06:56 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:06:56 TRACE: User not logon yet.
02.11 17:07:02 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:07:02 TRACE: User not logon yet.
02.11 17:07:10 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:07:10 TRACE: User not logon yet.
02.11 17:07:15 NET: Client (conid:63114497) connected to ball.0 (clients:3)
02.11 17:07:16 ++ NET: null req: user.register { messageType => user.register }
02.11 17:07:18 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:07:18 TRACE: User not logon yet.
02.11 17:07:19 NET: Client (name:null conid:5966655 TCP) disconnected from ball.0 (clients:2)
02.11 17:07:20 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:07:20 TRACE: User not logon yet.
02.11 17:07:23 NET: Client (conid:68144972) connected to ball.0 (clients:3)
02.11 17:07:23 ++ NET: null req: user.register { messageType => user.register }
02.11 17:07:26 TIMER: Check auto-disconnect...
02.11 17:07:26 NET: Client (name:null conid:46206258 TCP) disconnected from ball.0 (clients:2)
02.11 17:07:27 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:07:27 TRACE: User not logon yet.
02.11 17:07:28 STATS: ball.0 cache, locks:0
02.11 17:07:29 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:07:29 TRACE: User not logon yet.
02.11 17:07:34 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:07:34 TRACE: User not logon yet.
02.11 17:07:37 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:07:37 TRACE: User not logon yet.
02.11 17:07:37 NET: Client (name:null conid:63114497 TCP) disconnected from ball.0 (clients:1)
02.11 17:07:41 NET: Client (conid:41173838) connected to ball.0 (clients:2)
02.11 17:07:42 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:07:42 TRACE: User not logon yet.
02.11 17:07:42 ++ NET: null req: user.register { messageType => user.register }
02.11 17:07:45 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:07:45 TRACE: User not logon yet.
02.11 17:07:49 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:07:49 TRACE: User not logon yet.
02.11 17:07:52 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:07:52 TRACE: User not logon yet.
02.11 17:07:56 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:07:56 TRACE: User not logon yet.
02.11 17:07:59 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:07:59 TRACE: User not logon yet.
02.11 17:08:03 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:08:03 TRACE: User not logon yet.
02.11 17:08:05 NET: Client (name:null conid:41173838 TCP) disconnected from ball.0 (clients:1)
02.11 17:08:09 NET: Client (conid:3954532) connected to ball.0 (clients:2)
02.11 17:08:10 ++ NET: null req: user.register { messageType => user.register }
02.11 17:08:11 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:08:11 TRACE: User not logon yet.
02.11 17:08:13 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:08:13 TRACE: User not logon yet.
02.11 17:08:19 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:08:19 TRACE: User not logon yet.
02.11 17:08:20 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:08:20 TRACE: User not logon yet.
02.11 17:08:26 TIMER: Check auto-disconnect...
02.11 17:08:26 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:08:26 TRACE: User not logon yet.
02.11 17:08:27 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:08:27 TRACE: User not logon yet.
02.11 17:08:28 STATS: ball.0 cache, locks:0
02.11 17:08:33 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:08:33 TRACE: User not logon yet.
02.11 17:08:34 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:08:34 TRACE: User not logon yet.
02.11 17:08:37 NET: Client (name:null conid:68144972 TCP) disconnected from ball.0 (clients:1)
02.11 17:08:39 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:08:39 TRACE: User not logon yet.
02.11 17:08:42 NET: Client (conid:63201806) connected to ball.0 (clients:2)
02.11 17:08:42 ++ NET: null req: user.register { messageType => user.register }
02.11 17:08:45 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:08:45 TRACE: User not logon yet.
02.11 17:08:46 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:08:46 TRACE: User not logon yet.
02.11 17:08:52 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:08:52 TRACE: User not logon yet.
02.11 17:08:53 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:08:53 TRACE: User not logon yet.
02.11 17:08:59 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:08:59 TRACE: User not logon yet.
02.11 17:09:00 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:09:00 TRACE: User not logon yet.
02.11 17:09:06 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:09:06 TRACE: User not logon yet.
02.11 17:09:08 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:09:08 TRACE: User not logon yet.
02.11 17:09:13 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:09:13 TRACE: User not logon yet.
02.11 17:09:14 NET: Client (name:null conid:3954532 TCP) disconnected from ball.0 (clients:1)
02.11 17:09:15 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:09:15 TRACE: User not logon yet.
02.11 17:09:18 NET: Client (conid:69591233) connected to ball.0 (clients:2)
02.11 17:09:19 ++ NET: null req: user.register { messageType => user.register }
02.11 17:09:22 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:09:22 TRACE: User not logon yet.
02.11 17:09:22 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:09:22 TRACE: User not logon yet.
02.11 17:09:26 TIMER: Check auto-disconnect...
02.11 17:09:28 STATS: ball.0 cache, locks:0
02.11 17:09:29 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:09:29 TRACE: User not logon yet.
02.11 17:09:35 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:09:35 TRACE: User not logon yet.
02.11 17:09:42 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:09:42 TRACE: User not logon yet.
02.11 17:09:49 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:09:49 TRACE: User not logon yet.
02.11 17:09:57 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:09:57 TRACE: User not logon yet.
02.11 17:10:04 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:10:04 TRACE: User not logon yet.
02.11 17:10:10 NET: Client (name:null conid:69591233 TCP) disconnected from ball.0 (clients:1)
02.11 17:10:14 NET: Client (conid:22023136) connected to ball.0 (clients:2)
02.11 17:10:15 ++ NET: null req: user.register { messageType => user.register }
02.11 17:10:18 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:10:18 TRACE: User not logon yet.
02.11 17:10:25 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:10:25 TRACE: User not logon yet.
02.11 17:10:26 TIMER: Check auto-disconnect...
02.11 17:10:28 STATS: ball.0 cache, locks:0
02.11 17:10:33 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:10:33 TRACE: User not logon yet.
02.11 17:10:40 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:10:40 TRACE: User not logon yet.
02.11 17:10:47 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:10:47 TRACE: User not logon yet.
02.11 17:10:55 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:10:55 TRACE: User not logon yet.
02.11 17:11:02 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:11:02 TRACE: User not logon yet.
02.11 17:11:09 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:11:09 TRACE: User not logon yet.
02.11 17:11:17 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:11:17 TRACE: User not logon yet.
02.11 17:11:24 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:11:24 TRACE: User not logon yet.
02.11 17:11:26 TIMER: Check auto-disconnect...
02.11 17:11:28 STATS: ball.0 cache, locks:0
02.11 17:11:31 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:11:31 TRACE: User not logon yet.
02.11 17:11:39 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:11:39 TRACE: User not logon yet.
02.11 17:11:40 NET: Client (name:null conid:22023136 TCP) disconnected from ball.0 (clients:1)
02.11 17:11:44 NET: Client (conid:49827422) connected to ball.0 (clients:2)
02.11 17:11:45 ++ NET: null req: user.register { messageType => user.register }
02.11 17:11:48 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:11:48 TRACE: User not logon yet.
02.11 17:11:54 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
02.11 17:11:54 TRACE: User not logon yet.
02.11 17:11:55 NET: Client (name:null conid:49827422 TCP) disconnected from ball.0 (clients:1)
02.11 17:12:26 TIMER: Check auto-disconnect...
02.11 17:12:26 NET: Client (name:null conid:63201806 TCP) disconnected from ball.0 (clients:0)
02.11 17:12:28 STATS: ball.0 cache, locks:0
02.11 17:13:26 TIMER: Check auto-disconnect...
02.11 17:13:28 STATS: ball.0 cache, locks:0
02.11 17:13:40 NET: Client (conid:53901982) connected to ball.0 (clients:1)
02.11 17:13:47 ++ NET: null req: user.login { password => 1, name => dood, messageType => user.login }
02.11 17:13:47 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'dood' AND Password = E'1'
02.11 17:13:47 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'dood' AND Password = E'1', _type => core/server.query }
02.11 17:13:47 -<<-: core/server.query { list => {{ name => dood, networkid => , isbanned => false, id => 3 }}, errorCode => ok, _type => core/server.query }
02.11 17:13:47 STATS: ball.0 cache connection, 231 calls, total 0.540427207946777 sec spent, avg 2.34 ms
02.11 17:13:47 ->>-: core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
02.11 17:13:47 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
02.11 17:13:47 ->>-: core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
02.11 17:13:47 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => dood, deleted => false, email => , networktype =>   , password => 1, isbanned => false, regdate => 2016-11-02 13:49:48.726683+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478083796, lastLoginDate => 307, lastLoadDate => 1103 }, effects => { list => [] } }}, version => 0, id => 3 } }
02.11 17:13:47 ->>-: core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
02.11 17:13:47 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 3 } }
02.11 17:13:47 NET: Client login (conid:53901982, id:3, name:dood)
02.11 17:13:47 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.20.227 }
02.11 17:13:47 -<<-: core/user.loginPost { _type => core/user.loginPost }
02.11 17:13:47 == NET: dood ret: user.login { name => dood, type => user.login, errorCode => ok, id => 3 }
02.11 17:13:47 == NET: dood ret: user.join { name => dood, type => user.join }
02.11 17:13:50 ++ NET: dood req: battle.find { messageType => battle.find }
02.11 17:13:50 ->>-: ball/cache.battle.find { _type => ball/cache.battle.find }
02.11 17:13:50 -<<-: ball/cache.battle.find { list => [], count => 0, errorCode => not, _type => ball/cache.battle.find }
02.11 17:13:50 ->>-: ball/cache.battle.create { selfId => 3, _type => ball/cache.battle.create }
02.11 17:13:50 -<<-: ball/cache.battle.create { room => 1, errorCode => ok, _type => ball/cache.battle.create, player => 1 }
02.11 17:13:50 TIME: battle.find 71.88 ms
02.11 17:13:50 == NET: dood ret: battle.find { room => 1, type => battle.find, errorCode => ok, _type => ball/cache.battle.create, player => 1 }
02.11 17:13:53 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
02.11 17:13:53 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.11 17:14:26 TIMER: Check auto-disconnect...
02.11 17:14:28 STATS: ball.0 cache, locks:2
02.11 17:14:41 NET: Client (name:dood conid:53901982 TCP) disconnected from ball.0 (clients:0)
02.11 17:14:41 DB: SELECT id FROM battle WHERE firstid=3 OR secondid=3 AND finished <> true
02.11 17:14:41 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=3 OR secondid=3 AND finished <> true, _type => core/server.query }
02.11 17:14:41 -<<-: core/server.query { list => {{ id => 1 }}, errorCode => ok, _type => core/server.query }
02.11 17:14:41 ->>-: ball/cache.battle.infoRoom { roomId => 1, _type => ball/cache.battle.infoRoom }
02.11 17:14:41 -<<-: ball/cache.battle.infoRoom { secondId => 0, firstId => 3, _type => ball/cache.battle.infoRoom, turnId => 3 }
02.11 17:14:41 ->>-: ball/cache.battle.deleteRoom { roomId => 1, _type => ball/cache.battle.deleteRoom }
02.11 17:14:41 -<<-: ball/cache.battle.deleteRoom { errorCode => ok, _type => ball/cache.battle.deleteRoom }
02.11 17:14:41 ->>-: core/user.sendTo { id => 0, _type => core/user.sendTo, msg => { _type => battle.end } }
02.11 17:14:41 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
02.11 17:14:41 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 3, _type => core/cache.update }
02.11 17:14:41 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
02.11 17:14:41 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 3, _type => core/cache.update }
02.11 17:14:41 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.11 17:14:41 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 3, _type => core/user.logoutPost }
02.11 17:14:41 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
02.11 17:15:26 TIMER: Check auto-disconnect...
02.11 17:15:28 STATS: ball.0 cache, locks:0
02.11 17:16:26 TIMER: Check auto-disconnect...
