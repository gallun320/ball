11.10 11:01:21 ->>-: core/server.login { host => 172.16.35.21, name => mine.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
11.10 11:01:21 -<<-: server.login ok
11.10 11:01:21 DB: SELECT * FROM LocalizationStrings
11.10 11:01:21 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
11.10 11:01:21 -<<-: core/server.query ok
11.10 11:01:21 TIMER: Starting timer...
11.10 11:01:21 TIMER: Timer running...
11.10 11:01:21 DB: SELECT * FROM GameVars
11.10 11:01:21 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
11.10 11:01:21 -<<-: core/server.query ok
11.10 11:01:21 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
11.10 11:01:21 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
11.10 11:01:21 -<<-: core/server.query ok
11.10 11:01:21 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
11.10 11:01:21 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
11.10 11:01:21 -<<-: core/server.query ok
11.10 11:01:21 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
11.10 11:01:21 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
11.10 11:01:21 -<<-: core/server.query ok
11.10 11:01:21 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
11.10 11:01:21 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
11.10 11:01:21 -<<-: core/server.query ok
11.10 11:01:21 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
11.10 11:01:21 -<<-: core/quest.getDaily ok
11.10 11:01:21 DB: SELECT * FROM UserAttributeTypes
11.10 11:01:21 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
11.10 11:01:21 -<<-: core/server.query ok
11.10 11:01:21 DB: SELECT * FROM UserVariableTypes
11.10 11:01:21 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
11.10 11:01:21 -<<-: core/server.query ok
11.10 11:01:21 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
11.10 11:01:21 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
11.10 11:01:21 -<<-: core/server.query ok
11.10 11:01:21 DB: SELECT * FROM ItemGroups
11.10 11:01:21 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
11.10 11:01:21 -<<-: core/server.query ok
11.10 11:01:21 DB: SELECT * FROM Bundles ORDER BY ID
11.10 11:01:21 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
11.10 11:01:21 -<<-: core/server.query ok
11.10 11:01:21 DB: SELECT * FROM BundleItems ORDER BY ID
11.10 11:01:21 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
11.10 11:01:21 -<<-: core/server.query ok
11.10 11:01:21 SHOP: loading items...
11.10 11:01:21 ->>-: core/shop.getList { _type => core/shop.getList }
11.10 11:01:21 -<<-: core/shop.getList ok
11.10 11:01:21 SHOP: 0 items loaded (0 sec)
11.10 11:01:21 DB: SELECT * FROM EffectAttributeTypes
11.10 11:01:21 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
11.10 11:01:21 -<<-: core/server.query ok
11.10 11:01:21 DB: SELECT * FROM Effects
11.10 11:01:21 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
11.10 11:01:21 -<<-: core/server.query ok
11.10 11:01:21 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part11.10 11:02:18 ->>-: core/server.login { host => 127.0.0.1, name => ball.0, port => 2010, type => game, _type => core/server.login, externalHost => 127.0.0.1, externalPort => 2010 }
11.10 11:02:18 -<<-: server.login ok
11.10 11:02:18 DB: SELECT * FROM LocalizationStrings
11.10 11:02:18 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
11.10 11:02:18 -<<-: core/server.query ok
11.10 11:02:18 TIMER: Starting timer...
11.10 11:02:18 TIMER: Timer running...
11.10 11:02:18 DB: SELECT * FROM GameVars
11.10 11:02:18 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
11.10 11:02:18 -<<-: core/server.query ok
11.10 11:02:18 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
11.10 11:02:18 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
11.10 11:02:18 -<<-: core/server.query ok
11.10 11:02:18 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
11.10 11:02:18 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
11.10 11:02:18 -<<-: core/server.query ok
11.10 11:02:18 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
11.10 11:02:18 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
11.10 11:02:18 -<<-: core/server.query ok
11.10 11:02:18 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
11.10 11:02:18 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
11.10 11:02:18 -<<-: core/server.query ok
11.10 11:02:18 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
11.10 11:02:18 -<<-: core/quest.getDaily ok
11.10 11:02:18 DB: SELECT * FROM UserAttributeTypes
11.10 11:02:18 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
11.10 11:02:18 -<<-: core/server.query ok
11.10 11:02:18 DB: SELECT * FROM UserVariableTypes
11.10 11:02:18 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
11.10 11:02:18 -<<-: core/server.query ok
11.10 11:02:18 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
11.10 11:02:18 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
11.10 11:02:18 -<<-: core/server.query ok
11.10 11:02:18 DB: SELECT * FROM ItemGroups
11.10 11:02:18 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
11.10 11:02:18 -<<-: core/server.query ok
11.10 11:02:18 DB: SELECT * FROM Bundles ORDER BY ID
11.10 11:02:18 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
11.10 11:02:18 -<<-: core/server.query ok
11.10 11:02:18 DB: SELECT * FROM BundleItems ORDER BY ID
11.10 11:02:18 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
11.10 11:02:18 -<<-: core/server.query ok
11.10 11:02:18 SHOP: loading items...
11.10 11:02:18 ->>-: core/shop.getList { _type => core/shop.getList }
11.10 11:02:18 -<<-: core/shop.getList ok
11.10 11:02:18 SHOP: 0 items loaded (0 sec)
11.10 11:02:18 DB: SELECT * FROM EffectAttributeTypes
11.10 11:02:18 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
11.10 11:02:18 -<<-: core/server.query ok
11.10 11:02:18 DB: SELECT * FROM Effects
11.10 11:02:18 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
11.10 11:02:18 -<<-: core/server.query ok
11.10 11:02:18 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoc11.10 11:04:52 ->>-: core/server.login { host => 127.0.0.1, name => ball.0, port => 2010, type => game, _type => core/server.login, externalHost => 127.0.0.1, externalPort => 2010 }
11.10 11:04:52 -<<-: server.login ok
11.10 11:04:52 DB: SELECT * FROM LocalizationStrings
11.10 11:04:52 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
11.10 11:04:52 -<<-: core/server.query ok
11.10 11:04:52 TIMER: Starting timer...
11.10 11:04:52 TIMER: Timer running...
11.10 11:04:52 DB: SELECT * FROM GameVars
11.10 11:04:52 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
11.10 11:04:52 -<<-: core/server.query ok
11.10 11:04:52 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
11.10 11:04:52 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
11.10 11:04:52 -<<-: core/server.query ok
11.10 11:04:52 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
11.10 11:04:52 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
11.10 11:04:52 -<<-: core/server.query ok
11.10 11:04:52 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
11.10 11:04:52 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
11.10 11:04:52 -<<-: core/server.query ok
11.10 11:04:52 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
11.10 11:04:52 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
11.10 11:04:52 -<<-: core/server.query ok
11.10 11:04:52 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
11.10 11:04:52 -<<-: core/quest.getDaily ok
11.10 11:04:52 DB: SELECT * FROM UserAttributeTypes
11.10 11:04:52 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
11.10 11:04:52 -<<-: core/server.query ok
11.10 11:04:52 DB: SELECT * FROM UserVariableTypes
11.10 11:04:52 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
11.10 11:04:52 -<<-: core/server.query ok
11.10 11:04:52 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
11.10 11:04:52 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
11.10 11:04:52 -<<-: core/server.query ok
11.10 11:04:52 DB: SELECT * FROM ItemGroups
11.10 11:04:52 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
11.10 11:04:52 -<<-: core/server.query ok
11.10 11:04:52 DB: SELECT * FROM Bundles ORDER BY ID
11.10 11:04:52 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
11.10 11:04:52 -<<-: core/server.query ok
11.10 11:04:52 DB: SELECT * FROM BundleItems ORDER BY ID
11.10 11:04:52 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
11.10 11:04:52 -<<-: core/server.query ok
11.10 11:04:52 SHOP: loading items...
11.10 11:04:52 ->>-: core/shop.getList { _type => core/shop.getList }
11.10 11:04:52 -<<-: core/shop.getList ok
11.10 11:04:52 SHOP: 0 items loaded (0 sec)
11.10 11:04:52 DB: SELECT * FROM EffectAttributeTypes
11.10 11:04:52 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
11.10 11:04:52 -<<-: core/server.query ok
11.10 11:04:52 DB: SELECT * FROM Effects
11.10 11:04:52 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
11.10 11:04:52 -<<-: core/server.query ok
11.10 11:04:52 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoc11.10 11:12:30 ->>-: core/server.login { host => 127.0.0.1, name => ball.0, port => 2010, type => game, _type => core/server.login, externalHost => 127.0.0.1, externalPort => 2010 }
11.10 11:12:30 -<<-: server.login ok
11.10 11:12:30 DB: SELECT * FROM LocalizationStrings
11.10 11:12:30 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
11.10 11:12:30 -<<-: core/server.query ok
11.10 11:12:30 TIMER: Starting timer...
11.10 11:12:30 TIMER: Timer running...
11.10 11:12:30 DB: SELECT * FROM GameVars
11.10 11:12:30 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
11.10 11:12:30 -<<-: core/server.query ok
11.10 11:12:30 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
11.10 11:12:30 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
11.10 11:12:30 -<<-: core/server.query ok
11.10 11:12:30 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
11.10 11:12:30 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
11.10 11:12:30 -<<-: core/server.query ok
11.10 11:12:30 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
11.10 11:12:30 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
11.10 11:12:30 -<<-: core/server.query ok
11.10 11:12:30 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
11.10 11:12:30 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
11.10 11:12:30 -<<-: core/server.query ok
11.10 11:12:30 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
11.10 11:12:30 -<<-: core/quest.getDaily ok
11.10 11:12:30 DB: SELECT * FROM UserAttributeTypes
11.10 11:12:30 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
11.10 11:12:30 -<<-: core/server.query ok
11.10 11:12:30 DB: SELECT * FROM UserVariableTypes
11.10 11:12:30 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
11.10 11:12:30 -<<-: core/server.query ok
11.10 11:12:30 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
11.10 11:12:30 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
11.10 11:12:30 -<<-: core/server.query ok
11.10 11:12:30 DB: SELECT * FROM ItemGroups
11.10 11:12:30 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
11.10 11:12:30 -<<-: core/server.query ok
11.10 11:12:30 DB: SELECT * FROM Bundles ORDER BY ID
11.10 11:12:30 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
11.10 11:12:30 -<<-: core/server.query ok
11.10 11:12:30 DB: SELECT * FROM BundleItems ORDER BY ID
11.10 11:12:30 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
11.10 11:12:30 -<<-: core/server.query ok
11.10 11:12:30 SHOP: loading items...
11.10 11:12:30 ->>-: core/shop.getList { _type => core/shop.getList }
11.10 11:12:30 -<<-: core/shop.getList ok
11.10 11:12:30 SHOP: 0 items loaded (0 sec)
11.10 11:12:30 DB: SELECT * FROM EffectAttributeTypes
11.10 11:12:30 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
11.10 11:12:30 -<<-: core/server.query ok
11.10 11:12:30 DB: SELECT * FROM Effects
11.10 11:12:30 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
11.10 11:12:30 -<<-: core/server.query ok
11.10 11:12:30 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
11.10 11:12:30 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
11.10 11:12:30 -<<-: core/server.query ok
11.10 11:12:30 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
11.10 11:12:30 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
11.10 11:12:30 -<<-: core/server.query ok
11.10 11:12:30 DB: SELECT * FROM Badges
11.10 11:12:30 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
11.10 11:12:30 -<<-: core/server.query ok
11.10 11:13:26 ->>-: core/server.login { host => 127.0.0.1, name => ball.0, port => 2010, type => game, _type => core/server.login, externalHost => 127.0.0.1, externalPort => 2010 }
11.10 11:13:26 -<<-: server.login ok
11.10 11:13:26 DB: SELECT * FROM LocalizationStrings
11.10 11:13:26 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
11.10 11:13:26 -<<-: core/server.query ok
11.10 11:13:26 TIMER: Starting timer...
11.10 11:13:26 TIMER: Timer running...
11.10 11:13:26 DB: SELECT * FROM GameVars
11.10 11:13:26 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
11.10 11:13:26 -<<-: core/server.query ok
11.10 11:13:26 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
11.10 11:13:26 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
11.10 11:13:26 -<<-: core/server.query ok
11.10 11:13:26 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
11.10 11:13:26 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
11.10 11:13:26 -<<-: core/server.query ok
11.10 11:13:26 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
11.10 11:13:26 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
11.10 11:13:26 -<<-: core/server.query ok
11.10 11:13:26 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
11.10 11:13:26 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
11.10 11:13:26 -<<-: core/server.query ok
11.10 11:13:26 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
11.10 11:13:26 -<<-: core/quest.getDaily ok
11.10 11:13:26 DB: SELECT * FROM UserAttributeTypes
11.10 11:13:26 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
11.10 11:13:26 -<<-: core/server.query ok
11.10 11:13:26 DB: SELECT * FROM UserVariableTypes
11.10 11:13:26 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
11.10 11:13:26 -<<-: core/server.query ok
11.10 11:13:26 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
11.10 11:13:26 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
11.10 11:13:26 -<<-: core/server.query ok
11.10 11:13:26 DB: SELECT * FROM ItemGroups
11.10 11:13:26 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
11.10 11:13:26 -<<-: core/server.query ok
11.10 11:13:26 DB: SELECT * FROM Bundles ORDER BY ID
11.10 11:13:26 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
11.10 11:13:26 -<<-: core/server.query ok
11.10 11:13:26 DB: SELECT * FROM BundleItems ORDER BY ID
11.10 11:13:26 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
11.10 11:13:26 -<<-: core/server.query ok
11.10 11:13:26 SHOP: loading items...
11.10 11:13:26 ->>-: core/shop.getList { _type => core/shop.getList }
11.10 11:13:26 -<<-: core/shop.getList ok
11.10 11:13:26 SHOP: 0 items loaded (0 sec)
11.10 11:13:26 DB: SELECT * FROM EffectAttributeTypes
11.10 11:13:26 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
11.10 11:13:26 -<<-: core/server.query ok
11.10 11:13:26 DB: SELECT * FROM Effects
11.10 11:13:26 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
11.10 11:13:26 -<<-: core/server.query ok
11.10 11:13:26 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
11.10 11:13:26 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
11.10 11:13:26 -<<-: core/server.query ok
11.10 11:13:26 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
11.10 11:13:26 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
11.10 11:13:26 -<<-: core/server.query ok
11.10 11:13:26 DB: SELECT * FROM Badges
11.10 11:13:26 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
11.10 11:13:26 -<<-: core/server.query ok
11.10 11:13:33 NET: Client (conid:93539362) connected to ball.0 (clients:1)
11.10 11:13:33 ++ NET: null req: user.register { password => test, name => , params => {obj: 1}, messageType => user.register }
11.10 11:16:53 ->>-: core/server.login { host => 127.0.0.1, name => ball.0, port => 2010, type => game, _type => core/server.login, externalHost => 127.0.0.1, externalPort => 2010 }
11.10 11:16:53 -<<-: server.login ok
11.10 11:16:53 DB: SELECT * FROM LocalizationStrings
11.10 11:16:53 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
11.10 11:16:53 -<<-: core/server.query ok
11.10 11:16:53 TIMER: Starting timer...
11.10 11:16:53 TIMER: Timer running...
11.10 11:16:53 DB: SELECT * FROM GameVars
11.10 11:16:53 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
11.10 11:16:53 -<<-: core/server.query ok
11.10 11:16:53 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
11.10 11:16:53 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
11.10 11:16:53 -<<-: core/server.query ok
11.10 11:16:53 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
11.10 11:16:53 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
11.10 11:16:53 -<<-: core/server.query ok
11.10 11:16:53 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
11.10 11:16:53 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
11.10 11:16:53 -<<-: core/server.query ok
11.10 11:16:53 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
11.10 11:16:53 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
11.10 11:16:53 -<<-: core/server.query ok
11.10 11:16:53 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
11.10 11:16:53 -<<-: core/quest.getDaily ok
11.10 11:16:53 DB: SELECT * FROM UserAttributeTypes
11.10 11:16:53 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
11.10 11:16:53 -<<-: core/server.query ok
11.10 11:16:53 DB: SELECT * FROM UserVariableTypes
11.10 11:16:53 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
11.10 11:16:53 -<<-: core/server.query ok
11.10 11:16:53 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
11.10 11:16:53 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
11.10 11:16:53 -<<-: core/server.query ok
11.10 11:16:53 DB: SELECT * FROM ItemGroups
11.10 11:16:53 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
11.10 11:16:53 -<<-: core/server.query ok
11.10 11:16:53 DB: SELECT * FROM Bundles ORDER BY ID
11.10 11:16:53 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
11.10 11:16:53 -<<-: core/server.query ok
11.10 11:16:53 DB: SELECT * FROM BundleItems ORDER BY ID
11.10 11:16:53 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
11.10 11:16:53 -<<-: core/server.query ok
11.10 11:16:53 SHOP: loading items...
11.10 11:16:53 ->>-: core/shop.getList { _type => core/shop.getList }
11.10 11:16:53 -<<-: core/shop.getList ok
11.10 11:16:53 SHOP: 0 items loaded (0 sec)
11.10 11:16:53 DB: SELECT * FROM EffectAttributeTypes
11.10 11:16:53 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
11.10 11:16:53 -<<-: core/server.query ok
11.10 11:16:53 DB: SELECT * FROM Effects
11.10 11:16:53 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
11.10 11:16:53 -<<-: core/server.query ok
11.10 11:16:53 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
11.10 11:16:53 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
11.10 11:16:53 -<<-: core/server.query ok
11.10 11:16:53 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
11.10 11:16:53 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
11.10 11:16:53 -<<-: core/server.query ok
11.10 11:16:53 DB: SELECT * FROM Badges
11.10 11:16:53 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
11.10 11:16:53 -<<-: core/server.query ok
11.10 11:17:00 NET: Client (conid:19005461) connected to ball.0 (clients:1)
11.10 11:17:01 ++ NET: null req: user.register { password => test, name => test1, params => {obj: 1}, messageType => user.register }
11.10 11:17:01 DB: SELECT ID FROM Users WHERE Name = E'test1'
11.10 11:17:01 ->>-: core/server.query { q => SELECT ID FROM Users WHERE Name = E'test1', _type => core/server.query }
11.10 11:17:01 -<<-: core/server.query ok
11.10 11:17:01 DB: SELECT nextval('Users_id_seq') AS id
11.10 11:17:01 ->>-: core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
11.10 11:17:01 -<<-: core/server.query ok
11.10 11:17:01 ->>-: core/user.register { password => test, name => test1, fullParams => { password => test, name => test1, networkid => , params => {obj: 1}, networktype => , messageType => user.register, id => 2 }, networkid => , connectionID => 19005461, networktype => , email => , id => 2, _type => core/user.register }
11.10 11:17:01 -<<-: core/user.register ok
11.10 11:17:01 -<<-: core/user.registerResponse null
11.10 11:17:01 == NET: null ret: user.register { type => user.register, errorCode => ok }
11.10 11:17:08 NET: Client (name:null conid:19005461 TCP) disconnected from ball.0 (clients:0)
